// Generated file, do not edit by hand, see `src/generator.rs`

impl IconData {
    const LucideAccessibility: Self = Self {
        name: "LucideAccessibility",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "16" cy = "4" r = "1" /> < path d = "m18 19 1-7-5.87.94" /> < path d = "m5 8 3-3 5.5 3-2.21 3.1" /> < path d = "M4.24 14.48c-.19.58-.27 1.2-.23 1.84a5 5 0 0 0 5.31 4.67c.65-.04 1.25-.2 1.8-.46" /> < path d = "M13.76 17.52c.19-.58.27-1.2.23-1.84a5 5 0 0 0-5.31-4.67c-.65.04-1.25.2-1.8.46" /> </ svg > }
        },
    };
    const LucideActivity: Self = Self {
        name: "LucideActivity",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "22 12 18 12 15 21 9 3 6 12 2 12" /> </ svg > }
        },
    };
    const LucideAirVent: Self = Self {
        name: "LucideAirVent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2" /> < path d = "M6 8h12" /> < path d = "M18.3 17.7a2.5 2.5 0 0 1-3.16 3.83 2.53 2.53 0 0 1-1.14-2V12" /> < path d = "M6.6 15.6A2 2 0 1 0 10 17v-5" /> </ svg > }
        },
    };
    const LucideAirplay: Self = Self {
        name: "LucideAirplay",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1" /> < polygon points = "12 15 17 21 7 21 12 15" /> </ svg > }
        },
    };
    const LucideAlarmCheck: Self = Self {
        name: "LucideAlarmCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z" /> < path d = "M5 3 2 6" /> < path d = "m22 6-3-3" /> < path d = "m6 19-2 2" /> < path d = "m18 19 2 2" /> < path d = "m9 13 2 2 4-4" /> </ svg > }
        },
    };
    const LucideAlarmClockOff: Self = Self {
        name: "LucideAlarmClockOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6.87 6.87a8 8 0 1 0 11.26 11.26" /> < path d = "M19.9 14.25A7.44 7.44 0 0 0 20 13a8 8 0 0 0-8-8 7.44 7.44 0 0 0-1.25.1" /> < path d = "m22 6-3-3" /> < path d = "m6 19-2 2" /> < path d = "m2 2 20 20" /> < path d = "M4 4 2 6" /> </ svg > }
        },
    };
    const LucideAlarmClock: Self = Self {
        name: "LucideAlarmClock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "13" r = "8" /> < path d = "M12 9v4l2 2" /> < path d = "M5 3 2 6" /> < path d = "m22 6-3-3" /> < path d = "m6 19-2 2" /> < path d = "m18 19 2 2" /> </ svg > }
        },
    };
    const LucideAlarmMinus: Self = Self {
        name: "LucideAlarmMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z" /> < path d = "M5 3 2 6" /> < path d = "m22 6-3-3" /> < path d = "m6 19-2 2" /> < path d = "m18 19 2 2" /> < path d = "M9 13h6" /> </ svg > }
        },
    };
    const LucideAlarmPlus: Self = Self {
        name: "LucideAlarmPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 21a8 8 0 1 0 0-16 8 8 0 0 0 0 16z" /> < path d = "M5 3 2 6" /> < path d = "m22 6-3-3" /> < path d = "m6 19-2 2" /> < path d = "m18 19 2 2" /> < path d = "M12 10v6" /> < path d = "M9 13h6" /> </ svg > }
        },
    };
    const LucideAlbum: Self = Self {
        name: "LucideAlbum",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < polyline points = "11 3 11 11 14 8 17 11 17 3" /> </ svg > }
        },
    };
    const LucideAlertCircle: Self = Self {
        name: "LucideAlertCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "12" /> < line x1 = "12" y1 = "16" x2 = "12.01" y2 = "16" /> </ svg > }
        },
    };
    const LucideAlertOctagon: Self = Self {
        name: "LucideAlertOctagon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "12" /> < line x1 = "12" y1 = "16" x2 = "12.01" y2 = "16" /> </ svg > }
        },
    };
    const LucideAlertTriangle: Self = Self {
        name: "LucideAlertTriangle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z" /> < line x1 = "12" y1 = "9" x2 = "12" y2 = "13" /> < line x1 = "12" y1 = "17" x2 = "12.01" y2 = "17" /> </ svg > }
        },
    };
    const LucideAlignCenterHorizontal: Self = Self {
        name: "LucideAlignCenterHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 12h20" /> < path d = "M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4" /> < path d = "M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4" /> < path d = "M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1" /> < path d = "M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1" /> </ svg > }
        },
    };
    const LucideAlignCenterVertical: Self = Self {
        name: "LucideAlignCenterVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2v20" /> < path d = "M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4" /> < path d = "M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4" /> < path d = "M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1" /> < path d = "M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1" /> </ svg > }
        },
    };
    const LucideAlignCenter: Self = Self {
        name: "LucideAlignCenter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "21" y1 = "6" x2 = "3" y2 = "6" /> < line x1 = "17" y1 = "12" x2 = "7" y2 = "12" /> < line x1 = "19" y1 = "18" x2 = "5" y2 = "18" /> </ svg > }
        },
    };
    const LucideAlignEndHorizontal: Self = Self {
        name: "LucideAlignEndHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "6" height = "16" rx = "2" /> < rect x = "14" y = "9" width = "6" height = "9" rx = "2" /> < path d = "M22 22H2" /> </ svg > }
        },
    };
    const LucideAlignEndVertical: Self = Self {
        name: "LucideAlignEndVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "16" height = "6" rx = "2" /> < rect x = "9" y = "14" width = "9" height = "6" rx = "2" /> < path d = "M22 22V2" /> </ svg > }
        },
    };
    const LucideAlignHorizontalDistributeCenter: Self = Self {
        name: "LucideAlignHorizontalDistributeCenter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "14" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M17 22v-5" /> < path d = "M17 7V2" /> < path d = "M7 22v-3" /> < path d = "M7 5V2" /> </ svg > }
        },
    };
    const LucideAlignHorizontalDistributeEnd: Self = Self {
        name: "LucideAlignHorizontalDistributeEnd",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "14" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M10 2v20" /> < path d = "M20 2v20" /> </ svg > }
        },
    };
    const LucideAlignHorizontalDistributeStart: Self = Self {
        name: "LucideAlignHorizontalDistributeStart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "14" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M4 2v20" /> < path d = "M14 2v20" /> </ svg > }
        },
    };
    const LucideAlignHorizontalJustifyCenter: Self = Self {
        name: "LucideAlignHorizontalJustifyCenter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "16" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M12 2v20" /> </ svg > }
        },
    };
    const LucideAlignHorizontalJustifyEnd: Self = Self {
        name: "LucideAlignHorizontalJustifyEnd",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "12" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M22 2v20" /> </ svg > }
        },
    };
    const LucideAlignHorizontalJustifyStart: Self = Self {
        name: "LucideAlignHorizontalJustifyStart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "16" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M2 2v20" /> </ svg > }
        },
    };
    const LucideAlignHorizontalSpaceAround: Self = Self {
        name: "LucideAlignHorizontalSpaceAround",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "9" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M4 22V2" /> < path d = "M20 22V2" /> </ svg > }
        },
    };
    const LucideAlignHorizontalSpaceBetween: Self = Self {
        name: "LucideAlignHorizontalSpaceBetween",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "5" width = "6" height = "14" rx = "2" /> < rect x = "15" y = "7" width = "6" height = "10" rx = "2" /> < path d = "M3 2v20" /> < path d = "M21 2v20" /> </ svg > }
        },
    };
    const LucideAlignJustify: Self = Self {
        name: "LucideAlignJustify",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "3" y1 = "6" x2 = "21" y2 = "6" /> < line x1 = "3" y1 = "12" x2 = "21" y2 = "12" /> < line x1 = "3" y1 = "18" x2 = "21" y2 = "18" /> </ svg > }
        },
    };
    const LucideAlignLeft: Self = Self {
        name: "LucideAlignLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "21" y1 = "6" x2 = "3" y2 = "6" /> < line x1 = "15" y1 = "12" x2 = "3" y2 = "12" /> < line x1 = "17" y1 = "18" x2 = "3" y2 = "18" /> </ svg > }
        },
    };
    const LucideAlignRight: Self = Self {
        name: "LucideAlignRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "21" y1 = "6" x2 = "3" y2 = "6" /> < line x1 = "21" y1 = "12" x2 = "9" y2 = "12" /> < line x1 = "21" y1 = "18" x2 = "7" y2 = "18" /> </ svg > }
        },
    };
    const LucideAlignStartHorizontal: Self = Self {
        name: "LucideAlignStartHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "6" width = "6" height = "16" rx = "2" /> < rect x = "14" y = "6" width = "6" height = "9" rx = "2" /> < path d = "M22 2H2" /> </ svg > }
        },
    };
    const LucideAlignStartVertical: Self = Self {
        name: "LucideAlignStartVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "14" width = "9" height = "6" rx = "2" /> < rect x = "6" y = "4" width = "16" height = "6" rx = "2" /> < path d = "M2 2v20" /> </ svg > }
        },
    };
    const LucideAlignVerticalDistributeCenter: Self = Self {
        name: "LucideAlignVerticalDistributeCenter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "14" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "4" width = "10" height = "6" rx = "2" /> < path d = "M22 7h-5" /> < path d = "M7 7H1" /> < path d = "M22 17h-3" /> < path d = "M5 17H2" /> </ svg > }
        },
    };
    const LucideAlignVerticalDistributeEnd: Self = Self {
        name: "LucideAlignVerticalDistributeEnd",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "14" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "4" width = "10" height = "6" rx = "2" /> < path d = "M2 20h20" /> < path d = "M2 10h20" /> </ svg > }
        },
    };
    const LucideAlignVerticalDistributeStart: Self = Self {
        name: "LucideAlignVerticalDistributeStart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "14" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "4" width = "10" height = "6" rx = "2" /> < path d = "M2 14h20" /> < path d = "M2 4h20" /> </ svg > }
        },
    };
    const LucideAlignVerticalJustifyCenter: Self = Self {
        name: "LucideAlignVerticalJustifyCenter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "16" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "2" width = "10" height = "6" rx = "2" /> < path d = "M2 12h20" /> </ svg > }
        },
    };
    const LucideAlignVerticalJustifyEnd: Self = Self {
        name: "LucideAlignVerticalJustifyEnd",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "12" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "2" width = "10" height = "6" rx = "2" /> < path d = "M2 22h20" /> </ svg > }
        },
    };
    const LucideAlignVerticalJustifyStart: Self = Self {
        name: "LucideAlignVerticalJustifyStart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "16" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "6" width = "10" height = "6" rx = "2" /> < path d = "M2 2h20" /> </ svg > }
        },
    };
    const LucideAlignVerticalSpaceAround: Self = Self {
        name: "LucideAlignVerticalSpaceAround",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "7" y = "9" width = "10" height = "6" rx = "2" /> < path d = "M22 20H2" /> < path d = "M22 4H2" /> </ svg > }
        },
    };
    const LucideAlignVerticalSpaceBetween: Self = Self {
        name: "LucideAlignVerticalSpaceBetween",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "15" width = "14" height = "6" rx = "2" /> < rect x = "7" y = "3" width = "10" height = "6" rx = "2" /> < path d = "M2 21h20" /> < path d = "M2 3h20" /> </ svg > }
        },
    };
    const LucideAnchor: Self = Self {
        name: "LucideAnchor",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "5" r = "3" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "8" /> < path d = "M5 12H2a10 10 0 0 0 20 0h-3" /> </ svg > }
        },
    };
    const LucideAngry: Self = Self {
        name: "LucideAngry",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M16 16s-1.5-2-4-2-4 2-4 2" /> < path d = "M7.5 8 10 9" /> < path d = "m14 9 2.5-1" /> < path d = "M9 10h0" /> < path d = "M15 10h0" /> </ svg > }
        },
    };
    const LucideAnnoyed: Self = Self {
        name: "LucideAnnoyed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M8 15h8" /> < path d = "M8 9h2" /> < path d = "M14 9h2" /> </ svg > }
        },
    };
    const LucideAperture: Self = Self {
        name: "LucideAperture",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "14.31" y1 = "8" x2 = "20.05" y2 = "17.94" /> < line x1 = "9.69" y1 = "8" x2 = "21.17" y2 = "8" /> < line x1 = "7.38" y1 = "12" x2 = "13.12" y2 = "2.06" /> < line x1 = "9.69" y1 = "16" x2 = "3.95" y2 = "6.06" /> < line x1 = "14.31" y1 = "16" x2 = "2.83" y2 = "16" /> < line x1 = "16.62" y1 = "12" x2 = "10.88" y2 = "21.94" /> </ svg > }
        },
    };
    const LucideApple: Self = Self {
        name: "LucideApple",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z" /> < path d = "M10 2c1 .5 2 2 2 5" /> </ svg > }
        },
    };
    const LucideArchiveRestore: Self = Self {
        name: "LucideArchiveRestore",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "5" rx = "2" /> < path d = "M12 13v7" /> < path d = "m9 16 3-3 3 3" /> < path d = "M4 9v9a2 2 0 0 0 2 2h2" /> < path d = "M20 9v9a2 2 0 0 1-2 2h-2" /> </ svg > }
        },
    };
    const LucideArchive: Self = Self {
        name: "LucideArchive",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "5" rx = "2" /> < path d = "M4 9v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9" /> < path d = "M10 13h4" /> </ svg > }
        },
    };
    const LucideArmchair: Self = Self {
        name: "LucideArmchair",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3" /> < path d = "M3 11v5a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H7v-2a2 2 0 0 0-4 0Z" /> < path d = "M5 18v2" /> < path d = "M19 18v2" /> </ svg > }
        },
    };
    const LucideArrowBigDown: Self = Self {
        name: "LucideArrowBigDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 3h6v11h4l-7 7-7-7h4z" /> </ svg > }
        },
    };
    const LucideArrowBigLeft: Self = Self {
        name: "LucideArrowBigLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m3 12 7-7v4h11v6H10v4z" /> </ svg > }
        },
    };
    const LucideArrowBigRight: Self = Self {
        name: "LucideArrowBigRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21 12-7-7v4H3v6h11v4z" /> </ svg > }
        },
    };
    const LucideArrowBigUp: Self = Self {
        name: "LucideArrowBigUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 21V10H5l7-7 7 7h-4v11z" /> </ svg > }
        },
    };
    const LucideArrowDownCircle: Self = Self {
        name: "LucideArrowDownCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "8 12 12 16 16 12" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "16" /> </ svg > }
        },
    };
    const LucideArrowDownLeft: Self = Self {
        name: "LucideArrowDownLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "17" y1 = "7" x2 = "7" y2 = "17" /> < polyline points = "17 17 7 17 7 7" /> </ svg > }
        },
    };
    const LucideArrowDownRight: Self = Self {
        name: "LucideArrowDownRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "7" y1 = "7" x2 = "17" y2 = "17" /> < polyline points = "17 7 17 17 7 17" /> </ svg > }
        },
    };
    const LucideArrowDown: Self = Self {
        name: "LucideArrowDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "5" x2 = "12" y2 = "19" /> < polyline points = "19 12 12 19 5 12" /> </ svg > }
        },
    };
    const LucideArrowLeftCircle: Self = Self {
        name: "LucideArrowLeftCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 8 8 12 12 16" /> < line x1 = "16" y1 = "12" x2 = "8" y2 = "12" /> </ svg > }
        },
    };
    const LucideArrowLeftRight: Self = Self {
        name: "LucideArrowLeftRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "17 11 21 7 17 3" /> < line x1 = "21" y1 = "7" x2 = "9" y2 = "7" /> < polyline points = "7 21 3 17 7 13" /> < line x1 = "15" y1 = "17" x2 = "3" y2 = "17" /> </ svg > }
        },
    };
    const LucideArrowLeft: Self = Self {
        name: "LucideArrowLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "19" y1 = "12" x2 = "5" y2 = "12" /> < polyline points = "12 19 5 12 12 5" /> </ svg > }
        },
    };
    const LucideArrowRightCircle: Self = Self {
        name: "LucideArrowRightCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 16 16 12 12 8" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucideArrowRight: Self = Self {
        name: "LucideArrowRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "5" y1 = "12" x2 = "19" y2 = "12" /> < polyline points = "12 5 19 12 12 19" /> </ svg > }
        },
    };
    const LucideArrowUpCircle: Self = Self {
        name: "LucideArrowUpCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "16 12 12 8 8 12" /> < line x1 = "12" y1 = "16" x2 = "12" y2 = "8" /> </ svg > }
        },
    };
    const LucideArrowUpDown: Self = Self {
        name: "LucideArrowUpDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "11 17 7 21 3 17" /> < line x1 = "7" y1 = "21" x2 = "7" y2 = "9" /> < polyline points = "21 7 17 3 13 7" /> < line x1 = "17" y1 = "15" x2 = "17" y2 = "3" /> </ svg > }
        },
    };
    const LucideArrowUpLeft: Self = Self {
        name: "LucideArrowUpLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "17" y1 = "17" x2 = "7" y2 = "7" /> < polyline points = "7 17 7 7 17 7" /> </ svg > }
        },
    };
    const LucideArrowUpRight: Self = Self {
        name: "LucideArrowUpRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "7" y1 = "17" x2 = "17" y2 = "7" /> < polyline points = "7 7 17 7 17 17" /> </ svg > }
        },
    };
    const LucideArrowUp: Self = Self {
        name: "LucideArrowUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "19" x2 = "12" y2 = "5" /> < polyline points = "5 12 12 5 19 12" /> </ svg > }
        },
    };
    const LucideAsterisk: Self = Self {
        name: "LucideAsterisk",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 6v12" /> < path d = "M17.196 9 6.804 15" /> < path d = "m6.804 9 10.392 6" /> </ svg > }
        },
    };
    const LucideAtSign: Self = Self {
        name: "LucideAtSign",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "4" /> < path d = "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94" /> </ svg > }
        },
    };
    const LucideAward: Self = Self {
        name: "LucideAward",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "8" r = "6" /> < path d = "M15.477 12.89 17 22l-5-3-5 3 1.523-9.11" /> </ svg > }
        },
    };
    const LucideAxe: Self = Self {
        name: "LucideAxe",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m14 12-8.501 8.501a2.12 2.12 0 0 1-2.998 0h-.002a2.12 2.12 0 0 1 0-2.998L11 9.002" /> < path d = "m9 7 4-4 6 6h3l-.13.648a7.648 7.648 0 0 1-5.081 5.756L15 16v-3z" /> </ svg > }
        },
    };
    const LucideAxis3D: Self = Self {
        name: "LucideAxis3D",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 4v16h16" /> < path d = "m4 20 7-7" /> </ svg > }
        },
    };
    const LucideBaby: Self = Self {
        name: "LucideBaby",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 12h0" /> < path d = "M15 12h0" /> < path d = "M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5" /> < path d = "M19 6.3a9 9 0 0 1 1.8 3.9 2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1" /> </ svg > }
        },
    };
    const LucideBackpack: Self = Self {
        name: "LucideBackpack",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20V10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2Z" /> < path d = "M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2" /> < path d = "M8 21v-5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v5" /> < path d = "M8 10h8" /> < path d = "M8 18h8" /> </ svg > }
        },
    };
    const LucideBaggageClaim: Self = Self {
        name: "LucideBaggageClaim",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2" /> < path d = "M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10" /> < rect x = "8" y = "6" width = "13" height = "8" rx = "1" /> < circle cx = "18" cy = "20" r = "2" /> < circle cx = "9" cy = "20" r = "2" /> </ svg > }
        },
    };
    const LucideBanana: Self = Self {
        name: "LucideBanana",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5" /> < path d = "M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z" /> </ svg > }
        },
    };
    const LucideBanknote: Self = Self {
        name: "LucideBanknote",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "6" width = "20" height = "12" rx = "2" /> < circle cx = "12" cy = "12" r = "2" /> < path d = "M6 12h.01M18 12h.01" /> </ svg > }
        },
    };
    const LucideBarChart2: Self = Self {
        name: "LucideBarChart2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "18" y1 = "20" x2 = "18" y2 = "10" /> < line x1 = "12" y1 = "20" x2 = "12" y2 = "4" /> < line x1 = "6" y1 = "20" x2 = "6" y2 = "14" /> </ svg > }
        },
    };
    const LucideBarChart3: Self = Self {
        name: "LucideBarChart3",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3v18h18" /> < path d = "M18 17V9" /> < path d = "M13 17V5" /> < path d = "M8 17v-3" /> </ svg > }
        },
    };
    const LucideBarChart4: Self = Self {
        name: "LucideBarChart4",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3v18h18" /> < path d = "M13 17V9" /> < path d = "M18 17V5" /> < path d = "M8 17v-3" /> </ svg > }
        },
    };
    const LucideBarChartHorizontal: Self = Self {
        name: "LucideBarChartHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3v18h18" /> < path d = "M7 16h8" /> < path d = "M7 11h12" /> < path d = "M7 6h3" /> </ svg > }
        },
    };
    const LucideBarChart: Self = Self {
        name: "LucideBarChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "20" x2 = "12" y2 = "10" /> < line x1 = "18" y1 = "20" x2 = "18" y2 = "4" /> < line x1 = "6" y1 = "20" x2 = "6" y2 = "16" /> </ svg > }
        },
    };
    const LucideBaseline: Self = Self {
        name: "LucideBaseline",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16" /> < path d = "m6 16 6-12 6 12" /> < path d = "M8 12h8" /> </ svg > }
        },
    };
    const LucideBath: Self = Self {
        name: "LucideBath",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5" /> < line x1 = "10" y1 = "5" x2 = "8" y2 = "7" /> < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> < line x1 = "7" y1 = "19" x2 = "7" y2 = "21" /> < line x1 = "17" y1 = "19" x2 = "17" y2 = "21" /> </ svg > }
        },
    };
    const LucideBatteryCharging: Self = Self {
        name: "LucideBatteryCharging",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 7h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2" /> < path d = "M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1" /> < path d = "m11 7-3 5h4l-3 5" /> < line x1 = "22" x2 = "22" y1 = "11" y2 = "13" /> </ svg > }
        },
    };
    const LucideBatteryFull: Self = Self {
        name: "LucideBatteryFull",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "16" height = "10" rx = "2" ry = "2" /> < line x1 = "22" x2 = "22" y1 = "11" y2 = "13" /> < line x1 = "6" x2 = "6" y1 = "11" y2 = "13" /> < line x1 = "10" x2 = "10" y1 = "11" y2 = "13" /> < line x1 = "14" x2 = "14" y1 = "11" y2 = "13" /> </ svg > }
        },
    };
    const LucideBatteryLow: Self = Self {
        name: "LucideBatteryLow",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "16" height = "10" rx = "2" ry = "2" /> < line x1 = "22" x2 = "22" y1 = "11" y2 = "13" /> < line x1 = "6" x2 = "6" y1 = "11" y2 = "13" /> </ svg > }
        },
    };
    const LucideBatteryMedium: Self = Self {
        name: "LucideBatteryMedium",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "16" height = "10" rx = "2" ry = "2" /> < line x1 = "22" x2 = "22" y1 = "11" y2 = "13" /> < line x1 = "6" x2 = "6" y1 = "11" y2 = "13" /> < line x1 = "10" x2 = "10" y1 = "11" y2 = "13" /> </ svg > }
        },
    };
    const LucideBattery: Self = Self {
        name: "LucideBattery",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "16" height = "10" rx = "2" ry = "2" /> < line x1 = "22" x2 = "22" y1 = "11" y2 = "13" /> </ svg > }
        },
    };
    const LucideBeaker: Self = Self {
        name: "LucideBeaker",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4.5 3h15" /> < path d = "M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3" /> < path d = "M6 14h12" /> </ svg > }
        },
    };
    const LucideBedDouble: Self = Self {
        name: "LucideBedDouble",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8" /> < path d = "M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4" /> < path d = "M12 4v6" /> < path d = "M2 18h20" /> </ svg > }
        },
    };
    const LucideBedSingle: Self = Self {
        name: "LucideBedSingle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8" /> < path d = "M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4" /> < path d = "M3 18h18" /> </ svg > }
        },
    };
    const LucideBed: Self = Self {
        name: "LucideBed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 4v16" /> < path d = "M2 8h18a2 2 0 0 1 2 2v10" /> < path d = "M2 17h20" /> < path d = "M6 8v9" /> </ svg > }
        },
    };
    const LucideBeer: Self = Self {
        name: "LucideBeer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 11h1a3 3 0 0 1 0 6h-1" /> < path d = "M9 12v6" /> < path d = "M13 12v6" /> < path d = "M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z" /> < path d = "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8" /> </ svg > }
        },
    };
    const LucideBellMinus: Self = Self {
        name: "LucideBellMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13.73 21a2 2 0 0 1-3.46 0" /> < path d = "M21 5h-6" /> < path d = "M18.021 9C18.29 15.193 21 17 21 17H3s3-2 3-9a6 6 0 0 1 7-5.916" /> </ svg > }
        },
    };
    const LucideBellOff: Self = Self {
        name: "LucideBellOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13.73 21a2 2 0 0 1-3.46 0" /> < path d = "M18.63 13A17.888 17.888 0 0 1 18 8" /> < path d = "M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14" /> < path d = "M18 8a6 6 0 0 0-9.33-5" /> < path d = "m2 2 20 20" /> </ svg > }
        },
    };
    const LucideBellPlus: Self = Self {
        name: "LucideBellPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.387 12C19.198 15.799 21 17 21 17H3s3-2 3-9a6 6 0 0 1 7-5.916" /> < path d = "M13.73 21a2 2 0 0 1-3.46 0" /> < path d = "M18 2v6" /> < path d = "M21 5h-6" /> </ svg > }
        },
    };
    const LucideBellRing: Self = Self {
        name: "LucideBellRing",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9" /> < path d = "M13.73 21a2 2 0 0 1-3.46 0" /> < path d = "M2 8c0-2.2.7-4.3 2-6" /> < path d = "M22 8a10 10 0 0 0-2-6" /> </ svg > }
        },
    };
    const LucideBell: Self = Self {
        name: "LucideBell",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9" /> < path d = "M13.73 21a2 2 0 0 1-3.46 0" /> </ svg > }
        },
    };
    const LucideBike: Self = Self {
        name: "LucideBike",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "5.5" cy = "17.5" r = "3.5" /> < circle cx = "18.5" cy = "17.5" r = "3.5" /> < path d = "M15 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-3 11.5V14l-3-3 4-3 2 3h2" /> </ svg > }
        },
    };
    const LucideBinary: Self = Self {
        name: "LucideBinary",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 20h4" /> < path d = "M14 10h4" /> < path d = "M6 14h2v6" /> < path d = "M14 4h2v6" /> < rect x = "6" y = "4" width = "4" height = "6" /> < rect x = "14" y = "14" width = "4" height = "6" /> </ svg > }
        },
    };
    const LucideBitcoin: Self = Self {
        name: "LucideBitcoin",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727" /> </ svg > }
        },
    };
    const LucideBluetoothConnected: Self = Self {
        name: "LucideBluetoothConnected",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 7 10 10-5 5V2l5 5L7 17" /> < line x1 = "18" y1 = "12" y2 = "12" x2 = "21" /> < line x1 = "3" y1 = "12" y2 = "12" x2 = "6" /> </ svg > }
        },
    };
    const LucideBluetoothOff: Self = Self {
        name: "LucideBluetoothOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m17 17-5 5V12l-5 5" /> < path d = "m2 2 20 20" /> < path d = "M14.5 9.5 17 7l-5-5v4.5" /> </ svg > }
        },
    };
    const LucideBluetoothSearching: Self = Self {
        name: "LucideBluetoothSearching",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 7 10 10-5 5V2l5 5L7 17" /> < path d = "M20.83 14.83a4 4 0 0 0 0-5.66" /> < path d = "M18 12h.01" /> </ svg > }
        },
    };
    const LucideBluetooth: Self = Self {
        name: "LucideBluetooth",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 7 10 10-5 5V2l5 5L7 17" /> </ svg > }
        },
    };
    const LucideBold: Self = Self {
        name: "LucideBold",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z" /> < path d = "M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z" /> </ svg > }
        },
    };
    const LucideBomb: Self = Self {
        name: "LucideBomb",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "11" cy = "13" r = "9" /> < path d = "m19.5 9.5 1.8-1.8a2.4 2.4 0 0 0 0-3.4l-1.6-1.6a2.41 2.41 0 0 0-3.4 0l-1.8 1.8" /> < path d = "m22 2-1.5 1.5" /> </ svg > }
        },
    };
    const LucideBone: Self = Self {
        name: "LucideBone",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.6 9.82c-.52-.21-1.15-.25-1.54.15l-7.07 7.06c-.39.39-.36 1.03-.15 1.54.12.3.16.6.16.93a2.5 2.5 0 0 1-5 0c0-.26-.24-.5-.5-.5a2.5 2.5 0 1 1 .96-4.82c.5.21 1.14.25 1.53-.15l7.07-7.06c.39-.39.36-1.03.15-1.54-.12-.3-.21-.6-.21-.93a2.5 2.5 0 0 1 5 0c.01.26.24.49.5.5a2.5 2.5 0 1 1-.9 4.82Z" /> </ svg > }
        },
    };
    const LucideBookOpenCheck: Self = Self {
        name: "LucideBookOpenCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 3H2v15h7c1.7 0 3 1.3 3 3V7c0-2.2-1.8-4-4-4Z" /> < path d = "m16 12 2 2 4-4" /> < path d = "M22 6V3h-6c-2.2 0-4 1.8-4 4v14c0-1.7 1.3-3 3-3h7v-2.3" /> </ svg > }
        },
    };
    const LucideBookOpen: Self = Self {
        name: "LucideBookOpen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z" /> < path d = "M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z" /> </ svg > }
        },
    };
    const LucideBook: Self = Self {
        name: "LucideBook",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 19.5A2.5 2.5 0 0 1 6.5 17H20" /> < path d = "M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z" /> </ svg > }
        },
    };
    const LucideBookmarkMinus: Self = Self {
        name: "LucideBookmarkMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z" /> < line x1 = "15" x2 = "9" y1 = "10" y2 = "10" /> </ svg > }
        },
    };
    const LucideBookmarkPlus: Self = Self {
        name: "LucideBookmarkPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z" /> < line x1 = "12" x2 = "12" y1 = "7" y2 = "13" /> < line x1 = "15" x2 = "9" y1 = "10" y2 = "10" /> </ svg > }
        },
    };
    const LucideBookmark: Self = Self {
        name: "LucideBookmark",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z" /> </ svg > }
        },
    };
    const LucideBot: Self = Self {
        name: "LucideBot",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "11" width = "18" height = "10" rx = "2" /> < circle cx = "12" cy = "5" r = "2" /> < path d = "M12 7v4" /> < line x1 = "8" y1 = "16" x2 = "8" y2 = "16" /> < line x1 = "16" y1 = "16" x2 = "16" y2 = "16" /> </ svg > }
        },
    };
    const LucideBoxSelect: Self = Self {
        name: "LucideBoxSelect",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 3a2 2 0 0 0-2 2" /> < path d = "M19 3a2 2 0 0 1 2 2" /> < path d = "M21 19a2 2 0 0 1-2 2" /> < path d = "M5 21a2 2 0 0 1-2-2" /> < path d = "M9 3h1" /> < path d = "M9 21h1" /> < path d = "M14 3h1" /> < path d = "M14 21h1" /> < path d = "M3 9v1" /> < path d = "M21 9v1" /> < path d = "M3 14v1" /> < path d = "M21 14v1" /> </ svg > }
        },
    };
    const LucideBox: Self = Self {
        name: "LucideBox",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucideBoxes: Self = Self {
        name: "LucideBoxes",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z" /> < path d = "m7 16.5-4.74-2.85" /> < path d = "m7 16.5 5-3" /> < path d = "M7 16.5v5.17" /> < path d = "M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z" /> < path d = "m17 16.5-5-3" /> < path d = "m17 16.5 4.74-2.85" /> < path d = "M17 16.5v5.17" /> < path d = "M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z" /> < path d = "M12 8 7.26 5.15" /> < path d = "m12 8 4.74-2.85" /> < path d = "M12 13.5V8" /> </ svg > }
        },
    };
    const LucideBriefcase: Self = Self {
        name: "LucideBriefcase",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "20" height = "14" rx = "2" ry = "2" /> < path d = "M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" /> </ svg > }
        },
    };
    const LucideBrush: Self = Self {
        name: "LucideBrush",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m9.06 11.9 8.07-8.06a2.85 2.85 0 1 1 4.03 4.03l-8.06 8.08" /> < path d = "M7.07 14.94c-1.66 0-3 1.35-3 3.02 0 1.33-2.5 1.52-2 2.02 1.08 1.1 2.49 2.02 4 2.02 2.2 0 4-1.8 4-4.04a3.01 3.01 0 0 0-3-3.02z" /> </ svg > }
        },
    };
    const LucideBug: Self = Self {
        name: "LucideBug",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect width = "8" height = "14" x = "8" y = "6" rx = "4" /> < path d = "m19 7-3 2" /> < path d = "m5 7 3 2" /> < path d = "m19 19-3-2" /> < path d = "m5 19 3-2" /> < path d = "M20 13h-4" /> < path d = "M4 13h4" /> < path d = "m10 4 1 2" /> < path d = "m14 4-1 2" /> </ svg > }
        },
    };
    const LucideBuilding2: Self = Self {
        name: "LucideBuilding2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 22V4c0-.27 0-.55.07-.82a1.477 1.477 0 0 1 1.1-1.11C7.46 2 8.73 2 9 2h7c.27 0 .55 0 .82.07a1.477 1.477 0 0 1 1.11 1.1c.07.28.07.56.07.83v18H6Z" /> < path d = "M2 14v6c0 1.1.9 2 2 2h2V12H4c-.27 0-.55 0-.82.07-.27.07-.52.2-.72.4-.19.19-.32.44-.39.71A3.4 3.4 0 0 0 2 14Z" /> < path d = "M20.82 9.07A3.4 3.4 0 0 0 20 9h-2v13h2a2 2 0 0 0 2-2v-9c0-.28 0-.55-.07-.82-.07-.27-.2-.52-.4-.72-.19-.19-.44-.32-.71-.39Z" /> < path d = "M10 6h4" /> < path d = "M10 10h4" /> < path d = "M10 14h4" /> < path d = "M10 18h4" /> </ svg > }
        },
    };
    const LucideBuilding: Self = Self {
        name: "LucideBuilding",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "16" height = "20" rx = "2" ry = "2" /> < path d = "M9 22v-4h6v4" /> < path d = "M8 6h.01" /> < path d = "M16 6h.01" /> < path d = "M12 6h.01" /> < path d = "M12 10h.01" /> < path d = "M12 14h.01" /> < path d = "M16 10h.01" /> < path d = "M16 14h.01" /> < path d = "M8 10h.01" /> < path d = "M8 14h.01" /> </ svg > }
        },
    };
    const LucideBus: Self = Self {
        name: "LucideBus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 17h2l.64-2.54c.24-.959.24-1.962 0-2.92l-1.07-4.27A3 3 0 0 0 17.66 5H4a2 2 0 0 0-2 2v10h2" /> < path d = "M14 17H9" /> < circle cx = "6.5" cy = "17.5" r = "2.5" /> < circle cx = "16.5" cy = "17.5" r = "2.5" /> </ svg > }
        },
    };
    const LucideCake: Self = Self {
        name: "LucideCake",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8" /> < path d = "M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1" /> < path d = "M2 21h20" /> < path d = "M7 8v2" /> < path d = "M12 8v2" /> < path d = "M17 8v2" /> < path d = "M7 4h.01" /> < path d = "M12 4h.01" /> < path d = "M17 4h.01" /> </ svg > }
        },
    };
    const LucideCalculator: Self = Self {
        name: "LucideCalculator",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "16" height = "20" rx = "2" /> < line x1 = "8" x2 = "16" y1 = "6" y2 = "6" /> < line x1 = "16" x2 = "16" y1 = "14" y2 = "18" /> < path d = "M16 10h.01" /> < path d = "M12 10h.01" /> < path d = "M8 10h.01" /> < path d = "M12 14h.01" /> < path d = "M8 14h.01" /> < path d = "M12 18h.01" /> < path d = "M8 18h.01" /> </ svg > }
        },
    };
    const LucideCalendarCheck2: Self = Self {
        name: "LucideCalendarCheck2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < path d = "m16 20 2 2 4-4" /> </ svg > }
        },
    };
    const LucideCalendarCheck: Self = Self {
        name: "LucideCalendarCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < path d = "m9 16 2 2 4-4" /> </ svg > }
        },
    };
    const LucideCalendarClock: Self = Self {
        name: "LucideCalendarClock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5" /> < path d = "M16 2v4" /> < path d = "M8 2v4" /> < path d = "M3 10h5" /> < path d = "M17.5 17.5 16 16.25V14" /> < path d = "M22 16a6 6 0 1 1-12 0 6 6 0 0 1 12 0Z" /> </ svg > }
        },
    };
    const LucideCalendarDays: Self = Self {
        name: "LucideCalendarDays",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < path d = "M8 14h.01" /> < path d = "M12 14h.01" /> < path d = "M16 14h.01" /> < path d = "M8 18h.01" /> < path d = "M12 18h.01" /> < path d = "M16 18h.01" /> </ svg > }
        },
    };
    const LucideCalendarHeart: Self = Self {
        name: "LucideCalendarHeart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 10V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7" /> < path d = "M16 2v4" /> < path d = "M8 2v4" /> < path d = "M3 10h18" /> < path d = "M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z" /> </ svg > }
        },
    };
    const LucideCalendarMinus: Self = Self {
        name: "LucideCalendarMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < line x1 = "16" y1 = "19" x2 = "22" y2 = "19" /> </ svg > }
        },
    };
    const LucideCalendarOff: Self = Self {
        name: "LucideCalendarOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4.18 4.18A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18" /> < path d = "M21 15.5V6a2 2 0 0 0-2-2H9.5" /> < path d = "M16 2v4" /> < path d = "M3 10h7" /> < path d = "M21 10h-5.5" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideCalendarPlus: Self = Self {
        name: "LucideCalendarPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < line x1 = "19" y1 = "16" x2 = "19" y2 = "22" /> < line x1 = "16" y1 = "19" x2 = "22" y2 = "19" /> </ svg > }
        },
    };
    const LucideCalendarRange: Self = Self {
        name: "LucideCalendarRange",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < path d = "M17 14h-6" /> < path d = "M13 18H7" /> < path d = "M7 14h.01" /> < path d = "M17 18h.01" /> </ svg > }
        },
    };
    const LucideCalendarSearch: Self = Self {
        name: "LucideCalendarSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 12V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7.5" /> < path d = "M16 2v4" /> < path d = "M8 2v4" /> < path d = "M3 10h18" /> < path d = "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z" /> < path d = "m22 22-1.5-1.5" /> </ svg > }
        },
    };
    const LucideCalendarX2: Self = Self {
        name: "LucideCalendarX2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < line x1 = "17" y1 = "17" x2 = "22" y2 = "22" /> < line x1 = "17" y1 = "22" x2 = "22" y2 = "17" /> </ svg > }
        },
    };
    const LucideCalendarX: Self = Self {
        name: "LucideCalendarX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> < line x1 = "10" y1 = "14" x2 = "14" y2 = "18" /> < line x1 = "14" y1 = "14" x2 = "10" y2 = "18" /> </ svg > }
        },
    };
    const LucideCalendar: Self = Self {
        name: "LucideCalendar",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "6" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "6" /> < line x1 = "3" y1 = "10" x2 = "21" y2 = "10" /> </ svg > }
        },
    };
    const LucideCameraOff: Self = Self {
        name: "LucideCameraOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < path d = "M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16" /> < path d = "M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5" /> < path d = "M14.121 15.121A3 3 0 1 1 9.88 10.88" /> </ svg > }
        },
    };
    const LucideCamera: Self = Self {
        name: "LucideCamera",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z" /> < circle cx = "12" cy = "13" r = "3" /> </ svg > }
        },
    };
    const LucideCar: Self = Self {
        name: "LucideCar",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14 16H9m10 0h3v-3.15a1 1 0 0 0-.84-.99L16 11l-2.7-3.6a1 1 0 0 0-.8-.4H5.24a2 2 0 0 0-1.8 1.1l-.8 1.63A6 6 0 0 0 2 12.42V16h2" /> < circle cx = "6.5" cy = "16.5" r = "2.5" /> < circle cx = "16.5" cy = "16.5" r = "2.5" /> </ svg > }
        },
    };
    const LucideCarrot: Self = Self {
        name: "LucideCarrot",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46" /> < path d = "M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z" /> < path d = "M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z" /> </ svg > }
        },
    };
    const LucideCast: Self = Self {
        name: "LucideCast",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6" /> < path d = "M2 12a9 9 0 0 1 8 8" /> < path d = "M2 16a5 5 0 0 1 4 4" /> < line x1 = "2" y1 = "20" x2 = "2.01" y2 = "20" /> </ svg > }
        },
    };
    const LucideCheckCircle2: Self = Self {
        name: "LucideCheckCircle2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z" /> < path d = "m9 12 2 2 4-4" /> </ svg > }
        },
    };
    const LucideCheckCircle: Self = Self {
        name: "LucideCheckCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 11.08V12a10 10 0 1 1-5.93-9.14" /> < polyline points = "22 4 12 14.01 9 11.01" /> </ svg > }
        },
    };
    const LucideCheckSquare: Self = Self {
        name: "LucideCheckSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "9 11 12 14 22 4" /> < path d = "M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11" /> </ svg > }
        },
    };
    const LucideCheck: Self = Self {
        name: "LucideCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "20 6 9 17 4 12" /> </ svg > }
        },
    };
    const LucideChefHat: Self = Self {
        name: "LucideChefHat",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 13.87A4 4 0 0 1 7.41 6a5.11 5.11 0 0 1 1.05-1.54 5 5 0 0 1 7.08 0A5.11 5.11 0 0 1 16.59 6 4 4 0 0 1 18 13.87V21H6Z" /> < line x1 = "6" y1 = "17" x2 = "18" y2 = "17" /> </ svg > }
        },
    };
    const LucideCherry: Self = Self {
        name: "LucideCherry",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z" /> < path d = "M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z" /> < path d = "M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12" /> < path d = "M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z" /> </ svg > }
        },
    };
    const LucideChevronDown: Self = Self {
        name: "LucideChevronDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "6 9 12 15 18 9" /> </ svg > }
        },
    };
    const LucideChevronFirst: Self = Self {
        name: "LucideChevronFirst",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "17 18 11 12 17 6" /> < path d = "M7 6v12" /> </ svg > }
        },
    };
    const LucideChevronLast: Self = Self {
        name: "LucideChevronLast",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "7 18 13 12 7 6" /> < path d = "M17 6v12" /> </ svg > }
        },
    };
    const LucideChevronLeft: Self = Self {
        name: "LucideChevronLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "15 18 9 12 15 6" /> </ svg > }
        },
    };
    const LucideChevronRight: Self = Self {
        name: "LucideChevronRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "9 18 15 12 9 6" /> </ svg > }
        },
    };
    const LucideChevronUp: Self = Self {
        name: "LucideChevronUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "18 15 12 9 6 15" /> </ svg > }
        },
    };
    const LucideChevronsDownUp: Self = Self {
        name: "LucideChevronsDownUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 20 5-5 5 5" /> < path d = "m7 4 5 5 5-5" /> </ svg > }
        },
    };
    const LucideChevronsDown: Self = Self {
        name: "LucideChevronsDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "7 13 12 18 17 13" /> < polyline points = "7 6 12 11 17 6" /> </ svg > }
        },
    };
    const LucideChevronsLeftRight: Self = Self {
        name: "LucideChevronsLeftRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m9 7-5 5 5 5" /> < path d = "m15 7 5 5-5 5" /> </ svg > }
        },
    };
    const LucideChevronsLeft: Self = Self {
        name: "LucideChevronsLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "11 17 6 12 11 7" /> < polyline points = "18 17 13 12 18 7" /> </ svg > }
        },
    };
    const LucideChevronsRightLeft: Self = Self {
        name: "LucideChevronsRightLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m20 17-5-5 5-5" /> < path d = "m4 17 5-5-5-5" /> </ svg > }
        },
    };
    const LucideChevronsRight: Self = Self {
        name: "LucideChevronsRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "13 17 18 12 13 7" /> < polyline points = "6 17 11 12 6 7" /> </ svg > }
        },
    };
    const LucideChevronsUpDown: Self = Self {
        name: "LucideChevronsUpDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 15 5 5 5-5" /> < path d = "m7 9 5-5 5 5" /> </ svg > }
        },
    };
    const LucideChevronsUp: Self = Self {
        name: "LucideChevronsUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "17 11 12 6 7 11" /> < polyline points = "17 18 12 13 7 18" /> </ svg > }
        },
    };
    const LucideChrome: Self = Self {
        name: "LucideChrome",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < circle cx = "12" cy = "12" r = "4" /> < line x1 = "21.17" y1 = "8" x2 = "12" y2 = "8" /> < line x1 = "3.95" y1 = "6.06" x2 = "8.54" y2 = "14" /> < line x1 = "10.88" y1 = "21.94" x2 = "15.46" y2 = "14" /> </ svg > }
        },
    };
    const LucideCigaretteOff: Self = Self {
        name: "LucideCigaretteOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < path d = "M12 12H2v4h14" /> < path d = "M22 12v4" /> < path d = "M18 12h-.5" /> < path d = "M7 12v4" /> < path d = "M18 8c0-2.5-2-2.5-2-5" /> < path d = "M22 8c0-2.5-2-2.5-2-5" /> </ svg > }
        },
    };
    const LucideCigarette: Self = Self {
        name: "LucideCigarette",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 12H2v4h16" /> < path d = "M22 12v4" /> < path d = "M7 12v4" /> < path d = "M18 8c0-2.5-2-2.5-2-5" /> < path d = "M22 8c0-2.5-2-2.5-2-5" /> </ svg > }
        },
    };
    const LucideCircleDot: Self = Self {
        name: "LucideCircleDot",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < circle cx = "12" cy = "12" r = "1" /> </ svg > }
        },
    };
    const LucideCircleEllipsis: Self = Self {
        name: "LucideCircleEllipsis",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M17 12h.01" /> < path d = "M12 12h.01" /> < path d = "M7 12h.01" /> </ svg > }
        },
    };
    const LucideCircleSlashed: Self = Self {
        name: "LucideCircleSlashed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M22 2 2 22" /> </ svg > }
        },
    };
    const LucideCircle: Self = Self {
        name: "LucideCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> </ svg > }
        },
    };
    const LucideCitrus: Self = Self {
        name: "LucideCitrus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5.51 18.49a12 12 0 0 0 16.12.78c.49-.41.49-1.15.03-1.6L6.34 2.33a1.08 1.08 0 0 0-1.6.03A12 12 0 0 0 5.5 18.5Z" /> < path d = "M8.34 15.66a8 8 0 0 0 10.4.78c.54-.4.54-1.16.06-1.64L9.2 5.2c-.48-.48-1.25-.48-1.64.06a8 8 0 0 0 .78 10.4Z" /> < path d = "m14 10-5.5 5.5" /> < path d = "M14 10v8" /> < path d = "M14 10H6" /> </ svg > }
        },
    };
    const LucideClapperboard: Self = Self {
        name: "LucideClapperboard",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 11v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8H4Z" /> < path d = "m4 11-.88-2.87a2 2 0 0 1 1.33-2.5l11.48-3.5a2 2 0 0 1 2.5 1.32l.87 2.87L4 11.01Z" /> < path d = "m6.6 4.99 3.38 4.2" /> < path d = "m11.86 3.38 3.38 4.2" /> </ svg > }
        },
    };
    const LucideClipboardCheck: Self = Self {
        name: "LucideClipboardCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /> < path d = "m9 14 2 2 4-4" /> </ svg > }
        },
    };
    const LucideClipboardCopy: Self = Self {
        name: "LucideClipboardCopy",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2" /> < path d = "M16 4h2a2 2 0 0 1 2 2v4" /> < path d = "M21 14H11" /> < path d = "m15 10-4 4 4 4" /> </ svg > }
        },
    };
    const LucideClipboardEdit: Self = Self {
        name: "LucideClipboardEdit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5" /> < path d = "M4 13.5V6a2 2 0 0 1 2-2h2" /> </ svg > }
        },
    };
    const LucideClipboardList: Self = Self {
        name: "LucideClipboardList",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /> < path d = "M12 11h4" /> < path d = "M12 16h4" /> < path d = "M8 11h.01" /> < path d = "M8 16h.01" /> </ svg > }
        },
    };
    const LucideClipboardSignature: Self = Self {
        name: "LucideClipboardSignature",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5" /> < path d = "M16 4h2a2 2 0 0 1 1.73 1" /> < path d = "M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z" /> < path d = "M8 18h1" /> </ svg > }
        },
    };
    const LucideClipboardType: Self = Self {
        name: "LucideClipboardType",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /> < path d = "M9 12v-1h6v1" /> < path d = "M11 17h2" /> < path d = "M12 11v6" /> </ svg > }
        },
    };
    const LucideClipboardX: Self = Self {
        name: "LucideClipboardX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /> < path d = "m15 11-6 6" /> < path d = "m9 11 6 6" /> </ svg > }
        },
    };
    const LucideClipboard: Self = Self {
        name: "LucideClipboard",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "8" y = "2" width = "8" height = "4" rx = "1" ry = "1" /> < path d = "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /> </ svg > }
        },
    };
    const LucideClock1: Self = Self {
        name: "LucideClock1",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 14.5 8" /> </ svg > }
        },
    };
    const LucideClock10: Self = Self {
        name: "LucideClock10",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 8 10" /> </ svg > }
        },
    };
    const LucideClock11: Self = Self {
        name: "LucideClock11",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 9.5 8" /> </ svg > }
        },
    };
    const LucideClock12: Self = Self {
        name: "LucideClock12",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12" /> </ svg > }
        },
    };
    const LucideClock2: Self = Self {
        name: "LucideClock2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 16 10" /> </ svg > }
        },
    };
    const LucideClock3: Self = Self {
        name: "LucideClock3",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 16.5 12" /> </ svg > }
        },
    };
    const LucideClock4: Self = Self {
        name: "LucideClock4",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 16 14" /> </ svg > }
        },
    };
    const LucideClock5: Self = Self {
        name: "LucideClock5",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 14.5 16" /> </ svg > }
        },
    };
    const LucideClock6: Self = Self {
        name: "LucideClock6",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 12 16.5" /> </ svg > }
        },
    };
    const LucideClock7: Self = Self {
        name: "LucideClock7",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 9.5 16" /> </ svg > }
        },
    };
    const LucideClock8: Self = Self {
        name: "LucideClock8",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 8 14" /> </ svg > }
        },
    };
    const LucideClock9: Self = Self {
        name: "LucideClock9",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 7.5 12" /> </ svg > }
        },
    };
    const LucideClock: Self = Self {
        name: "LucideClock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polyline points = "12 6 12 12 16 14" /> </ svg > }
        },
    };
    const LucideCloudCog: Self = Self {
        name: "LucideCloudCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 16.2A4.5 4.5 0 0 0 17.5 8h-1.8A7 7 0 1 0 4 14.9" /> < circle cx = "12" cy = "17" r = "3" /> < path d = "M12 13v1" /> < path d = "M12 20v1" /> < path d = "M16 17h-1" /> < path d = "M9 17H8" /> < path d = "m15 14-.88.88" /> < path d = "M9.88 19.12 9 20" /> < path d = "m15 20-.88-.88" /> < path d = "M9.88 14.88 9 14" /> </ svg > }
        },
    };
    const LucideCloudDrizzle: Self = Self {
        name: "LucideCloudDrizzle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M8 19v1" /> < path d = "M8 14v1" /> < path d = "M16 19v1" /> < path d = "M16 14v1" /> < path d = "M12 21v1" /> < path d = "M12 16v1" /> </ svg > }
        },
    };
    const LucideCloudFog: Self = Self {
        name: "LucideCloudFog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M16 17H7" /> < path d = "M17 21H9" /> </ svg > }
        },
    };
    const LucideCloudHail: Self = Self {
        name: "LucideCloudHail",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M16 14v2" /> < path d = "M8 14v2" /> < path d = "M16 20h.01" /> < path d = "M8 20h.01" /> < path d = "M12 16v2" /> < path d = "M12 22h.01" /> </ svg > }
        },
    };
    const LucideCloudLightning: Self = Self {
        name: "LucideCloudLightning",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973" /> < path d = "m13 12-3 5h4l-3 5" /> </ svg > }
        },
    };
    const LucideCloudMoonRain: Self = Self {
        name: "LucideCloudMoonRain",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10.083 9A6.002 6.002 0 0 1 16 4a4.243 4.243 0 0 0 6 6c0 2.22-1.206 4.16-3 5.197" /> < path d = "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24" /> < path d = "M11 20v2" /> < path d = "M7 19v2" /> </ svg > }
        },
    };
    const LucideCloudMoon: Self = Self {
        name: "LucideCloudMoon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z" /> < path d = "M10.083 9A6.002 6.002 0 0 1 16 4a4.243 4.243 0 0 0 6 6c0 2.22-1.206 4.16-3 5.197" /> </ svg > }
        },
    };
    const LucideCloudOff: Self = Self {
        name: "LucideCloudOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m2 2 20 20" /> < path d = "M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193" /> < path d = "M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07" /> </ svg > }
        },
    };
    const LucideCloudRainWind: Self = Self {
        name: "LucideCloudRainWind",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "m9.2 22 3-7" /> < path d = "m9 13-3 7" /> < path d = "m17 13-3 7" /> </ svg > }
        },
    };
    const LucideCloudRain: Self = Self {
        name: "LucideCloudRain",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M16 14v6" /> < path d = "M8 14v6" /> < path d = "M12 16v6" /> </ svg > }
        },
    };
    const LucideCloudSnow: Self = Self {
        name: "LucideCloudSnow",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M8 15h.01" /> < path d = "M8 19h.01" /> < path d = "M12 17h.01" /> < path d = "M12 21h.01" /> < path d = "M16 15h.01" /> < path d = "M16 19h.01" /> </ svg > }
        },
    };
    const LucideCloudSunRain: Self = Self {
        name: "LucideCloudSunRain",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2v2" /> < path d = "m4.93 4.93 1.41 1.41" /> < path d = "M20 12h2" /> < path d = "m19.07 4.93-1.41 1.41" /> < path d = "M15.947 12.65a4 4 0 0 0-5.925-4.128" /> < path d = "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24" /> < path d = "M11 20v2" /> < path d = "M7 19v2" /> </ svg > }
        },
    };
    const LucideCloudSun: Self = Self {
        name: "LucideCloudSun",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2v2" /> < path d = "m4.93 4.93 1.41 1.41" /> < path d = "M20 12h2" /> < path d = "m19.07 4.93-1.41 1.41" /> < path d = "M15.947 12.65a4 4 0 0 0-5.925-4.128" /> < path d = "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z" /> </ svg > }
        },
    };
    const LucideCloud: Self = Self {
        name: "LucideCloud",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z" /> </ svg > }
        },
    };
    const LucideCloudy: Self = Self {
        name: "LucideCloudy",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z" /> < path d = "M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5" /> </ svg > }
        },
    };
    const LucideClover: Self = Self {
        name: "LucideClover",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16.2 3.8a2.7 2.7 0 0 0-3.81 0l-.4.38-.4-.4a2.7 2.7 0 0 0-3.82 0C6.73 4.85 6.67 6.64 8 8l4 4 4-4c1.33-1.36 1.27-3.15.2-4.2z" /> < path d = "M8 8c-1.36-1.33-3.15-1.27-4.2-.2a2.7 2.7 0 0 0 0 3.81l.38.4-.4.4a2.7 2.7 0 0 0 0 3.82C4.85 17.27 6.64 17.33 8 16" /> < path d = "M16 16c1.36 1.33 3.15 1.27 4.2.2a2.7 2.7 0 0 0 0-3.81l-.38-.4.4-.4a2.7 2.7 0 0 0 0-3.82C19.15 6.73 17.36 6.67 16 8" /> < path d = "M7.8 20.2a2.7 2.7 0 0 0 3.81 0l.4-.38.4.4a2.7 2.7 0 0 0 3.82 0c1.06-1.06 1.12-2.85-.21-4.21l-4-4-4 4c-1.33 1.36-1.27 3.15-.2 4.2z" /> < path d = "m7 17-5 5" /> </ svg > }
        },
    };
    const LucideCode2: Self = Self {
        name: "LucideCode2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m18 16 4-4-4-4" /> < path d = "m6 8-4 4 4 4" /> < path d = "m14.5 4-5 16" /> </ svg > }
        },
    };
    const LucideCode: Self = Self {
        name: "LucideCode",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "16 18 22 12 16 6" /> < polyline points = "8 6 2 12 8 18" /> </ svg > }
        },
    };
    const LucideCodepen: Self = Self {
        name: "LucideCodepen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "15.5" /> < polyline points = "22 8.5 12 15.5 2 8.5" /> < polyline points = "2 15.5 12 8.5 22 15.5" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "8.5" /> </ svg > }
        },
    };
    const LucideCodesandbox: Self = Self {
        name: "LucideCodesandbox",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z" /> < polyline points = "7.5 4.21 12 6.81 16.5 4.21" /> < polyline points = "7.5 19.79 7.5 14.6 3 12" /> < polyline points = "21 12 16.5 14.6 16.5 19.79" /> < polyline points = "3.27 6.96 12 12.01 20.73 6.96" /> < line x1 = "12" y1 = "22.08" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucideCoffee: Self = Self {
        name: "LucideCoffee",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 8h1a4 4 0 1 1 0 8h-1" /> < path d = "M3 8h14v9a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4Z" /> < line x1 = "6" y1 = "2" x2 = "6" y2 = "4" /> < line x1 = "10" y1 = "2" x2 = "10" y2 = "4" /> < line x1 = "14" y1 = "2" x2 = "14" y2 = "4" /> </ svg > }
        },
    };
    const LucideCog: Self = Self {
        name: "LucideCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z" /> < path d = "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" /> < path d = "M12 2v2" /> < path d = "M12 22v-2" /> < path d = "m17 20.66-1-1.73" /> < path d = "M11 10.27 7 3.34" /> < path d = "m20.66 17-1.73-1" /> < path d = "m3.34 7 1.73 1" /> < path d = "M14 12h8" /> < path d = "M2 12h2" /> < path d = "m20.66 7-1.73 1" /> < path d = "m3.34 17 1.73-1" /> < path d = "m17 3.34-1 1.73" /> < path d = "m11 13.73-4 6.93" /> </ svg > }
        },
    };
    const LucideCoins: Self = Self {
        name: "LucideCoins",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "8" cy = "8" r = "6" /> < path d = "M18.09 10.37A6 6 0 1 1 10.34 18" /> < path d = "M7 6h1v4" /> < path d = "m16.71 13.88.7.71-2.82 2.82" /> </ svg > }
        },
    };
    const LucideColumns: Self = Self {
        name: "LucideColumns",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "12" y1 = "3" x2 = "12" y2 = "21" /> </ svg > }
        },
    };
    const LucideCommand: Self = Self {
        name: "LucideCommand",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z" /> </ svg > }
        },
    };
    const LucideCompass: Self = Self {
        name: "LucideCompass",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polygon points = "16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76" /> </ svg > }
        },
    };
    const LucideComponent: Self = Self {
        name: "LucideComponent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5.5 8.5 9 12l-3.5 3.5L2 12l3.5-3.5Z" /> < path d = "m12 2 3.5 3.5L12 9 8.5 5.5 12 2Z" /> < path d = "M18.5 8.5 22 12l-3.5 3.5L15 12l3.5-3.5Z" /> < path d = "m12 15 3.5 3.5L12 22l-3.5-3.5L12 15Z" /> </ svg > }
        },
    };
    const LucideConciergeBell: Self = Self {
        name: "LucideConciergeBell",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 18a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2H2v-2Z" /> < path d = "M20 16a8 8 0 1 0-16 0" /> < path d = "M12 4v4" /> < path d = "M10 4h4" /> </ svg > }
        },
    };
    const LucideContact: Self = Self {
        name: "LucideContact",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 18a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2" /> < rect x = "3" y = "4" width = "18" height = "18" rx = "2" /> < circle cx = "12" cy = "10" r = "2" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "4" /> < line x1 = "16" y1 = "2" x2 = "16" y2 = "4" /> </ svg > }
        },
    };
    const LucideContrast: Self = Self {
        name: "LucideContrast",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M12 18a6 6 0 0 0 0-12v12z" /> </ svg > }
        },
    };
    const LucideCookie: Self = Self {
        name: "LucideCookie",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5" /> < path d = "M8.5 8.5v.01" /> < path d = "M16 15.5v.01" /> < path d = "M12 12v.01" /> < path d = "M11 17v.01" /> < path d = "M7 14v.01" /> </ svg > }
        },
    };
    const LucideCopy: Self = Self {
        name: "LucideCopy",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "9" y = "9" width = "13" height = "13" rx = "2" ry = "2" /> < path d = "M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" /> </ svg > }
        },
    };
    const LucideCopyleft: Self = Self {
        name: "LucideCopyleft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M9 9.35a4 4 0 1 1 0 5.3" /> </ svg > }
        },
    };
    const LucideCopyright: Self = Self {
        name: "LucideCopyright",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M15 9.354a4 4 0 1 0 0 5.292" /> </ svg > }
        },
    };
    const LucideCornerDownLeft: Self = Self {
        name: "LucideCornerDownLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "9 10 4 15 9 20" /> < path d = "M20 4v7a4 4 0 0 1-4 4H4" /> </ svg > }
        },
    };
    const LucideCornerDownRight: Self = Self {
        name: "LucideCornerDownRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "15 10 20 15 15 20" /> < path d = "M4 4v7a4 4 0 0 0 4 4h12" /> </ svg > }
        },
    };
    const LucideCornerLeftDown: Self = Self {
        name: "LucideCornerLeftDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "14 15 9 20 4 15" /> < path d = "M20 4h-7a4 4 0 0 0-4 4v12" /> </ svg > }
        },
    };
    const LucideCornerLeftUp: Self = Self {
        name: "LucideCornerLeftUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "14 9 9 4 4 9" /> < path d = "M20 20h-7a4 4 0 0 1-4-4V4" /> </ svg > }
        },
    };
    const LucideCornerRightDown: Self = Self {
        name: "LucideCornerRightDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "10 15 15 20 20 15" /> < path d = "M4 4h7a4 4 0 0 1 4 4v12" /> </ svg > }
        },
    };
    const LucideCornerRightUp: Self = Self {
        name: "LucideCornerRightUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "10 9 15 4 20 9" /> < path d = "M4 20h7a4 4 0 0 0 4-4V4" /> </ svg > }
        },
    };
    const LucideCornerUpLeft: Self = Self {
        name: "LucideCornerUpLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "9 14 4 9 9 4" /> < path d = "M20 20v-7a4 4 0 0 0-4-4H4" /> </ svg > }
        },
    };
    const LucideCornerUpRight: Self = Self {
        name: "LucideCornerUpRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "15 14 20 9 15 4" /> < path d = "M4 20v-7a4 4 0 0 1 4-4h12" /> </ svg > }
        },
    };
    const LucideCpu: Self = Self {
        name: "LucideCpu",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "4" width = "16" height = "16" rx = "2" ry = "2" /> < rect x = "9" y = "9" width = "6" height = "6" /> < line x1 = "9" y1 = "2" x2 = "9" y2 = "4" /> < line x1 = "15" y1 = "2" x2 = "15" y2 = "4" /> < line x1 = "9" y1 = "21" x2 = "9" y2 = "22" /> < line x1 = "15" y1 = "20" x2 = "15" y2 = "22" /> < line x1 = "20" y1 = "9" x2 = "22" y2 = "9" /> < line x1 = "20" y1 = "14" x2 = "22" y2 = "14" /> < line x1 = "2" y1 = "9" x2 = "4" y2 = "9" /> < line x1 = "2" y1 = "14" x2 = "4" y2 = "14" /> </ svg > }
        },
    };
    const LucideCreditCard: Self = Self {
        name: "LucideCreditCard",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "5" width = "20" height = "14" rx = "2" /> < line x1 = "2" y1 = "10" x2 = "22" y2 = "10" /> </ svg > }
        },
    };
    const LucideCroissant: Self = Self {
        name: "LucideCroissant",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z" /> < path d = "m10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83" /> < path d = "M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4" /> < path d = "m14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2" /> < path d = "M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5" /> </ svg > }
        },
    };
    const LucideCrop: Self = Self {
        name: "LucideCrop",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 2v14a2 2 0 0 0 2 2h14" /> < path d = "M18 22V8a2 2 0 0 0-2-2H2" /> </ svg > }
        },
    };
    const LucideCross: Self = Self {
        name: "LucideCross",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 2a2 2 0 0 0-2 2v5H4a2 2 0 0 0-2 2v2c0 1.1.9 2 2 2h5v5c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-5h5a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-5V4a2 2 0 0 0-2-2h-2z" /> </ svg > }
        },
    };
    const LucideCrosshair: Self = Self {
        name: "LucideCrosshair",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "22" y1 = "12" x2 = "18" y2 = "12" /> < line x1 = "6" y1 = "12" x2 = "2" y2 = "12" /> < line x1 = "12" y1 = "6" x2 = "12" y2 = "2" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "18" /> </ svg > }
        },
    };
    const LucideCrown: Self = Self {
        name: "LucideCrown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m2 4 3 12h14l3-12-6 7-4-7-4 7-6-7zm3 16h14" /> </ svg > }
        },
    };
    const LucideCupSoda: Self = Self {
        name: "LucideCupSoda",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8" /> < path d = "M5 8h14" /> < path d = "M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0" /> < path d = "m12 8 1-6h2" /> </ svg > }
        },
    };
    const LucideCurlyBraces: Self = Self {
        name: "LucideCurlyBraces",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1" /> < path d = "M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1" /> </ svg > }
        },
    };
    const LucideCurrency: Self = Self {
        name: "LucideCurrency",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "8" /> < line x1 = "3" y1 = "3" x2 = "6" y2 = "6" /> < line x1 = "21" y1 = "3" x2 = "18" y2 = "6" /> < line x1 = "3" y1 = "21" x2 = "6" y2 = "18" /> < line x1 = "21" y1 = "21" x2 = "18" y2 = "18" /> </ svg > }
        },
    };
    const LucideDatabase: Self = Self {
        name: "LucideDatabase",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < ellipse cx = "12" cy = "5" rx = "9" ry = "3" /> < path d = "M21 12c0 1.66-4 3-9 3s-9-1.34-9-3" /> < path d = "M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5" /> </ svg > }
        },
    };
    const LucideDelete: Self = Self {
        name: "LucideDelete",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 5H9l-7 7 7 7h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2Z" /> < line x1 = "18" y1 = "9" x2 = "12" y2 = "15" /> < line x1 = "12" y1 = "9" x2 = "18" y2 = "15" /> </ svg > }
        },
    };
    const LucideDiamond: Self = Self {
        name: "LucideDiamond",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "12" y = "1" width = "15.56" height = "15.56" rx = "2.41" transform = "rotate(45 12 1)" /> </ svg > }
        },
    };
    const LucideDice1: Self = Self {
        name: "LucideDice1",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M12 12h.01" /> </ svg > }
        },
    };
    const LucideDice2: Self = Self {
        name: "LucideDice2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M15 9h.01" /> < path d = "M9 15h.01" /> </ svg > }
        },
    };
    const LucideDice3: Self = Self {
        name: "LucideDice3",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M16 8h.01" /> < path d = "M12 12h.01" /> < path d = "M8 16h.01" /> </ svg > }
        },
    };
    const LucideDice4: Self = Self {
        name: "LucideDice4",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M16 8h.01" /> < path d = "M8 8h.01" /> < path d = "M8 16h.01" /> < path d = "M16 16h.01" /> </ svg > }
        },
    };
    const LucideDice5: Self = Self {
        name: "LucideDice5",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M16 8h.01" /> < path d = "M8 8h.01" /> < path d = "M8 16h.01" /> < path d = "M16 16h.01" /> < path d = "M12 12h.01" /> </ svg > }
        },
    };
    const LucideDice6: Self = Self {
        name: "LucideDice6",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M16 8h.01" /> < path d = "M16 12h.01" /> < path d = "M16 16h.01" /> < path d = "M8 8h.01" /> < path d = "M8 12h.01" /> < path d = "M8 16h.01" /> </ svg > }
        },
    };
    const LucideDices: Self = Self {
        name: "LucideDices",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "10" width = "12" height = "12" rx = "2" ry = "2" /> < path d = "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6" /> < path d = "M6 18h.01" /> < path d = "M10 14h.01" /> < path d = "M15 6h.01" /> < path d = "M18 9h.01" /> </ svg > }
        },
    };
    const LucideDiff: Self = Self {
        name: "LucideDiff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 3v14" /> < path d = "M5 10h14" /> < path d = "M5 21h14" /> </ svg > }
        },
    };
    const LucideDisc: Self = Self {
        name: "LucideDisc",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < circle cx = "12" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideDivideCircle: Self = Self {
        name: "LucideDivideCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> < line x1 = "12" y1 = "16" x2 = "12" y2 = "16" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "8" /> < circle cx = "12" cy = "12" r = "10" /> </ svg > }
        },
    };
    const LucideDivideSquare: Self = Self {
        name: "LucideDivideSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> < line x1 = "12" y1 = "16" x2 = "12" y2 = "16" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "8" /> </ svg > }
        },
    };
    const LucideDivide: Self = Self {
        name: "LucideDivide",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "6" r = "1" /> < line x1 = "5" y1 = "12" x2 = "19" y2 = "12" /> < circle cx = "12" cy = "18" r = "1" /> </ svg > }
        },
    };
    const LucideDollarSign: Self = Self {
        name: "LucideDollarSign",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "2" x2 = "12" y2 = "22" /> < path d = "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6" /> </ svg > }
        },
    };
    const LucideDownloadCloud: Self = Self {
        name: "LucideDownloadCloud",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M12 12v9" /> < path d = "m8 17 4 4 4-4" /> </ svg > }
        },
    };
    const LucideDownload: Self = Self {
        name: "LucideDownload",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" /> < polyline points = "7 10 12 15 17 10" /> < line x1 = "12" y1 = "15" x2 = "12" y2 = "3" /> </ svg > }
        },
    };
    const LucideDribbble: Self = Self {
        name: "LucideDribbble",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94" /> < path d = "M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32" /> < path d = "M8.56 2.75c4.37 6 6 9.42 8 17.72" /> </ svg > }
        },
    };
    const LucideDroplet: Self = Self {
        name: "LucideDroplet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z" /> </ svg > }
        },
    };
    const LucideDroplets: Self = Self {
        name: "LucideDroplets",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z" /> < path d = "M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97" /> </ svg > }
        },
    };
    const LucideDrumstick: Self = Self {
        name: "LucideDrumstick",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15.45 15.4c-2.13.65-4.3.32-5.7-1.1-2.29-2.27-1.76-6.5 1.17-9.42 2.93-2.93 7.15-3.46 9.43-1.18 1.41 1.41 1.74 3.57 1.1 5.71-1.4-.51-3.26-.02-4.64 1.36-1.38 1.38-1.87 3.23-1.36 4.63z" /> < path d = "m11.25 15.6-2.16 2.16a2.5 2.5 0 1 1-4.56 1.73 2.49 2.49 0 0 1-1.41-4.24 2.5 2.5 0 0 1 3.14-.32l2.16-2.16" /> </ svg > }
        },
    };
    const LucideEarOff: Self = Self {
        name: "LucideEarOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46" /> < path d = "M6 8.5c0-.75.13-1.47.36-2.14" /> < path d = "M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76" /> < path d = "M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideEar: Self = Self {
        name: "LucideEar",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0" /> < path d = "M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4" /> </ svg > }
        },
    };
    const LucideEdit2: Self = Self {
        name: "LucideEdit2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z" /> </ svg > }
        },
    };
    const LucideEdit3: Self = Self {
        name: "LucideEdit3",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 20h9" /> < path d = "M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z" /> </ svg > }
        },
    };
    const LucideEdit: Self = Self {
        name: "LucideEdit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" /> < path d = "M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" /> </ svg > }
        },
    };
    const LucideEggFried: Self = Self {
        name: "LucideEggFried",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "11.5" cy = "12.5" r = "3.5" /> < path d = "M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z" /> </ svg > }
        },
    };
    const LucideEgg: Self = Self {
        name: "LucideEgg",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22c6.23-.05 7.87-5.57 7.5-10-.36-4.34-3.95-9.96-7.5-10-3.55.04-7.14 5.66-7.5 10-.37 4.43 1.27 9.95 7.5 10z" /> </ svg > }
        },
    };
    const LucideEqualNot: Self = Self {
        name: "LucideEqualNot",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "5" y1 = "9" x2 = "19" y2 = "9" /> < line x1 = "5" y1 = "15" x2 = "19" y2 = "15" /> < line x1 = "19" y1 = "5" x2 = "5" y2 = "19" /> </ svg > }
        },
    };
    const LucideEqual: Self = Self {
        name: "LucideEqual",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "5" y1 = "9" x2 = "19" y2 = "9" /> < line x1 = "5" y1 = "15" x2 = "19" y2 = "15" /> </ svg > }
        },
    };
    const LucideEraser: Self = Self {
        name: "LucideEraser",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21" /> < path d = "M22 21H7" /> < path d = "m5 11 9 9" /> </ svg > }
        },
    };
    const LucideEuro: Self = Self {
        name: "LucideEuro",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 10h12" /> < path d = "M4 14h9" /> < path d = "M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2" /> </ svg > }
        },
    };
    const LucideExpand: Self = Self {
        name: "LucideExpand",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21 21-6-6m6 6v-4.8m0 4.8h-4.8" /> < path d = "M3 16.2V21m0 0h4.8M3 21l6-6" /> < path d = "M21 7.8V3m0 0h-4.8M21 3l-6 6" /> < path d = "M3 7.8V3m0 0h4.8M3 3l6 6" /> </ svg > }
        },
    };
    const LucideExternalLink: Self = Self {
        name: "LucideExternalLink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" /> < polyline points = "15 3 21 3 21 9" /> < line x1 = "10" y1 = "14" x2 = "21" y2 = "3" /> </ svg > }
        },
    };
    const LucideEyeOff: Self = Self {
        name: "LucideEyeOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9.88 9.88a3 3 0 1 0 4.24 4.24" /> < path d = "M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68" /> < path d = "M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideEye: Self = Self {
        name: "LucideEye",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" /> < circle cx = "12" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideFacebook: Self = Self {
        name: "LucideFacebook",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z" /> </ svg > }
        },
    };
    const LucideFactory: Self = Self {
        name: "LucideFactory",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z" /> < path d = "M17 18h1" /> < path d = "M12 18h1" /> < path d = "M7 18h1" /> </ svg > }
        },
    };
    const LucideFan: Self = Self {
        name: "LucideFan",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z" /> < path d = "M12 12v.01" /> </ svg > }
        },
    };
    const LucideFastForward: Self = Self {
        name: "LucideFastForward",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "13 19 22 12 13 5 13 19" /> < polygon points = "2 19 11 12 2 5 2 19" /> </ svg > }
        },
    };
    const LucideFeather: Self = Self {
        name: "LucideFeather",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z" /> < line x1 = "16" y1 = "8" x2 = "2" y2 = "22" /> < line x1 = "17.5" y1 = "15" x2 = "9" y2 = "15" /> </ svg > }
        },
    };
    const LucideFigma: Self = Self {
        name: "LucideFigma",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z" /> < path d = "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z" /> < path d = "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z" /> < path d = "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z" /> < path d = "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z" /> </ svg > }
        },
    };
    const LucideFileArchive: Self = Self {
        name: "LucideFileArchive",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4-.4.4-.9.6-1.4.6h-2" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "10" cy = "20" r = "2" /> < path d = "M10 7V6" /> < path d = "M10 12v-1" /> < path d = "M10 18v-2" /> </ svg > }
        },
    };
    const LucideFileAudio2: Self = Self {
        name: "LucideFileAudio2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v2" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M2 17v-3a4 4 0 0 1 8 0v3" /> < circle cx = "9" cy = "17" r = "1" /> < circle cx = "3" cy = "17" r = "1" /> </ svg > }
        },
    };
    const LucideFileAudio: Self = Self {
        name: "LucideFileAudio",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17.5 22h.5c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Z" /> < path d = "M6 20v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z" /> < path d = "M2 19v-3a6 6 0 0 1 12 0v3" /> </ svg > }
        },
    };
    const LucideFileAxis3D: Self = Self {
        name: "LucideFileAxis3D",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M8 10v8h8" /> < path d = "m8 18 4-4" /> </ svg > }
        },
    };
    const LucideFileBadge2: Self = Self {
        name: "LucideFileBadge2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < path d = "M12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" /> < path d = "m14 12.5 1 5.5-3-1-3 1 1-5.5" /> </ svg > }
        },
    };
    const LucideFileBadge: Self = Self {
        name: "LucideFileBadge",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 7V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-6" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" /> < path d = "M7 16.5 8 22l-3-1-3 1 1-5.5" /> </ svg > }
        },
    };
    const LucideFileBarChart2: Self = Self {
        name: "LucideFileBarChart2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M12 18v-6" /> < path d = "M8 18v-1" /> < path d = "M16 18v-3" /> </ svg > }
        },
    };
    const LucideFileBarChart: Self = Self {
        name: "LucideFileBarChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M12 18v-4" /> < path d = "M8 18v-2" /> < path d = "M16 18v-6" /> </ svg > }
        },
    };
    const LucideFileBox: Self = Self {
        name: "LucideFileBox",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 22H18a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M2.97 13.12c-.6.36-.97 1.02-.97 1.74v3.28c0 .72.37 1.38.97 1.74l3 1.83c.63.39 1.43.39 2.06 0l3-1.83c.6-.36.97-1.02.97-1.74v-3.28c0-.72-.37-1.38-.97-1.74l-3-1.83a1.97 1.97 0 0 0-2.06 0l-3 1.83Z" /> < path d = "m7 17-4.74-2.85" /> < path d = "m7 17 4.74-2.85" /> < path d = "M7 17v5" /> </ svg > }
        },
    };
    const LucideFileCheck2: Self = Self {
        name: "LucideFileCheck2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m3 15 2 2 4-4" /> </ svg > }
        },
    };
    const LucideFileCheck: Self = Self {
        name: "LucideFileCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m9 15 2 2 4-4" /> </ svg > }
        },
    };
    const LucideFileClock: Self = Self {
        name: "LucideFileClock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 22h2c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "8" cy = "16" r = "6" /> < path d = "M9.5 17.5 8 16.25V14" /> </ svg > }
        },
    };
    const LucideFileCode: Self = Self {
        name: "LucideFileCode",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m9 18 3-3-3-3" /> < path d = "m5 12-3 3 3 3" /> </ svg > }
        },
    };
    const LucideFileCog2: Self = Self {
        name: "LucideFileCog2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "12" cy = "15" r = "2" /> < path d = "M12 12v1" /> < path d = "M12 17v1" /> < path d = "m14.6 13.5-.87.5" /> < path d = "m10.27 16-.87.5" /> < path d = "m14.6 16.5-.87-.5" /> < path d = "m10.27 14-.87-.5" /> </ svg > }
        },
    };
    const LucideFileCog: Self = Self {
        name: "LucideFileCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 6V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "6" cy = "14" r = "3" /> < path d = "M6 10v1" /> < path d = "M6 17v1" /> < path d = "M10 14H9" /> < path d = "M3 14H2" /> < path d = "m9 11-.88.88" /> < path d = "M3.88 16.12 3 17" /> < path d = "m9 17-.88-.88" /> < path d = "M3.88 11.88 3 11" /> </ svg > }
        },
    };
    const LucideFileDiff: Self = Self {
        name: "LucideFileDiff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < path d = "M12 13V7" /> < path d = "M9 10h6" /> < path d = "M9 17h6" /> </ svg > }
        },
    };
    const LucideFileDigit: Self = Self {
        name: "LucideFileDigit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M10 12h2v6" /> < rect x = "2" y = "12" width = "4" height = "6" /> < path d = "M10 18h4" /> </ svg > }
        },
    };
    const LucideFileDown: Self = Self {
        name: "LucideFileDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M12 18v-6" /> < path d = "m9 15 3 3 3-3" /> </ svg > }
        },
    };
    const LucideFileEdit: Self = Self {
        name: "LucideFileEdit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 13.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-5.5" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z" /> </ svg > }
        },
    };
    const LucideFileHeart: Self = Self {
        name: "LucideFileHeart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 6V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z" /> </ svg > }
        },
    };
    const LucideFileImage: Self = Self {
        name: "LucideFileImage",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "10" cy = "13" r = "2" /> < path d = "m20 17-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /> </ svg > }
        },
    };
    const LucideFileInput: Self = Self {
        name: "LucideFileInput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M2 15h10" /> < path d = "m9 18 3-3-3-3" /> </ svg > }
        },
    };
    const LucideFileJson2: Self = Self {
        name: "LucideFileJson2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1" /> < path d = "M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1" /> </ svg > }
        },
    };
    const LucideFileJson: Self = Self {
        name: "LucideFileJson",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1" /> < path d = "M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1" /> </ svg > }
        },
    };
    const LucideFileKey2: Self = Self {
        name: "LucideFileKey2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 10V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "4" cy = "16" r = "2" /> < path d = "m10 10-4.5 4.5" /> < path d = "m9 11 1 1" /> </ svg > }
        },
    };
    const LucideFileKey: Self = Self {
        name: "LucideFileKey",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < circle cx = "10" cy = "16" r = "2" /> < path d = "m16 10-4.5 4.5" /> < path d = "m15 11 1 1" /> </ svg > }
        },
    };
    const LucideFileLineChart: Self = Self {
        name: "LucideFileLineChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m16 13-3.5 3.5-2-2L8 17" /> </ svg > }
        },
    };
    const LucideFileLock2: Self = Self {
        name: "LucideFileLock2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4" /> < polyline points = "14 2 14 8 20 8" /> < rect x = "2" y = "13" width = "8" height = "5" rx = "1" /> < path d = "M8 13v-2a2 2 0 1 0-4 0v2" /> </ svg > }
        },
    };
    const LucideFileLock: Self = Self {
        name: "LucideFileLock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < rect x = "8" y = "12" width = "8" height = "6" rx = "1" /> < path d = "M15 12v-2a3 3 0 1 0-6 0v2" /> </ svg > }
        },
    };
    const LucideFileMinus2: Self = Self {
        name: "LucideFileMinus2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M3 15h6" /> </ svg > }
        },
    };
    const LucideFileMinus: Self = Self {
        name: "LucideFileMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < line x1 = "9" y1 = "15" x2 = "15" y2 = "15" /> </ svg > }
        },
    };
    const LucideFileOutput: Self = Self {
        name: "LucideFileOutput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M2 15h10" /> < path d = "m5 12-3 3 3 3" /> </ svg > }
        },
    };
    const LucideFilePieChart: Self = Self {
        name: "LucideFilePieChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 22h2a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M4.04 11.71a5.84 5.84 0 1 0 8.2 8.29" /> < path d = "M13.83 16A5.83 5.83 0 0 0 8 10.17V16h5.83Z" /> </ svg > }
        },
    };
    const LucideFilePlus2: Self = Self {
        name: "LucideFilePlus2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M3 15h6" /> < path d = "M6 12v6" /> </ svg > }
        },
    };
    const LucideFilePlus: Self = Self {
        name: "LucideFilePlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < line x1 = "12" y1 = "18" x2 = "12" y2 = "12" /> < line x1 = "9" y1 = "15" x2 = "15" y2 = "15" /> </ svg > }
        },
    };
    const LucideFileQuestion: Self = Self {
        name: "LucideFileQuestion",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < path d = "M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2" /> < path d = "M12 17h.01" /> </ svg > }
        },
    };
    const LucideFileScan: Self = Self {
        name: "LucideFileScan",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 10V7.5L14.5 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h4.5" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M16 22a2 2 0 0 1-2-2" /> < path d = "M20 22a2 2 0 0 0 2-2" /> < path d = "M20 14a2 2 0 0 1 2 2" /> < path d = "M16 14a2 2 0 0 0-2 2" /> </ svg > }
        },
    };
    const LucideFileSearch2: Self = Self {
        name: "LucideFileSearch2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < circle cx = "11.5" cy = "14.5" r = "2.5" /> < path d = "M13.25 16.25 15 18" /> </ svg > }
        },
    };
    const LucideFileSearch: Self = Self {
        name: "LucideFileSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" /> < path d = "m9 18-1.5-1.5" /> </ svg > }
        },
    };
    const LucideFileSignature: Self = Self {
        name: "LucideFileSignature",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 19.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h8.5L18 5.5" /> < path d = "M8 18h1" /> < path d = "M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z" /> </ svg > }
        },
    };
    const LucideFileSpreadsheet: Self = Self {
        name: "LucideFileSpreadsheet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M8 13h2" /> < path d = "M8 17h2" /> < path d = "M14 13h2" /> < path d = "M14 17h2" /> </ svg > }
        },
    };
    const LucideFileSymlink: Self = Self {
        name: "LucideFileSymlink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v7" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m10 18 3-3-3-3" /> < path d = "M4 18v-1a2 2 0 0 1 2-2h6" /> </ svg > }
        },
    };
    const LucideFileTerminal: Self = Self {
        name: "LucideFileTerminal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m8 16 2-2-2-2" /> < path d = "M12 18h4" /> </ svg > }
        },
    };
    const LucideFileText: Self = Self {
        name: "LucideFileText",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < line x1 = "16" y1 = "13" x2 = "8" y2 = "13" /> < line x1 = "16" y1 = "17" x2 = "8" y2 = "17" /> < line x1 = "10" y1 = "9" x2 = "8" y2 = "9" /> </ svg > }
        },
    };
    const LucideFileType2: Self = Self {
        name: "LucideFileType2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M2 13v-1h6v1" /> < path d = "M4 18h2" /> < path d = "M5 12v6" /> </ svg > }
        },
    };
    const LucideFileType: Self = Self {
        name: "LucideFileType",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M9 13v-1h6v1" /> < path d = "M11 18h2" /> < path d = "M12 12v6" /> </ svg > }
        },
    };
    const LucideFileUp: Self = Self {
        name: "LucideFileUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M12 12v6" /> < path d = "m15 15-3-3-3 3" /> </ svg > }
        },
    };
    const LucideFileVideo2: Self = Self {
        name: "LucideFileVideo2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m10 15.5 4 2.5v-6l-4 2.5" /> < rect x = "2" y = "12" width = "8" height = "6" rx = "1" /> </ svg > }
        },
    };
    const LucideFileVideo: Self = Self {
        name: "LucideFileVideo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m10 11 5 3-5 3v-6Z" /> </ svg > }
        },
    };
    const LucideFileVolume2: Self = Self {
        name: "LucideFileVolume2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < path d = "M11.5 13.5c.32.4.5.94.5 1.5s-.18 1.1-.5 1.5" /> < path d = "M15 12c.64.8 1 1.87 1 3s-.36 2.2-1 3" /> < path d = "M8 15h.01" /> </ svg > }
        },
    };
    const LucideFileVolume: Self = Self {
        name: "LucideFileVolume",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3" /> < polyline points = "14 2 14 8 20 8" /> < path d = "m7 10-3 2H2v4h2l3 2v-8Z" /> < path d = "M11 11c.64.8 1 1.87 1 3s-.36 2.2-1 3" /> </ svg > }
        },
    };
    const LucideFileWarning: Self = Self {
        name: "LucideFileWarning",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < path d = "M12 9v4" /> < path d = "M12 17h.01" /> </ svg > }
        },
    };
    const LucideFileX2: Self = Self {
        name: "LucideFileX2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" /> < path d = "M14 2v6h6" /> < path d = "m3 12.5 5 5" /> < path d = "m8 12.5-5 5" /> </ svg > }
        },
    };
    const LucideFileX: Self = Self {
        name: "LucideFileX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> < line x1 = "9.5" y1 = "12.5" x2 = "14.5" y2 = "17.5" /> < line x1 = "14.5" y1 = "12.5" x2 = "9.5" y2 = "17.5" /> </ svg > }
        },
    };
    const LucideFile: Self = Self {
        name: "LucideFile",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /> < polyline points = "14 2 14 8 20 8" /> </ svg > }
        },
    };
    const LucideFiles: Self = Self {
        name: "LucideFiles",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15.5 2H8.6c-.4 0-.8.2-1.1.5-.3.3-.5.7-.5 1.1v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8c.4 0 .8-.2 1.1-.5.3-.3.5-.7.5-1.1V6.5L15.5 2z" /> < path d = "M3 7.6v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8" /> < path d = "M15 2v5h5" /> </ svg > }
        },
    };
    const LucideFilm: Self = Self {
        name: "LucideFilm",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "2" width = "20" height = "20" rx = "2.18" ry = "2.18" /> < line x1 = "7" y1 = "2" x2 = "7" y2 = "22" /> < line x1 = "17" y1 = "2" x2 = "17" y2 = "22" /> < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> < line x1 = "2" y1 = "7" x2 = "7" y2 = "7" /> < line x1 = "2" y1 = "17" x2 = "7" y2 = "17" /> < line x1 = "17" y1 = "17" x2 = "22" y2 = "17" /> < line x1 = "17" y1 = "7" x2 = "22" y2 = "7" /> </ svg > }
        },
    };
    const LucideFilter: Self = Self {
        name: "LucideFilter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" /> </ svg > }
        },
    };
    const LucideFingerprint: Self = Self {
        name: "LucideFingerprint",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 12C2 6.5 6.5 2 12 2a10 10 0 0 1 8 4" /> < path d = "M5 19.5C5.5 18 6 15 6 12c0-.7.12-1.37.34-2" /> < path d = "M17.29 21.02c.12-.6.43-2.3.5-3.02" /> < path d = "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4" /> < path d = "M8.65 22c.21-.66.45-1.32.57-2" /> < path d = "M14 13.12c0 2.38 0 6.38-1 8.88" /> < path d = "M2 16h.01" /> < path d = "M21.8 16c.2-2 .131-5.354 0-6" /> < path d = "M9 6.8a6 6 0 0 1 9 5.2c0 .47 0 1.17-.02 2" /> </ svg > }
        },
    };
    const LucideFlagOff: Self = Self {
        name: "LucideFlagOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 2c3 0 5 2 8 2s4-1 4-1v11" /> < path d = "M4 22V4" /> < path d = "M4 15s1-1 4-1 5 2 8 2" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideFlagTriangleLeft: Self = Self {
        name: "LucideFlagTriangleLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 22V2L7 7l10 5" /> </ svg > }
        },
    };
    const LucideFlagTriangleRight: Self = Self {
        name: "LucideFlagTriangleRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 22V2l10 5-10 5" /> </ svg > }
        },
    };
    const LucideFlag: Self = Self {
        name: "LucideFlag",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z" /> < line x1 = "4" y1 = "22" x2 = "4" y2 = "15" /> </ svg > }
        },
    };
    const LucideFlame: Self = Self {
        name: "LucideFlame",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z" /> </ svg > }
        },
    };
    const LucideFlashlightOff: Self = Self {
        name: "LucideFlashlightOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4" /> < path d = "M7 2h11v4c0 2-2 2-2 4v1" /> < line x1 = "11" y1 = "6" x2 = "18" y2 = "6" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideFlashlight: Self = Self {
        name: "LucideFlashlight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z" /> < line x1 = "6" y1 = "6" x2 = "18" y2 = "6" /> < line x1 = "12" y1 = "12" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucideFlaskConical: Self = Self {
        name: "LucideFlaskConical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 2v8L4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45L14 10V2" /> < path d = "M8.5 2h7" /> < path d = "M7 16h10" /> </ svg > }
        },
    };
    const LucideFlaskRound: Self = Self {
        name: "LucideFlaskRound",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 2v7.31" /> < path d = "M14 9.3V1.99" /> < path d = "M8.5 2h7" /> < path d = "M14 9.3a6.5 6.5 0 1 1-4 0" /> < path d = "M5.58 16.5h12.85" /> </ svg > }
        },
    };
    const LucideFlipHorizontal2: Self = Self {
        name: "LucideFlipHorizontal2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m3 7 5 5-5 5V7" /> < path d = "m21 7-5 5 5 5V7" /> < path d = "M12 20v2" /> < path d = "M12 14v2" /> < path d = "M12 8v2" /> < path d = "M12 2v2" /> </ svg > }
        },
    };
    const LucideFlipHorizontal: Self = Self {
        name: "LucideFlipHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3" /> < path d = "M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3" /> < path d = "M12 20v2" /> < path d = "M12 14v2" /> < path d = "M12 8v2" /> < path d = "M12 2v2" /> </ svg > }
        },
    };
    const LucideFlipVertical2: Self = Self {
        name: "LucideFlipVertical2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m17 3-5 5-5-5h10" /> < path d = "m17 21-5-5-5 5h10" /> < path d = "M4 12H2" /> < path d = "M10 12H8" /> < path d = "M16 12h-2" /> < path d = "M22 12h-2" /> </ svg > }
        },
    };
    const LucideFlipVertical: Self = Self {
        name: "LucideFlipVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3" /> < path d = "M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3" /> < path d = "M4 12H2" /> < path d = "M10 12H8" /> < path d = "M16 12h-2" /> < path d = "M22 12h-2" /> </ svg > }
        },
    };
    const LucideFlower2: Self = Self {
        name: "LucideFlower2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1" /> < circle cx = "12" cy = "8" r = "2" /> < path d = "M12 10v12" /> < path d = "M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z" /> < path d = "M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z" /> </ svg > }
        },
    };
    const LucideFlower: Self = Self {
        name: "LucideFlower",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 7.5a4.5 4.5 0 1 1 4.5 4.5M12 7.5A4.5 4.5 0 1 0 7.5 12M12 7.5V9m-4.5 3a4.5 4.5 0 1 0 4.5 4.5M7.5 12H9m7.5 0a4.5 4.5 0 1 1-4.5 4.5m4.5-4.5H15m-3 4.5V15" /> < circle cx = "12" cy = "12" r = "3" /> < path d = "m8 16 1.5-1.5" /> < path d = "M14.5 9.5 16 8" /> < path d = "m8 8 1.5 1.5" /> < path d = "M14.5 14.5 16 16" /> </ svg > }
        },
    };
    const LucideFocus: Self = Self {
        name: "LucideFocus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "3" /> < path d = "M3 7V5a2 2 0 0 1 2-2h2" /> < path d = "M17 3h2a2 2 0 0 1 2 2v2" /> < path d = "M21 17v2a2 2 0 0 1-2 2h-2" /> < path d = "M7 21H5a2 2 0 0 1-2-2v-2" /> </ svg > }
        },
    };
    const LucideFolderArchive: Self = Self {
        name: "LucideFolderArchive",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 20V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2h6" /> < circle cx = "16" cy = "19" r = "2" /> < path d = "M16 11v-1" /> < path d = "M16 17v-2" /> </ svg > }
        },
    };
    const LucideFolderCheck: Self = Self {
        name: "LucideFolderCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < path d = "m9 13 2 2 4-4" /> </ svg > }
        },
    };
    const LucideFolderClock: Self = Self {
        name: "LucideFolderClock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2" /> < circle cx = "16" cy = "16" r = "6" /> < path d = "M16 14v2l1 1" /> </ svg > }
        },
    };
    const LucideFolderClosed: Self = Self {
        name: "LucideFolderClosed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < path d = "M2 10h20" /> </ svg > }
        },
    };
    const LucideFolderCog2: Self = Self {
        name: "LucideFolderCog2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < circle cx = "12" cy = "13" r = "2" /> < path d = "M12 10v1" /> < path d = "M12 15v1" /> < path d = "m14.6 11.5-.87.5" /> < path d = "m10.27 14-.87.5" /> < path d = "m14.6 14.5-.87-.5" /> < path d = "m10.27 12-.87-.5" /> </ svg > }
        },
    };
    const LucideFolderCog: Self = Self {
        name: "LucideFolderCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10.5 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v3" /> < circle cx = "18" cy = "18" r = "3" /> < path d = "M18 14v1" /> < path d = "M18 21v1" /> < path d = "M22 18h-1" /> < path d = "M15 18h-1" /> < path d = "m21 15-.88.88" /> < path d = "M15.88 20.12 15 21" /> < path d = "m21 21-.88-.88" /> < path d = "M15.88 15.88 15 15" /> </ svg > }
        },
    };
    const LucideFolderDown: Self = Self {
        name: "LucideFolderDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < path d = "M12 10v6" /> < path d = "m15 13-3 3-3-3" /> </ svg > }
        },
    };
    const LucideFolderEdit: Self = Self {
        name: "LucideFolderEdit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8.42 10.61a2.1 2.1 0 1 1 2.97 2.97L5.95 19 2 20l.99-3.95 5.43-5.44Z" /> < path d = "M2 11.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5" /> </ svg > }
        },
    };
    const LucideFolderHeart: Self = Self {
        name: "LucideFolderHeart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v1.5" /> < path d = "M21.29 13.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 21l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z" /> </ svg > }
        },
    };
    const LucideFolderInput: Self = Self {
        name: "LucideFolderInput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1" /> < path d = "M2 13h10" /> < path d = "m9 16 3-3-3-3" /> </ svg > }
        },
    };
    const LucideFolderKey: Self = Self {
        name: "LucideFolderKey",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2" /> < circle cx = "16" cy = "20" r = "2" /> < path d = "m22 14-4.5 4.5" /> < path d = "m21 15 1 1" /> </ svg > }
        },
    };
    const LucideFolderLock: Self = Self {
        name: "LucideFolderLock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2.5" /> < rect x = "14" y = "17" width = "8" height = "5" rx = "1" /> < path d = "M20 17v-2a2 2 0 1 0-4 0v2" /> </ svg > }
        },
    };
    const LucideFolderMinus: Self = Self {
        name: "LucideFolderMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < line x1 = "9" y1 = "13" x2 = "15" y2 = "13" /> </ svg > }
        },
    };
    const LucideFolderOpen: Self = Self {
        name: "LucideFolderOpen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2" /> </ svg > }
        },
    };
    const LucideFolderOutput: Self = Self {
        name: "LucideFolderOutput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 7.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2" /> < path d = "M2 13h10" /> < path d = "m5 10-3 3 3 3" /> </ svg > }
        },
    };
    const LucideFolderPlus: Self = Self {
        name: "LucideFolderPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < line x1 = "12" y1 = "10" x2 = "12" y2 = "16" /> < line x1 = "9" y1 = "13" x2 = "15" y2 = "13" /> </ svg > }
        },
    };
    const LucideFolderSearch2: Self = Self {
        name: "LucideFolderSearch2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < circle cx = "11.5" cy = "12.5" r = "2.5" /> < path d = "M13.27 14.27 15 16" /> </ svg > }
        },
    };
    const LucideFolderSearch: Self = Self {
        name: "LucideFolderSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v4" /> < circle cx = "17" cy = "17" r = "3" /> < path d = "m21 21-1.5-1.5" /> </ svg > }
        },
    };
    const LucideFolderSymlink: Self = Self {
        name: "LucideFolderSymlink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2" /> < path d = "m8 16 3-3-3-3" /> < path d = "M2 16v-1a2 2 0 0 1 2-2h6" /> </ svg > }
        },
    };
    const LucideFolderTree: Self = Self {
        name: "LucideFolderTree",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 10h7a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z" /> < path d = "M13 21h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.88a1 1 0 0 1-.9-.55l-.44-.9a1 1 0 0 0-.9-.55H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z" /> < path d = "M3 3v2c0 1.1.9 2 2 2h3" /> < path d = "M3 3v13c0 1.1.9 2 2 2h3" /> </ svg > }
        },
    };
    const LucideFolderUp: Self = Self {
        name: "LucideFolderUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < path d = "M12 10v6" /> < path d = "m9 13 3-3 3 3" /> </ svg > }
        },
    };
    const LucideFolderX: Self = Self {
        name: "LucideFolderX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> < path d = "m9.5 10.5 5 5" /> < path d = "m14.5 10.5-5 5" /> </ svg > }
        },
    };
    const LucideFolder: Self = Self {
        name: "LucideFolder",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z" /> </ svg > }
        },
    };
    const LucideFolders: Self = Self {
        name: "LucideFolders",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 17h12a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.93a2 2 0 0 1-1.66-.9l-.82-1.2a2 2 0 0 0-1.66-.9H8a2 2 0 0 0-2 2v9c0 1.1.9 2 2 2Z" /> < path d = "M2 8v11c0 1.1.9 2 2 2h14" /> </ svg > }
        },
    };
    const LucideFormInput: Self = Self {
        name: "LucideFormInput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "6" width = "20" height = "12" rx = "2" /> < path d = "M12 12h.01" /> < path d = "M17 12h.01" /> < path d = "M7 12h.01" /> </ svg > }
        },
    };
    const LucideForward: Self = Self {
        name: "LucideForward",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "15 17 20 12 15 7" /> < path d = "M4 18v-2a4 4 0 0 1 4-4h12" /> </ svg > }
        },
    };
    const LucideFrame: Self = Self {
        name: "LucideFrame",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "22" y1 = "6" x2 = "2" y2 = "6" /> < line x1 = "22" y1 = "18" x2 = "2" y2 = "18" /> < line x1 = "6" y1 = "2" x2 = "6" y2 = "22" /> < line x1 = "18" y1 = "2" x2 = "18" y2 = "22" /> </ svg > }
        },
    };
    const LucideFramer: Self = Self {
        name: "LucideFramer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7" /> </ svg > }
        },
    };
    const LucideFrown: Self = Self {
        name: "LucideFrown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M16 16s-1.5-2-4-2-4 2-4 2" /> < line x1 = "9" y1 = "9" x2 = "9.01" y2 = "9" /> < line x1 = "15" y1 = "9" x2 = "15.01" y2 = "9" /> </ svg > }
        },
    };
    const LucideFuel: Self = Self {
        name: "LucideFuel",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "3" y1 = "22" x2 = "15" y2 = "22" /> < line x1 = "4" y1 = "9" x2 = "14" y2 = "9" /> < path d = "M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18" /> < path d = "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2h0a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5" /> </ svg > }
        },
    };
    const LucideFunctionSquare: Self = Self {
        name: "LucideFunctionSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3" /> < path d = "M9 11.2h5.7" /> </ svg > }
        },
    };
    const LucideGamepad2: Self = Self {
        name: "LucideGamepad2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "6" y1 = "11" x2 = "10" y2 = "11" /> < line x1 = "8" y1 = "9" x2 = "8" y2 = "13" /> < line x1 = "15" y1 = "12" x2 = "15.01" y2 = "12" /> < line x1 = "18" y1 = "10" x2 = "18.01" y2 = "10" /> < path d = "M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z" /> </ svg > }
        },
    };
    const LucideGamepad: Self = Self {
        name: "LucideGamepad",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "6" y1 = "12" x2 = "10" y2 = "12" /> < line x1 = "8" y1 = "10" x2 = "8" y2 = "14" /> < line x1 = "15" y1 = "13" x2 = "15.01" y2 = "13" /> < line x1 = "18" y1 = "11" x2 = "18.01" y2 = "11" /> < rect x = "2" y = "6" width = "20" height = "12" rx = "2" /> </ svg > }
        },
    };
    const LucideGauge: Self = Self {
        name: "LucideGauge",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m12 15 3.5-3.5" /> < path d = "M20.3 18c.4-1 .7-2.2.7-3.4C21 9.8 17 6 12 6s-9 3.8-9 8.6c0 1.2.3 2.4.7 3.4" /> </ svg > }
        },
    };
    const LucideGavel: Self = Self {
        name: "LucideGavel",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m14 13-7.5 7.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L11 10" /> < path d = "m16 16 6-6" /> < path d = "m8 8 6-6" /> < path d = "m9 7 8 8" /> < path d = "m21 11-8-8" /> </ svg > }
        },
    };
    const LucideGem: Self = Self {
        name: "LucideGem",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "6 3 18 3 22 9 12 22 2 9" /> < path d = "m12 22 4-13-3-6" /> < path d = "M12 22 8 9l3-6" /> < path d = "M2 9h20" /> </ svg > }
        },
    };
    const LucideGhost: Self = Self {
        name: "LucideGhost",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 10h.01" /> < path d = "M15 10h.01" /> < path d = "M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z" /> </ svg > }
        },
    };
    const LucideGift: Self = Self {
        name: "LucideGift",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "20 12 20 22 4 22 4 12" /> < rect x = "2" y = "7" width = "20" height = "5" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "7" /> < path d = "M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z" /> < path d = "M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z" /> </ svg > }
        },
    };
    const LucideGitBranchPlus: Self = Self {
        name: "LucideGitBranchPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 3v12" /> < path d = "M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" /> < path d = "M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" /> < path d = "M15 6a9 9 0 0 0-9 9" /> < path d = "M18 15v6" /> < path d = "M21 18h-6" /> </ svg > }
        },
    };
    const LucideGitBranch: Self = Self {
        name: "LucideGitBranch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "6" y1 = "3" x2 = "6" y2 = "15" /> < circle cx = "18" cy = "6" r = "3" /> < circle cx = "6" cy = "18" r = "3" /> < path d = "M18 9a9 9 0 0 1-9 9" /> </ svg > }
        },
    };
    const LucideGitCommit: Self = Self {
        name: "LucideGitCommit",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "3" /> < line x1 = "3" y1 = "12" x2 = "9" y2 = "12" /> < line x1 = "15" y1 = "12" x2 = "21" y2 = "12" /> </ svg > }
        },
    };
    const LucideGitCompare: Self = Self {
        name: "LucideGitCompare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < path d = "M13 6h3a2 2 0 0 1 2 2v7" /> < path d = "M11 18H8a2 2 0 0 1-2-2V9" /> </ svg > }
        },
    };
    const LucideGitFork: Self = Self {
        name: "LucideGitFork",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < circle cx = "18" cy = "6" r = "3" /> < path d = "M18 9v1a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V9" /> < path d = "M12 12v3" /> </ svg > }
        },
    };
    const LucideGitMerge: Self = Self {
        name: "LucideGitMerge",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < path d = "M6 21V9a9 9 0 0 0 9 9" /> </ svg > }
        },
    };
    const LucideGitPullRequestClosed: Self = Self {
        name: "LucideGitPullRequestClosed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < path d = "M18 11.5V15" /> < path d = "m21 3-6 6" /> < path d = "m21 9-6-6" /> < line x1 = "6" y1 = "9" x2 = "6" y2 = "21" /> </ svg > }
        },
    };
    const LucideGitPullRequestDraft: Self = Self {
        name: "LucideGitPullRequestDraft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < path d = "M18 6V5" /> < path d = "M18 11v-1" /> < line x1 = "6" y1 = "9" x2 = "6" y2 = "21" /> </ svg > }
        },
    };
    const LucideGitPullRequest: Self = Self {
        name: "LucideGitPullRequest",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "18" r = "3" /> < circle cx = "6" cy = "6" r = "3" /> < path d = "M13 6h3a2 2 0 0 1 2 2v7" /> < line x1 = "6" y1 = "9" x2 = "6" y2 = "21" /> </ svg > }
        },
    };
    const LucideGithub: Self = Self {
        name: "LucideGithub",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4" /> < path d = "M9 18c-4.51 2-5-2-7-2" /> </ svg > }
        },
    };
    const LucideGitlab: Self = Self {
        name: "LucideGitlab",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z" /> </ svg > }
        },
    };
    const LucideGlassWater: Self = Self {
        name: "LucideGlassWater",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z" /> < path d = "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0" /> </ svg > }
        },
    };
    const LucideGlasses: Self = Self {
        name: "LucideGlasses",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "6" cy = "15" r = "4" /> < circle cx = "18" cy = "15" r = "4" /> < path d = "M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2" /> < path d = "M2.5 13 5 7c.7-1.3 1.4-2 3-2" /> < path d = "M21.5 13 19 7c-.7-1.3-1.5-2-3-2" /> </ svg > }
        },
    };
    const LucideGlobe2: Self = Self {
        name: "LucideGlobe2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 21v-4a2 2 0 0 1 2-2h4" /> < path d = "M7 4v2a3 3 0 0 0 3 2h0a2 2 0 0 1 2 2 2 2 0 0 0 4 0 2 2 0 0 1 2-2h3" /> < path d = "M3 11h2a2 2 0 0 1 2 2v1a2 2 0 0 0 2 2 2 2 0 0 1 2 2v4" /> < circle cx = "12" cy = "12" r = "10" /> </ svg > }
        },
    };
    const LucideGlobe: Self = Self {
        name: "LucideGlobe",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> < path d = "M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" /> </ svg > }
        },
    };
    const LucideGrab: Self = Self {
        name: "LucideGrab",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 11.5V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4" /> < path d = "M14 10V8a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2" /> < path d = "M10 9.9V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v5" /> < path d = "M6 14v0a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0" /> < path d = "M18 11v0a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0" /> </ svg > }
        },
    };
    const LucideGraduationCap: Self = Self {
        name: "LucideGraduationCap",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 10v6M2 10l10-5 10 5-10 5z" /> < path d = "M6 12v5c3 3 9 3 12 0v-5" /> </ svg > }
        },
    };
    const LucideGrape: Self = Self {
        name: "LucideGrape",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 5V2l-5.89 5.89" /> < circle cx = "16.6" cy = "15.89" r = "3" /> < circle cx = "8.11" cy = "7.4" r = "3" /> < circle cx = "12.35" cy = "11.65" r = "3" /> < circle cx = "13.91" cy = "5.85" r = "3" /> < circle cx = "18.15" cy = "10.09" r = "3" /> < circle cx = "6.56" cy = "13.2" r = "3" /> < circle cx = "10.8" cy = "17.44" r = "3" /> < circle cx = "5" cy = "19" r = "3" /> </ svg > }
        },
    };
    const LucideGrid: Self = Self {
        name: "LucideGrid",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "3" y1 = "9" x2 = "21" y2 = "9" /> < line x1 = "3" y1 = "15" x2 = "21" y2 = "15" /> < line x1 = "9" y1 = "3" x2 = "9" y2 = "21" /> < line x1 = "15" y1 = "3" x2 = "15" y2 = "21" /> </ svg > }
        },
    };
    const LucideGripHorizontal: Self = Self {
        name: "LucideGripHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "9" r = "1" /> < circle cx = "19" cy = "9" r = "1" /> < circle cx = "5" cy = "9" r = "1" /> < circle cx = "12" cy = "15" r = "1" /> < circle cx = "19" cy = "15" r = "1" /> < circle cx = "5" cy = "15" r = "1" /> </ svg > }
        },
    };
    const LucideGripVertical: Self = Self {
        name: "LucideGripVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "9" cy = "12" r = "1" /> < circle cx = "9" cy = "5" r = "1" /> < circle cx = "9" cy = "19" r = "1" /> < circle cx = "15" cy = "12" r = "1" /> < circle cx = "15" cy = "5" r = "1" /> < circle cx = "15" cy = "19" r = "1" /> </ svg > }
        },
    };
    const LucideHammer: Self = Self {
        name: "LucideHammer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m15 12-8.5 8.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L12 9" /> < path d = "M17.64 15 22 10.64" /> < path d = "m20.91 11.7-1.25-1.25c-.6-.6-.93-1.4-.93-2.25v-.86L16.01 4.6a5.56 5.56 0 0 0-3.94-1.64H9l.92.82A6.18 6.18 0 0 1 12 8.4v1.56l2 2h2.47l2.26 1.91" /> </ svg > }
        },
    };
    const LucideHandMetal: Self = Self {
        name: "LucideHandMetal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 12.5V10a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4" /> < path d = "M14 11V9a2 2 0 1 0-4 0v2" /> < path d = "M10 10.5V5a2 2 0 1 0-4 0v9" /> < path d = "m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5" /> </ svg > }
        },
    };
    const LucideHand: Self = Self {
        name: "LucideHand",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 11V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0" /> < path d = "M14 10V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2" /> < path d = "M10 10.5V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v8" /> < path d = "M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15" /> </ svg > }
        },
    };
    const LucideHardDrive: Self = Self {
        name: "LucideHardDrive",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "22" y1 = "12" x2 = "2" y2 = "12" /> < path d = "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z" /> < line x1 = "6" y1 = "16" x2 = "6.01" y2 = "16" /> < line x1 = "10" y1 = "16" x2 = "10.01" y2 = "16" /> </ svg > }
        },
    };
    const LucideHardHat: Self = Self {
        name: "LucideHardHat",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v2z" /> < path d = "M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5" /> < path d = "M4 15v-3a6 6 0 0 1 6-6h0" /> < path d = "M14 6h0a6 6 0 0 1 6 6v3" /> </ svg > }
        },
    };
    const LucideHash: Self = Self {
        name: "LucideHash",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "4" y1 = "9" x2 = "20" y2 = "9" /> < line x1 = "4" y1 = "15" x2 = "20" y2 = "15" /> < line x1 = "10" y1 = "3" x2 = "8" y2 = "21" /> < line x1 = "16" y1 = "3" x2 = "14" y2 = "21" /> </ svg > }
        },
    };
    const LucideHaze: Self = Self {
        name: "LucideHaze",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m5.2 6.2 1.4 1.4" /> < path d = "M2 13h2" /> < path d = "M20 13h2" /> < path d = "m17.4 7.6 1.4-1.4" /> < path d = "M22 17H2" /> < path d = "M22 21H2" /> < path d = "M16 13a4 4 0 0 0-8 0" /> < path d = "M12 5V2.5" /> </ svg > }
        },
    };
    const LucideHeadphones: Self = Self {
        name: "LucideHeadphones",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 18v-6a9 9 0 0 1 18 0v6" /> < path d = "M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z" /> </ svg > }
        },
    };
    const LucideHeartCrack: Self = Self {
        name: "LucideHeartCrack",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z" /> < path d = "m12 13-1-1 2-2-3-2.5 2.77-2.92" /> </ svg > }
        },
    };
    const LucideHeartHandshake: Self = Self {
        name: "LucideHeartHandshake",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z" /> < path d = "M12 5.36 8.87 8.5a2.13 2.13 0 0 0 0 3h0a2.13 2.13 0 0 0 3 0l2.26-2.21a3 3 0 0 1 4.22 0l2.4 2.4" /> < path d = "m18 15-2-2" /> < path d = "m15 18-2-2" /> </ svg > }
        },
    };
    const LucideHeartOff: Self = Self {
        name: "LucideHeartOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4.12 4.107a5.4 5.4 0 0 0-.538.473C1.46 6.7 1.33 10.28 4 13l8 8 4.5-4.5" /> < path d = "M19.328 13.672 20 13c2.67-2.72 2.54-6.3.42-8.42a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-2.386-1.393" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideHeartPulse: Self = Self {
        name: "LucideHeartPulse",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z" /> < path d = "M3.5 12h6l.5-1 2 4.5 2-7 1.5 3.5h5" /> </ svg > }
        },
    };
    const LucideHeart: Self = Self {
        name: "LucideHeart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.42 4.58a5.4 5.4 0 0 0-7.65 0l-.77.78-.77-.78a5.4 5.4 0 0 0-7.65 0C1.46 6.7 1.33 10.28 4 13l8 8 8-8c2.67-2.72 2.54-6.3.42-8.42z" /> </ svg > }
        },
    };
    const LucideHelpCircle: Self = Self {
        name: "LucideHelpCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" /> < line x1 = "12" y1 = "17" x2 = "12.01" y2 = "17" /> </ svg > }
        },
    };
    const LucideHexagon: Self = Self {
        name: "LucideHexagon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z" /> </ svg > }
        },
    };
    const LucideHighlighter: Self = Self {
        name: "LucideHighlighter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m9 11-6 6v3h9l3-3" /> < path d = "m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4" /> </ svg > }
        },
    };
    const LucideHistory: Self = Self {
        name: "LucideHistory",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3v5h5" /> < path d = "M3.05 13A9 9 0 1 0 6 5.3L3 8" /> < path d = "M12 7v5l4 2" /> </ svg > }
        },
    };
    const LucideHome: Self = Self {
        name: "LucideHome",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" /> < polyline points = "9 22 9 12 15 12 15 22" /> </ svg > }
        },
    };
    const LucideHourglass: Self = Self {
        name: "LucideHourglass",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 22h14" /> < path d = "M5 2h14" /> < path d = "M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22" /> < path d = "M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2" /> </ svg > }
        },
    };
    const LucideIceCream: Self = Self {
        name: "LucideIceCream",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11" /> < path d = "M17 7A5 5 0 0 0 7 7" /> < path d = "M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4" /> </ svg > }
        },
    };
    const LucideImageMinus: Self = Self {
        name: "LucideImageMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7" /> < line x1 = "16" y1 = "5" x2 = "22" y2 = "5" /> < circle cx = "9" cy = "9" r = "2" /> < path d = "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" /> </ svg > }
        },
    };
    const LucideImageOff: Self = Self {
        name: "LucideImageOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < path d = "M10.41 10.41a2 2 0 1 1-2.83-2.83" /> < line x1 = "13.5" y1 = "13.5" x2 = "6" y2 = "21" /> < line x1 = "18" y1 = "12" x2 = "21" y2 = "15" /> < path d = "M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59" /> < path d = "M21 15V5a2 2 0 0 0-2-2H9" /> </ svg > }
        },
    };
    const LucideImagePlus: Self = Self {
        name: "LucideImagePlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7" /> < line x1 = "16" y1 = "5" x2 = "22" y2 = "5" /> < line x1 = "19" y1 = "2" x2 = "19" y2 = "8" /> < circle cx = "9" cy = "9" r = "2" /> < path d = "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" /> </ svg > }
        },
    };
    const LucideImage: Self = Self {
        name: "LucideImage",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < circle cx = "9" cy = "9" r = "2" /> < path d = "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" /> </ svg > }
        },
    };
    const LucideImport: Self = Self {
        name: "LucideImport",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 3v12" /> < path d = "m8 11 4 4 4-4" /> < path d = "M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4" /> </ svg > }
        },
    };
    const LucideInbox: Self = Self {
        name: "LucideInbox",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "22 12 16 12 14 15 10 15 8 12 2 12" /> < path d = "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z" /> </ svg > }
        },
    };
    const LucideIndent: Self = Self {
        name: "LucideIndent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "3 8 7 12 3 16" /> < line x1 = "21" y1 = "12" x2 = "11" y2 = "12" /> < line x1 = "21" y1 = "6" x2 = "11" y2 = "6" /> < line x1 = "21" y1 = "18" x2 = "11" y2 = "18" /> </ svg > }
        },
    };
    const LucideIndianRupee: Self = Self {
        name: "LucideIndianRupee",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 3h12" /> < path d = "M6 8h12" /> < path d = "m6 13 8.5 8" /> < path d = "M6 13h3" /> < path d = "M9 13c6.667 0 6.667-10 0-10" /> </ svg > }
        },
    };
    const LucideInfinity: Self = Self {
        name: "LucideInfinity",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.178 8c5.096 0 5.096 8 0 8-5.095 0-7.133-8-12.739-8-4.585 0-4.585 8 0 8 5.606 0 7.644-8 12.74-8z" /> </ svg > }
        },
    };
    const LucideInfo: Self = Self {
        name: "LucideInfo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "12" y1 = "16" x2 = "12" y2 = "12" /> < line x1 = "12" y1 = "8" x2 = "12.01" y2 = "8" /> </ svg > }
        },
    };
    const LucideInspect: Self = Self {
        name: "LucideInspect",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6" /> < path d = "m12 12 4 10 1.7-4.3L22 16Z" /> </ svg > }
        },
    };
    const LucideInstagram: Self = Self {
        name: "LucideInstagram",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "2" width = "20" height = "20" rx = "5" ry = "5" /> < path d = "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z" /> < line x1 = "17.5" y1 = "6.5" x2 = "17.51" y2 = "6.5" /> </ svg > }
        },
    };
    const LucideItalic: Self = Self {
        name: "LucideItalic",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "19" y1 = "4" x2 = "10" y2 = "4" /> < line x1 = "14" y1 = "20" x2 = "5" y2 = "20" /> < line x1 = "15" y1 = "4" x2 = "9" y2 = "20" /> </ svg > }
        },
    };
    const LucideJapaneseYen: Self = Self {
        name: "LucideJapaneseYen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 9.5V21m0-11.5L6 3m6 6.5L18 3" /> < path d = "M6 15h12" /> < path d = "M6 11h12" /> </ svg > }
        },
    };
    const LucideJoystick: Self = Self {
        name: "LucideJoystick",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z" /> < path d = "M6 15v-2" /> < path d = "M12 15V9" /> < circle cx = "12" cy = "6" r = "3" /> </ svg > }
        },
    };
    const LucideKey: Self = Self {
        name: "LucideKey",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21 2-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0 3 3L22 7l-3-3m-3.5 3.5L19 4" /> </ svg > }
        },
    };
    const LucideKeyboard: Self = Self {
        name: "LucideKeyboard",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "16" rx = "2" ry = "2" /> < path d = "M6 8h.001" /> < path d = "M10 8h.001" /> < path d = "M14 8h.001" /> < path d = "M18 8h.001" /> < path d = "M8 12h.001" /> < path d = "M12 12h.001" /> < path d = "M16 12h.001" /> < path d = "M7 16h10" /> </ svg > }
        },
    };
    const LucideLampCeiling: Self = Self {
        name: "LucideLampCeiling",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2v5" /> < path d = "M6 7h12l4 9H2l4-9Z" /> < path d = "M9.17 16a3 3 0 1 0 5.66 0" /> </ svg > }
        },
    };
    const LucideLampDesk: Self = Self {
        name: "LucideLampDesk",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m14 5-3 3 2 7 8-8-7-2Z" /> < path d = "m14 5-3 3-3-3 3-3 3 3Z" /> < path d = "M9.5 6.5 4 12l3 6" /> < path d = "M3 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H3Z" /> </ svg > }
        },
    };
    const LucideLampFloor: Self = Self {
        name: "LucideLampFloor",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 2h6l3 7H6l3-7Z" /> < path d = "M12 9v13" /> < path d = "M9 22h6" /> </ svg > }
        },
    };
    const LucideLampWallDown: Self = Self {
        name: "LucideLampWallDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 13h6l3 7H8l3-7Z" /> < path d = "M14 13V8a2 2 0 0 0-2-2H8" /> < path d = "M4 9h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4v6Z" /> </ svg > }
        },
    };
    const LucideLampWallUp: Self = Self {
        name: "LucideLampWallUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 4h6l3 7H8l3-7Z" /> < path d = "M14 11v5a2 2 0 0 1-2 2H8" /> < path d = "M4 15h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H4v-6Z" /> </ svg > }
        },
    };
    const LucideLamp: Self = Self {
        name: "LucideLamp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 2h8l4 10H4L8 2Z" /> < path d = "M12 12v6" /> < path d = "M8 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H8Z" /> </ svg > }
        },
    };
    const LucideLandmark: Self = Self {
        name: "LucideLandmark",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "3" y1 = "22" x2 = "21" y2 = "22" /> < line x1 = "6" y1 = "18" x2 = "6" y2 = "11" /> < line x1 = "10" y1 = "18" x2 = "10" y2 = "11" /> < line x1 = "14" y1 = "18" x2 = "14" y2 = "11" /> < line x1 = "18" y1 = "18" x2 = "18" y2 = "11" /> < polygon points = "12 2 20 7 4 7" /> </ svg > }
        },
    };
    const LucideLanguages: Self = Self {
        name: "LucideLanguages",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m5 8 6 6" /> < path d = "m4 14 6-6 2-3" /> < path d = "M2 5h12" /> < path d = "M7 2h1" /> < path d = "m22 22-5-10-5 10" /> < path d = "M14 18h6" /> </ svg > }
        },
    };
    const LucideLaptop2: Self = Self {
        name: "LucideLaptop2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "4" width = "18" height = "12" rx = "2" ry = "2" /> < line x1 = "2" y1 = "20" x2 = "22" y2 = "20" /> </ svg > }
        },
    };
    const LucideLaptop: Self = Self {
        name: "LucideLaptop",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16" /> </ svg > }
        },
    };
    const LucideLassoSelect: Self = Self {
        name: "LucideLassoSelect",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 22a5 5 0 0 1-2-4" /> < path d = "M7 16.93c.96.43 1.96.74 2.99.91" /> < path d = "M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2" /> < path d = "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" /> < path d = "M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14v0z" /> </ svg > }
        },
    };
    const LucideLasso: Self = Self {
        name: "LucideLasso",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 22a5 5 0 0 1-2-4" /> < path d = "M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1" /> < path d = "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" /> </ svg > }
        },
    };
    const LucideLaugh: Self = Self {
        name: "LucideLaugh",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z" /> < line x1 = "9" y1 = "9" x2 = "9.01" y2 = "9" /> < line x1 = "15" y1 = "9" x2 = "15.01" y2 = "9" /> </ svg > }
        },
    };
    const LucideLayers: Self = Self {
        name: "LucideLayers",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "12 2 2 7 12 12 22 7 12 2" /> < polyline points = "2 17 12 22 22 17" /> < polyline points = "2 12 12 17 22 12" /> </ svg > }
        },
    };
    const LucideLayoutDashboard: Self = Self {
        name: "LucideLayoutDashboard",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "7" height = "9" /> < rect x = "14" y = "3" width = "7" height = "5" /> < rect x = "14" y = "12" width = "7" height = "9" /> < rect x = "3" y = "16" width = "7" height = "5" /> </ svg > }
        },
    };
    const LucideLayoutGrid: Self = Self {
        name: "LucideLayoutGrid",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "7" height = "7" /> < rect x = "14" y = "3" width = "7" height = "7" /> < rect x = "14" y = "14" width = "7" height = "7" /> < rect x = "3" y = "14" width = "7" height = "7" /> </ svg > }
        },
    };
    const LucideLayoutList: Self = Self {
        name: "LucideLayoutList",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "14" width = "7" height = "7" /> < rect x = "3" y = "3" width = "7" height = "7" /> < line x1 = "14" y1 = "4" x2 = "21" y2 = "4" /> < line x1 = "14" y1 = "9" x2 = "21" y2 = "9" /> < line x1 = "14" y1 = "15" x2 = "21" y2 = "15" /> < line x1 = "14" y1 = "20" x2 = "21" y2 = "20" /> </ svg > }
        },
    };
    const LucideLayoutTemplate: Self = Self {
        name: "LucideLayoutTemplate",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 3H3v7h18V3z" /> < path d = "M21 14h-5v7h5v-7z" /> < path d = "M12 14H3v7h9v-7z" /> </ svg > }
        },
    };
    const LucideLayout: Self = Self {
        name: "LucideLayout",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "3" y1 = "9" x2 = "21" y2 = "9" /> < line x1 = "9" y1 = "21" x2 = "9" y2 = "9" /> </ svg > }
        },
    };
    const LucideLeaf: Self = Self {
        name: "LucideLeaf",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z" /> < path d = "M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12" /> </ svg > }
        },
    };
    const LucideLibrary: Self = Self {
        name: "LucideLibrary",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m16 6 4 14" /> < path d = "M12 6v14" /> < path d = "M8 8v12" /> < path d = "M4 4v16" /> </ svg > }
        },
    };
    const LucideLifeBuoy: Self = Self {
        name: "LucideLifeBuoy",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < circle cx = "12" cy = "12" r = "4" /> < line x1 = "4.93" y1 = "4.93" x2 = "9.17" y2 = "9.17" /> < line x1 = "14.83" y1 = "14.83" x2 = "19.07" y2 = "19.07" /> < line x1 = "14.83" y1 = "9.17" x2 = "19.07" y2 = "4.93" /> < line x1 = "14.83" y1 = "9.17" x2 = "18.36" y2 = "5.64" /> < line x1 = "4.93" y1 = "19.07" x2 = "9.17" y2 = "14.83" /> </ svg > }
        },
    };
    const LucideLightbulbOff: Self = Self {
        name: "LucideLightbulbOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 18h6" /> < path d = "M10 22h4" /> < path d = "m2 2 20 20" /> < path d = "M9 2.804A6 6 0 0 1 18 8a4.65 4.65 0 0 1-1.03 3" /> < path d = "M8.91 14a4.61 4.61 0 0 0-1.41-2.5C6.23 10.23 6 9 6 8a6 6 0 0 1 .084-1" /> </ svg > }
        },
    };
    const LucideLightbulb: Self = Self {
        name: "LucideLightbulb",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "9" y1 = "18" x2 = "15" y2 = "18" /> < line x1 = "10" y1 = "22" x2 = "14" y2 = "22" /> < path d = "M15.09 14c.18-.98.65-1.74 1.41-2.5A4.65 4.65 0 0 0 18 8 6 6 0 0 0 6 8c0 1 .23 2.23 1.5 3.5A4.61 4.61 0 0 1 8.91 14" /> </ svg > }
        },
    };
    const LucideLineChart: Self = Self {
        name: "LucideLineChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3v18h18" /> < path d = "m19 9-5 5-4-4-3 3" /> </ svg > }
        },
    };
    const LucideLink2Off: Self = Self {
        name: "LucideLink2Off",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 17H7A5 5 0 0 1 7 7" /> < path d = "M15 7h2a5 5 0 0 1 4 8" /> < line x1 = "8" y1 = "12" x2 = "12" y2 = "12" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideLink2: Self = Self {
        name: "LucideLink2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 17H7A5 5 0 0 1 7 7h2" /> < path d = "M15 7h2a5 5 0 1 1 0 10h-2" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucideLink: Self = Self {
        name: "LucideLink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" /> < path d = "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" /> </ svg > }
        },
    };
    const LucideLinkedin: Self = Self {
        name: "LucideLinkedin",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z" /> < rect x = "2" y = "9" width = "4" height = "12" /> < circle cx = "4" cy = "4" r = "2" /> </ svg > }
        },
    };
    const LucideListChecks: Self = Self {
        name: "LucideListChecks",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "10" y1 = "6" x2 = "21" y2 = "6" /> < line x1 = "10" y1 = "12" x2 = "21" y2 = "12" /> < line x1 = "10" y1 = "18" x2 = "21" y2 = "18" /> < polyline points = "3 6 4 7 6 5" /> < polyline points = "3 12 4 13 6 11" /> < polyline points = "3 18 4 19 6 17" /> </ svg > }
        },
    };
    const LucideListEnd: Self = Self {
        name: "LucideListEnd",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 12H3" /> < path d = "M16 6H3" /> < path d = "M10 18H3" /> < path d = "M21 6v10a2 2 0 0 1-2 2h-4" /> < path d = "m16 16-2 2 2 2" /> </ svg > }
        },
    };
    const LucideListMinus: Self = Self {
        name: "LucideListMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 12H3" /> < path d = "M16 6H3" /> < path d = "M16 18H3" /> < path d = "M21 12h-6" /> </ svg > }
        },
    };
    const LucideListMusic: Self = Self {
        name: "LucideListMusic",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 15V6" /> < path d = "M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z" /> < path d = "M12 12H3" /> < path d = "M16 6H3" /> < path d = "M12 18H3" /> </ svg > }
        },
    };
    const LucideListOrdered: Self = Self {
        name: "LucideListOrdered",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "10" y1 = "6" x2 = "21" y2 = "6" /> < line x1 = "10" y1 = "12" x2 = "21" y2 = "12" /> < line x1 = "10" y1 = "18" x2 = "21" y2 = "18" /> < path d = "M4 6h1v4" /> < path d = "M4 10h2" /> < path d = "M6 18H4c0-1 2-2 2-3s-1-1.5-2-1" /> </ svg > }
        },
    };
    const LucideListPlus: Self = Self {
        name: "LucideListPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 12H3" /> < path d = "M16 6H3" /> < path d = "M16 18H3" /> < path d = "M18 9v6" /> < path d = "M21 12h-6" /> </ svg > }
        },
    };
    const LucideListStart: Self = Self {
        name: "LucideListStart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 12H3" /> < path d = "M16 18H3" /> < path d = "M10 6H3" /> < path d = "M21 18V8a2 2 0 0 0-2-2h-5" /> < path d = "m16 8-2-2 2-2" /> </ svg > }
        },
    };
    const LucideListVideo: Self = Self {
        name: "LucideListVideo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 12H3" /> < path d = "M16 6H3" /> < path d = "M12 18H3" /> < path d = "m16 12 5 3-5 3v-6Z" /> </ svg > }
        },
    };
    const LucideListX: Self = Self {
        name: "LucideListX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 12H3" /> < path d = "M16 6H3" /> < path d = "M16 18H3" /> < path d = "m19 10-4 4" /> < path d = "m15 10 4 4" /> </ svg > }
        },
    };
    const LucideList: Self = Self {
        name: "LucideList",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "8" y1 = "6" x2 = "21" y2 = "6" /> < line x1 = "8" y1 = "12" x2 = "21" y2 = "12" /> < line x1 = "8" y1 = "18" x2 = "21" y2 = "18" /> < line x1 = "3" y1 = "6" x2 = "3.01" y2 = "6" /> < line x1 = "3" y1 = "12" x2 = "3.01" y2 = "12" /> < line x1 = "3" y1 = "18" x2 = "3.01" y2 = "18" /> </ svg > }
        },
    };
    const LucideLoader2: Self = Self {
        name: "LucideLoader2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 12a9 9 0 1 1-6.219-8.56" /> </ svg > }
        },
    };
    const LucideLoader: Self = Self {
        name: "LucideLoader",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "2" x2 = "12" y2 = "6" /> < line x1 = "12" y1 = "18" x2 = "12" y2 = "22" /> < line x1 = "4.93" y1 = "4.93" x2 = "7.76" y2 = "7.76" /> < line x1 = "16.24" y1 = "16.24" x2 = "19.07" y2 = "19.07" /> < line x1 = "2" y1 = "12" x2 = "6" y2 = "12" /> < line x1 = "18" y1 = "12" x2 = "22" y2 = "12" /> < line x1 = "4.93" y1 = "19.07" x2 = "7.76" y2 = "16.24" /> < line x1 = "16.24" y1 = "7.76" x2 = "19.07" y2 = "4.93" /> </ svg > }
        },
    };
    const LucideLocateFixed: Self = Self {
        name: "LucideLocateFixed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" x2 = "5" y1 = "12" y2 = "12" /> < line x1 = "19" x2 = "22" y1 = "12" y2 = "12" /> < line x1 = "12" x2 = "12" y1 = "2" y2 = "5" /> < line x1 = "12" x2 = "12" y1 = "19" y2 = "22" /> < circle cx = "12" cy = "12" r = "7" /> < circle cx = "12" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideLocateOff: Self = Self {
        name: "LucideLocateOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" x2 = "5" y1 = "12" y2 = "12" /> < line x1 = "19" x2 = "22" y1 = "12" y2 = "12" /> < line x1 = "12" x2 = "12" y1 = "2" y2 = "5" /> < line x1 = "12" x2 = "12" y1 = "19" y2 = "22" /> < path d = "M7.11 7.11C5.83 8.39 5 10.1 5 12c0 3.87 3.13 7 7 7 1.9 0 3.61-.83 4.89-2.11" /> < path d = "M18.71 13.96c.19-.63.29-1.29.29-1.96 0-3.87-3.13-7-7-7-.67 0-1.33.1-1.96.29" /> < line x1 = "2" x2 = "22" y1 = "2" y2 = "22" /> </ svg > }
        },
    };
    const LucideLocate: Self = Self {
        name: "LucideLocate",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" x2 = "5" y1 = "12" y2 = "12" /> < line x1 = "19" x2 = "22" y1 = "12" y2 = "12" /> < line x1 = "12" x2 = "12" y1 = "2" y2 = "5" /> < line x1 = "12" x2 = "12" y1 = "19" y2 = "22" /> < circle cx = "12" cy = "12" r = "7" /> </ svg > }
        },
    };
    const LucideLock: Self = Self {
        name: "LucideLock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "11" width = "18" height = "11" rx = "2" ry = "2" /> < path d = "M7 11V7a5 5 0 0 1 10 0v4" /> </ svg > }
        },
    };
    const LucideLogIn: Self = Self {
        name: "LucideLogIn",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4" /> < polyline points = "10 17 15 12 10 7" /> < line x1 = "15" y1 = "12" x2 = "3" y2 = "12" /> </ svg > }
        },
    };
    const LucideLogOut: Self = Self {
        name: "LucideLogOut",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" /> < polyline points = "16 17 21 12 16 7" /> < line x1 = "21" y1 = "12" x2 = "9" y2 = "12" /> </ svg > }
        },
    };
    const LucideLuggage: Self = Self {
        name: "LucideLuggage",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 20h0a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h0" /> < path d = "M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14" /> < path d = "M10 20h4" /> < circle cx = "16" cy = "20" r = "2" /> < circle cx = "8" cy = "20" r = "2" /> </ svg > }
        },
    };
    const LucideMagnet: Self = Self {
        name: "LucideMagnet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15" /> < path d = "m5 8 4 4" /> < path d = "m12 15 4 4" /> </ svg > }
        },
    };
    const LucideMailCheck: Self = Self {
        name: "LucideMailCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "m16 19 2 2 4-4" /> </ svg > }
        },
    };
    const LucideMailMinus: Self = Self {
        name: "LucideMailMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "M16 19h6" /> </ svg > }
        },
    };
    const LucideMailOpen: Self = Self {
        name: "LucideMailOpen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z" /> < path d = "m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10" /> </ svg > }
        },
    };
    const LucideMailPlus: Self = Self {
        name: "LucideMailPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "M19 16v6" /> < path d = "M16 19h6" /> </ svg > }
        },
    };
    const LucideMailQuestion: Self = Self {
        name: "LucideMailQuestion",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2" /> < path d = "M20 22v.01" /> </ svg > }
        },
    };
    const LucideMailSearch: Self = Self {
        name: "LucideMailSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z" /> < circle cx = "18" cy = "18" r = "3" /> < path d = "m22 22-1.5-1.5" /> </ svg > }
        },
    };
    const LucideMailWarning: Self = Self {
        name: "LucideMailWarning",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "M20 14v4" /> < path d = "M20 22v.01" /> </ svg > }
        },
    };
    const LucideMailX: Self = Self {
        name: "LucideMailX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> < path d = "m17 17 4 4" /> < path d = "m21 17-4 4" /> </ svg > }
        },
    };
    const LucideMail: Self = Self {
        name: "LucideMail",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "16" rx = "2" /> < path d = "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" /> </ svg > }
        },
    };
    const LucideMails: Self = Self {
        name: "LucideMails",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "4" width = "16" height = "13" rx = "2" /> < path d = "m22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7" /> < path d = "M2 8v11c0 1.1.9 2 2 2h14" /> </ svg > }
        },
    };
    const LucideMapPinOff: Self = Self {
        name: "LucideMapPinOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5.43 5.43A8.06 8.06 0 0 0 4 10c0 6 8 12 8 12a29.94 29.94 0 0 0 5-5" /> < path d = "M19.18 13.52A8.66 8.66 0 0 0 20 10a8 8 0 0 0-8-8 7.88 7.88 0 0 0-3.52.82" /> < path d = "M9.13 9.13A2.78 2.78 0 0 0 9 10a3 3 0 0 0 3 3 2.78 2.78 0 0 0 .87-.13" /> < path d = "M14.9 9.25a3 3 0 0 0-2.15-2.16" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideMapPin: Self = Self {
        name: "LucideMapPin",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z" /> < circle cx = "12" cy = "10" r = "3" /> </ svg > }
        },
    };
    const LucideMap: Self = Self {
        name: "LucideMap",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "3 6 9 3 15 6 21 3 21 18 15 21 9 18 3 21" /> < line x1 = "9" y1 = "3" x2 = "9" y2 = "18" /> < line x1 = "15" y1 = "6" x2 = "15" y2 = "21" /> </ svg > }
        },
    };
    const LucideMartini: Self = Self {
        name: "LucideMartini",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 22h8" /> < path d = "M12 11v11" /> < path d = "m19 3-7 8-7-8Z" /> </ svg > }
        },
    };
    const LucideMaximize2: Self = Self {
        name: "LucideMaximize2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "15 3 21 3 21 9" /> < polyline points = "9 21 3 21 3 15" /> < line x1 = "21" y1 = "3" x2 = "14" y2 = "10" /> < line x1 = "3" y1 = "21" x2 = "10" y2 = "14" /> </ svg > }
        },
    };
    const LucideMaximize: Self = Self {
        name: "LucideMaximize",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 3H5a2 2 0 0 0-2 2v3" /> < path d = "M21 8V5a2 2 0 0 0-2-2h-3" /> < path d = "M3 16v3a2 2 0 0 0 2 2h3" /> < path d = "M16 21h3a2 2 0 0 0 2-2v-3" /> </ svg > }
        },
    };
    const LucideMedal: Self = Self {
        name: "LucideMedal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15" /> < path d = "M11 12 5.12 2.2" /> < path d = "m13 12 5.88-9.8" /> < path d = "M8 7h8" /> < circle cx = "12" cy = "17" r = "5" /> < path d = "M12 18v-2h-.5" /> </ svg > }
        },
    };
    const LucideMegaphoneOff: Self = Self {
        name: "LucideMegaphoneOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9.26 9.26 3 11v3l14.14 3.14" /> < path d = "M21 15.34V6l-7.31 2.03" /> < path d = "M11.6 16.8a3 3 0 1 1-5.8-1.6" /> < line x1 = "2" x2 = "22" y1 = "2" y2 = "22" /> </ svg > }
        },
    };
    const LucideMegaphone: Self = Self {
        name: "LucideMegaphone",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m3 11 18-5v12L3 14v-3z" /> < path d = "M11.6 16.8a3 3 0 1 1-5.8-1.6" /> </ svg > }
        },
    };
    const LucideMeh: Self = Self {
        name: "LucideMeh",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "8" y1 = "15" x2 = "16" y2 = "15" /> < line x1 = "9" y1 = "9" x2 = "9.01" y2 = "9" /> < line x1 = "15" y1 = "9" x2 = "15.01" y2 = "9" /> </ svg > }
        },
    };
    const LucideMenu: Self = Self {
        name: "LucideMenu",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "4" y1 = "12" x2 = "20" y2 = "12" /> < line x1 = "4" y1 = "6" x2 = "20" y2 = "6" /> < line x1 = "4" y1 = "18" x2 = "20" y2 = "18" /> </ svg > }
        },
    };
    const LucideMessageCircle: Self = Self {
        name: "LucideMessageCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z" /> </ svg > }
        },
    };
    const LucideMessageSquare: Self = Self {
        name: "LucideMessageSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z" /> </ svg > }
        },
    };
    const LucideMic2: Self = Self {
        name: "LucideMic2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m12 8-9.04 9.06a2.82 2.82 0 1 0 3.98 3.98L16 12" /> < circle cx = "17" cy = "7" r = "5" /> </ svg > }
        },
    };
    const LucideMicOff: Self = Self {
        name: "LucideMicOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < path d = "M18.89 13.23A7.12 7.12 0 0 0 19 12v-2" /> < path d = "M5 10v2a7 7 0 0 0 12 5" /> < path d = "M15 9.34V5a3 3 0 0 0-5.68-1.33" /> < path d = "M9 9v3a3 3 0 0 0 5.12 2.12" /> < line x1 = "12" y1 = "19" x2 = "12" y2 = "22" /> </ svg > }
        },
    };
    const LucideMic: Self = Self {
        name: "LucideMic",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z" /> < path d = "M19 10v2a7 7 0 0 1-14 0v-2" /> < line x1 = "12" y1 = "19" x2 = "12" y2 = "22" /> </ svg > }
        },
    };
    const LucideMicroscope: Self = Self {
        name: "LucideMicroscope",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 18h8" /> < path d = "M3 22h18" /> < path d = "M14 22a7 7 0 1 0 0-14h-1" /> < path d = "M9 14h2" /> < path d = "M8 6h4" /> < path d = "M13 10V6.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2.5a.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V10c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2Z" /> </ svg > }
        },
    };
    const LucideMicrowave: Self = Self {
        name: "LucideMicrowave",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "15" rx = "2" /> < rect x = "6" y = "8" width = "8" height = "7" rx = "1" /> < path d = "M18 8v7" /> < path d = "M6 19v2" /> < path d = "M18 19v2" /> </ svg > }
        },
    };
    const LucideMilestone: Self = Self {
        name: "LucideMilestone",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 6H5a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h13l4-3.5L18 6Z" /> < path d = "M12 13v9" /> < path d = "M12 2v4" /> </ svg > }
        },
    };
    const LucideMinimize2: Self = Self {
        name: "LucideMinimize2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "4 14 10 14 10 20" /> < polyline points = "20 10 14 10 14 4" /> < line x1 = "14" y1 = "10" x2 = "21" y2 = "3" /> < line x1 = "3" y1 = "21" x2 = "10" y2 = "14" /> </ svg > }
        },
    };
    const LucideMinimize: Self = Self {
        name: "LucideMinimize",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 3v3a2 2 0 0 1-2 2H3" /> < path d = "M21 8h-3a2 2 0 0 1-2-2V3" /> < path d = "M3 16h3a2 2 0 0 1 2 2v3" /> < path d = "M16 21v-3a2 2 0 0 1 2-2h3" /> </ svg > }
        },
    };
    const LucideMinusCircle: Self = Self {
        name: "LucideMinusCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucideMinusSquare: Self = Self {
        name: "LucideMinusSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucideMinus: Self = Self {
        name: "LucideMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "5" y1 = "12" x2 = "19" y2 = "12" /> </ svg > }
        },
    };
    const LucideMonitorOff: Self = Self {
        name: "LucideMonitorOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2" /> < path d = "M22 15V5a2 2 0 0 0-2-2H9" /> < path d = "M8 21h8" /> < path d = "M12 17v4" /> < path d = "m2 2 20 20" /> </ svg > }
        },
    };
    const LucideMonitorSpeaker: Self = Self {
        name: "LucideMonitorSpeaker",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5.5 20H8" /> < path d = "M17 9h.01" /> < rect x = "12" y = "4" width = "10" height = "16" rx = "2" /> < path d = "M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4" /> < circle cx = "17" cy = "15" r = "1" /> </ svg > }
        },
    };
    const LucideMonitor: Self = Self {
        name: "LucideMonitor",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "3" width = "20" height = "14" rx = "2" ry = "2" /> < line x1 = "8" y1 = "21" x2 = "16" y2 = "21" /> < line x1 = "12" y1 = "17" x2 = "12" y2 = "21" /> </ svg > }
        },
    };
    const LucideMoon: Self = Self {
        name: "LucideMoon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 3a6.364 6.364 0 0 0 9 9 9 9 0 1 1-9-9Z" /> </ svg > }
        },
    };
    const LucideMoreHorizontal: Self = Self {
        name: "LucideMoreHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "1" /> < circle cx = "19" cy = "12" r = "1" /> < circle cx = "5" cy = "12" r = "1" /> </ svg > }
        },
    };
    const LucideMoreVertical: Self = Self {
        name: "LucideMoreVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "1" /> < circle cx = "12" cy = "5" r = "1" /> < circle cx = "12" cy = "19" r = "1" /> </ svg > }
        },
    };
    const LucideMountainSnow: Self = Self {
        name: "LucideMountainSnow",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m8 3 4 8 5-5 5 15H2L8 3z" /> < path d = "M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19" /> </ svg > }
        },
    };
    const LucideMountain: Self = Self {
        name: "LucideMountain",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m8 3 4 8 5-5 5 15H2L8 3z" /> </ svg > }
        },
    };
    const LucideMousePointer2: Self = Self {
        name: "LucideMousePointer2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m4 4 7.07 17 2.51-7.39L21 11.07z" /> </ svg > }
        },
    };
    const LucideMousePointerClick: Self = Self {
        name: "LucideMousePointerClick",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m9 9 5 12 1.774-5.226L21 14 9 9z" /> < path d = "m16.071 16.071 4.243 4.243" /> < path d = "m7.188 2.239.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656-2.12 2.122" /> </ svg > }
        },
    };
    const LucideMousePointer: Self = Self {
        name: "LucideMousePointer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m3 3 7.07 16.97 2.51-7.39 7.39-2.51L3 3z" /> < path d = "m13 13 6 6" /> </ svg > }
        },
    };
    const LucideMouse: Self = Self {
        name: "LucideMouse",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "3" width = "12" height = "18" rx = "6" /> < path d = "M12 7v4" /> </ svg > }
        },
    };
    const LucideMove3D: Self = Self {
        name: "LucideMove3D",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 3v16h16" /> < path d = "m5 19 6-6" /> < path d = "m2 6 3-3 3 3" /> < path d = "m18 16 3 3-3 3" /> </ svg > }
        },
    };
    const LucideMoveDiagonal2: Self = Self {
        name: "LucideMoveDiagonal2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "5 11 5 5 11 5" /> < polyline points = "19 13 19 19 13 19" /> < line x1 = "5" y1 = "5" x2 = "19" y2 = "19" /> </ svg > }
        },
    };
    const LucideMoveDiagonal: Self = Self {
        name: "LucideMoveDiagonal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "13 5 19 5 19 11" /> < polyline points = "11 19 5 19 5 13" /> < line x1 = "19" y1 = "5" x2 = "5" y2 = "19" /> </ svg > }
        },
    };
    const LucideMoveHorizontal: Self = Self {
        name: "LucideMoveHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "18 8 22 12 18 16" /> < polyline points = "6 8 2 12 6 16" /> < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> </ svg > }
        },
    };
    const LucideMoveVertical: Self = Self {
        name: "LucideMoveVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "8 18 12 22 16 18" /> < polyline points = "8 6 12 2 16 6" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "22" /> </ svg > }
        },
    };
    const LucideMove: Self = Self {
        name: "LucideMove",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "5 9 2 12 5 15" /> < polyline points = "9 5 12 2 15 5" /> < polyline points = "15 19 12 22 9 19" /> < polyline points = "19 9 22 12 19 15" /> < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "22" /> </ svg > }
        },
    };
    const LucideMusic2: Self = Self {
        name: "LucideMusic2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "8" cy = "18" r = "4" /> < path d = "M12 18V2l7 4" /> </ svg > }
        },
    };
    const LucideMusic3: Self = Self {
        name: "LucideMusic3",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "18" r = "4" /> < path d = "M16 18V2" /> </ svg > }
        },
    };
    const LucideMusic4: Self = Self {
        name: "LucideMusic4",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 18V5l12-2v13" /> < path d = "m9 9 12-2" /> < circle cx = "6" cy = "18" r = "3" /> < circle cx = "18" cy = "16" r = "3" /> </ svg > }
        },
    };
    const LucideMusic: Self = Self {
        name: "LucideMusic",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 18V5l12-2v13" /> < circle cx = "6" cy = "18" r = "3" /> < circle cx = "18" cy = "16" r = "3" /> </ svg > }
        },
    };
    const LucideNavigation2Off: Self = Self {
        name: "LucideNavigation2Off",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9.31 9.31 5 21l7-4 7 4-1.17-3.17" /> < path d = "M14.53 8.88 12 2l-1.17 3.17" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideNavigation2: Self = Self {
        name: "LucideNavigation2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "12 2 19 21 12 17 5 21 12 2" /> </ svg > }
        },
    };
    const LucideNavigationOff: Self = Self {
        name: "LucideNavigationOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8.43 8.43 3 11l8 2 2 8 2.57-5.43" /> < path d = "M17.39 11.73 22 2l-9.73 4.61" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideNavigation: Self = Self {
        name: "LucideNavigation",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "3 11 22 2 13 21 11 13 3 11" /> </ svg > }
        },
    };
    const LucideNetwork: Self = Self {
        name: "LucideNetwork",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "9" y = "2" width = "6" height = "6" /> < rect x = "16" y = "16" width = "6" height = "6" /> < rect x = "2" y = "16" width = "6" height = "6" /> < path d = "M5 16v-4h14v4" /> < path d = "M12 12V8" /> </ svg > }
        },
    };
    const LucideNewspaper: Self = Self {
        name: "LucideNewspaper",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2" /> < path d = "M18 14h-8" /> < path d = "M15 18h-5" /> < path d = "M10 6h8v4h-8V6Z" /> </ svg > }
        },
    };
    const LucideOctagon: Self = Self {
        name: "LucideOctagon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2" /> </ svg > }
        },
    };
    const LucideOption: Self = Self {
        name: "LucideOption",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 3h6l6 18h6" /> < path d = "M14 3h7" /> </ svg > }
        },
    };
    const LucideOutdent: Self = Self {
        name: "LucideOutdent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "7 8 3 12 7 16" /> < line x1 = "21" y1 = "12" x2 = "11" y2 = "12" /> < line x1 = "21" y1 = "6" x2 = "11" y2 = "6" /> < line x1 = "21" y1 = "18" x2 = "11" y2 = "18" /> </ svg > }
        },
    };
    const LucidePackage2: Self = Self {
        name: "LucidePackage2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z" /> < path d = "m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9" /> < path d = "M12 3v6" /> </ svg > }
        },
    };
    const LucidePackageCheck: Self = Self {
        name: "LucidePackageCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m16 16 2 2 4-4" /> < path d = "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14" /> < path d = "M16.5 9.4 7.55 4.24" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucidePackageMinus: Self = Self {
        name: "LucidePackageMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 16h6" /> < path d = "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14" /> < path d = "M16.5 9.4 7.55 4.24" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucidePackageOpen: Self = Self {
        name: "LucidePackageOpen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.91 8.84 8.56 2.23a1.93 1.93 0 0 0-1.81 0L3.1 4.13a2.12 2.12 0 0 0-.05 3.69l12.22 6.93a2 2 0 0 0 1.94 0L21 12.51a2.12 2.12 0 0 0-.09-3.67Z" /> < path d = "m3.09 8.84 12.35-6.61a1.93 1.93 0 0 1 1.81 0l3.65 1.9a2.12 2.12 0 0 1 .1 3.69L8.73 14.75a2 2 0 0 1-1.94 0L3 12.51a2.12 2.12 0 0 1 .09-3.67Z" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "13" /> < path d = "M20 13.5v3.37a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13.5" /> </ svg > }
        },
    };
    const LucidePackagePlus: Self = Self {
        name: "LucidePackagePlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 16h6" /> < path d = "M19 13v6" /> < path d = "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14" /> < path d = "M16.5 9.4 7.55 4.24" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucidePackageSearch: Self = Self {
        name: "LucidePackageSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14" /> < path d = "M16.5 9.4 7.55 4.24" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> < circle cx = "18.5" cy = "15.5" r = "2.5" /> < path d = "M20.27 17.27 22 19" /> </ svg > }
        },
    };
    const LucidePackageX: Self = Self {
        name: "LucidePackageX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14" /> < path d = "M16.5 9.4 7.55 4.24" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> < path d = "m17 13 5 5m-5 0 5-5" /> </ svg > }
        },
    };
    const LucidePackage: Self = Self {
        name: "LucidePackage",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "16.5" y1 = "9.4" x2 = "7.5" y2 = "4.21" /> < path d = "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z" /> < polyline points = "3.29 7 12 12 20.71 7" /> < line x1 = "12" y1 = "22" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucidePaintBucket: Self = Self {
        name: "LucidePaintBucket",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z" /> < path d = "m5 2 5 5" /> < path d = "M2 13h15" /> < path d = "M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z" /> </ svg > }
        },
    };
    const LucidePaintbrush2: Self = Self {
        name: "LucidePaintbrush2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14 19.9V16h3a2 2 0 0 0 2-2v-2H5v2c0 1.1.9 2 2 2h3v3.9a2 2 0 1 0 4 0Z" /> < path d = "M6 12V2h12v10" /> < path d = "M14 2v4" /> < path d = "M10 2v2" /> </ svg > }
        },
    };
    const LucidePaintbrush: Self = Self {
        name: "LucidePaintbrush",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z" /> < path d = "M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7" /> < path d = "M14.5 17.5 4.5 15" /> </ svg > }
        },
    };
    const LucidePalette: Self = Self {
        name: "LucidePalette",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "13.5" cy = "6.5" r = ".5" /> < circle cx = "17.5" cy = "10.5" r = ".5" /> < circle cx = "8.5" cy = "7.5" r = ".5" /> < circle cx = "6.5" cy = "12.5" r = ".5" /> < path d = "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z" /> </ svg > }
        },
    };
    const LucidePalmtree: Self = Self {
        name: "LucidePalmtree",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4" /> < path d = "M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3" /> < path d = "M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35z" /> < path d = "M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14" /> </ svg > }
        },
    };
    const LucidePaperclip: Self = Self {
        name: "LucidePaperclip",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48" /> </ svg > }
        },
    };
    const LucidePartyPopper: Self = Self {
        name: "LucidePartyPopper",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5.8 11.3 2 22l10.7-3.79" /> < path d = "M4 3h.01" /> < path d = "M22 8h.01" /> < path d = "M15 2h.01" /> < path d = "M22 20h.01" /> < path d = "m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12v0c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10" /> < path d = "m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11v0c-.11.7-.72 1.22-1.43 1.22H17" /> < path d = "m11 2 .33.82c.34.86-.2 1.82-1.11 1.98v0C9.52 4.9 9 5.52 9 6.23V7" /> < path d = "M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z" /> </ svg > }
        },
    };
    const LucidePauseCircle: Self = Self {
        name: "LucidePauseCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "10" y1 = "15" x2 = "10" y2 = "9" /> < line x1 = "14" y1 = "15" x2 = "14" y2 = "9" /> </ svg > }
        },
    };
    const LucidePauseOctagon: Self = Self {
        name: "LucidePauseOctagon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 15V9" /> < path d = "M14 15V9" /> < path d = "M7.714 2h8.572L22 7.714v8.572L16.286 22H7.714L2 16.286V7.714L7.714 2z" /> </ svg > }
        },
    };
    const LucidePause: Self = Self {
        name: "LucidePause",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "4" width = "4" height = "16" /> < rect x = "14" y = "4" width = "4" height = "16" /> </ svg > }
        },
    };
    const LucidePenTool: Self = Self {
        name: "LucidePenTool",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m12 19 7-7 3 3-7 7-3-3z" /> < path d = "m18 13-1.5-7.5L2 2l3.5 14.5L13 18l5-5z" /> < path d = "m2 2 7.586 7.586" /> < circle cx = "11" cy = "11" r = "2" /> </ svg > }
        },
    };
    const LucidePencil: Self = Self {
        name: "LucidePencil",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "18" y1 = "2" x2 = "22" y2 = "6" /> < path d = "M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z" /> </ svg > }
        },
    };
    const LucidePercent: Self = Self {
        name: "LucidePercent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "19" y1 = "5" x2 = "5" y2 = "19" /> < circle cx = "6.5" cy = "6.5" r = "2.5" /> < circle cx = "17.5" cy = "17.5" r = "2.5" /> </ svg > }
        },
    };
    const LucidePersonStanding: Self = Self {
        name: "LucidePersonStanding",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "5" r = "1" /> < path d = "m9 20 3-6 3 6" /> < path d = "m6 8 6 2 6-2" /> < path d = "M12 10v4" /> </ svg > }
        },
    };
    const LucidePhoneCall: Self = Self {
        name: "LucidePhoneCall",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> < path d = "M14.05 2a9 9 0 0 1 8 7.94" /> < path d = "M14.05 6A5 5 0 0 1 18 10" /> </ svg > }
        },
    };
    const LucidePhoneForwarded: Self = Self {
        name: "LucidePhoneForwarded",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "18 2 22 6 18 10" /> < line x1 = "14" y1 = "6" x2 = "22" y2 = "6" /> < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> </ svg > }
        },
    };
    const LucidePhoneIncoming: Self = Self {
        name: "LucidePhoneIncoming",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "16 2 16 8 22 8" /> < line x1 = "22" y1 = "2" x2 = "16" y2 = "8" /> < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> </ svg > }
        },
    };
    const LucidePhoneMissed: Self = Self {
        name: "LucidePhoneMissed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "22" y1 = "2" x2 = "16" y2 = "8" /> < line x1 = "16" y1 = "2" x2 = "22" y2 = "8" /> < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> </ svg > }
        },
    };
    const LucidePhoneOff: Self = Self {
        name: "LucidePhoneOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91" /> < line x1 = "22" y1 = "2" x2 = "2" y2 = "22" /> </ svg > }
        },
    };
    const LucidePhoneOutgoing: Self = Self {
        name: "LucidePhoneOutgoing",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "22 8 22 2 16 2" /> < line x1 = "16" y1 = "8" x2 = "22" y2 = "2" /> < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> </ svg > }
        },
    };
    const LucidePhone: Self = Self {
        name: "LucidePhone",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" /> </ svg > }
        },
    };
    const LucidePieChart: Self = Self {
        name: "LucidePieChart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21.21 15.89A10 10 0 1 1 8 2.83" /> < path d = "M22 12A10 10 0 0 0 12 2v10z" /> </ svg > }
        },
    };
    const LucidePiggyBank: Self = Self {
        name: "LucidePiggyBank",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 5c-1.5 0-2.8 1.4-3 2-3.5-1.5-11-.3-11 5 0 1.8 0 3 2 4.5V20h4v-2h3v2h4v-4c1-.5 1.7-1 2-2h2v-4h-2c0-1-.5-1.5-1-2h0V5z" /> < path d = "M2 9v1c0 1.1.9 2 2 2h1" /> < path d = "M16 11h0" /> </ svg > }
        },
    };
    const LucidePinOff: Self = Self {
        name: "LucidePinOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < line x1 = "12" y1 = "17" x2 = "12" y2 = "22" /> < path d = "M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V17h12" /> < path d = "M15 9.34V6h1a2 2 0 0 0 0-4H7.89" /> </ svg > }
        },
    };
    const LucidePin: Self = Self {
        name: "LucidePin",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "17" x2 = "12" y2 = "22" /> < path d = "M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z" /> </ svg > }
        },
    };
    const LucidePipette: Self = Self {
        name: "LucidePipette",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m2 22 1-1h3l9-9" /> < path d = "M3 21v-3l9-9" /> < path d = "m15 6 3.4-3.4a2.1 2.1 0 1 1 3 3L18 9l.4.4a2.1 2.1 0 1 1-3 3l-3.8-3.8a2.1 2.1 0 1 1 3-3l.4.4Z" /> </ svg > }
        },
    };
    const LucidePizza: Self = Self {
        name: "LucidePizza",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 11h.01" /> < path d = "M11 15h.01" /> < path d = "M16 16h.01" /> < path d = "m2 16 20 6-6-20c-3.36.9-6.42 2.67-8.88 5.12A19.876 19.876 0 0 0 2 16Z" /> < path d = "M17 6c-6.29 1.47-9.43 5.13-11 11" /> </ svg > }
        },
    };
    const LucidePlane: Self = Self {
        name: "LucidePlane",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z" /> </ svg > }
        },
    };
    const LucidePlayCircle: Self = Self {
        name: "LucidePlayCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < polygon points = "10 8 16 12 10 16 10 8" /> </ svg > }
        },
    };
    const LucidePlay: Self = Self {
        name: "LucidePlay",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "5 3 19 12 5 21 5 3" /> </ svg > }
        },
    };
    const LucidePlug2: Self = Self {
        name: "LucidePlug2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 2v6" /> < path d = "M15 2v6" /> < path d = "M12 17v5" /> < path d = "M5 8h14" /> < path d = "M6 11V8h12v3a6 6 0 1 1-12 0v0Z" /> </ svg > }
        },
    };
    const LucidePlugZap: Self = Self {
        name: "LucidePlugZap",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m13 2-2 2.5h3L12 7" /> < path d = "M12 22v-3" /> < path d = "M10 13v-2.5" /> < path d = "M10 12.5v-2" /> < path d = "M14 12.5v-2" /> < path d = "M16 15a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-2z" /> </ svg > }
        },
    };
    const LucidePlug: Self = Self {
        name: "LucidePlug",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22v-5" /> < path d = "M9 7V2" /> < path d = "M15 7V2" /> < path d = "M6 13V8h12v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4Z" /> </ svg > }
        },
    };
    const LucidePlusCircle: Self = Self {
        name: "LucidePlusCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "16" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucidePlusSquare: Self = Self {
        name: "LucidePlusSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "16" /> < line x1 = "8" y1 = "12" x2 = "16" y2 = "12" /> </ svg > }
        },
    };
    const LucidePlus: Self = Self {
        name: "LucidePlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "5" x2 = "12" y2 = "19" /> < line x1 = "5" y1 = "12" x2 = "19" y2 = "12" /> </ svg > }
        },
    };
    const LucidePocket: Self = Self {
        name: "LucidePocket",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z" /> < polyline points = "8 10 12 14 16 10" /> </ svg > }
        },
    };
    const LucidePodcast: Self = Self {
        name: "LucidePodcast",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "11" r = "1" /> < path d = "M11 17a1 1 0 0 1 2 0c0 .5-.34 3-.5 4.5a.5.5 0 0 1-1 0c-.16-1.5-.5-4-.5-4.5Z" /> < path d = "M8 14a5 5 0 1 1 8 0" /> < path d = "M17 18.5a9 9 0 1 0-10 0" /> </ svg > }
        },
    };
    const LucidePointer: Self = Self {
        name: "LucidePointer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 14a8 8 0 0 1-8 8" /> < path d = "M18 11v-1a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0" /> < path d = "M14 10V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1" /> < path d = "M10 9.5V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v10" /> < path d = "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15" /> </ svg > }
        },
    };
    const LucidePoundSterling: Self = Self {
        name: "LucidePoundSterling",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 7c0-5.333-8-5.333-8 0" /> < path d = "M10 7v14" /> < path d = "M6 21h12" /> < path d = "M6 13h10" /> </ svg > }
        },
    };
    const LucidePowerOff: Self = Self {
        name: "LucidePowerOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.36 6.64A9 9 0 0 1 20.77 15" /> < path d = "M6.16 6.16a9 9 0 1 0 12.68 12.68" /> < path d = "M12 2v4" /> < path d = "m2 2 20 20" /> </ svg > }
        },
    };
    const LucidePower: Self = Self {
        name: "LucidePower",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18.36 6.64a9 9 0 1 1-12.73 0" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucidePrinter: Self = Self {
        name: "LucidePrinter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "6 9 6 2 18 2 18 9" /> < path d = "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2" /> < rect x = "6" y = "14" width = "12" height = "8" /> </ svg > }
        },
    };
    const LucidePuzzle: Self = Self {
        name: "LucidePuzzle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19.439 7.85c-.049.322.059.648.289.878l1.568 1.568c.47.47.706 1.087.706 1.704s-.235 1.233-.706 1.704l-1.611 1.611a.98.98 0 0 1-.837.276c-.47-.07-.802-.48-.968-.925a2.501 2.501 0 1 0-3.214 3.214c.446.166.855.497.925.968a.979.979 0 0 1-.276.837l-1.61 1.61a2.404 2.404 0 0 1-1.705.707 2.402 2.402 0 0 1-1.704-.706l-1.568-1.568a1.026 1.026 0 0 0-.877-.29c-.493.074-.84.504-1.02.968a2.5 2.5 0 1 1-3.237-3.237c.464-.18.894-.527.967-1.02a1.026 1.026 0 0 0-.289-.877l-1.568-1.568A2.402 2.402 0 0 1 1.998 12c0-.617.236-1.234.706-1.704L4.23 8.77c.24-.24.581-.353.917-.303.515.077.877.528 1.073 1.01a2.5 2.5 0 1 0 3.259-3.259c-.482-.196-.933-.558-1.01-1.073-.05-.336.062-.676.303-.917l1.525-1.525A2.402 2.402 0 0 1 12 1.998c.617 0 1.234.236 1.704.706l1.568 1.568c.23.23.556.338.877.29.493-.074.84-.504 1.02-.968a2.5 2.5 0 1 1 3.237 3.237c-.464.18-.894.527-.967 1.02Z" /> </ svg > }
        },
    };
    const LucideQrCode: Self = Self {
        name: "LucideQrCode",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "5" height = "5" rx = "1" /> < rect x = "16" y = "3" width = "5" height = "5" rx = "1" /> < rect x = "3" y = "16" width = "5" height = "5" rx = "1" /> < path d = "M21 16h-3a2 2 0 0 0-2 2v3" /> < path d = "M21 21v.01" /> < path d = "M12 7v3a2 2 0 0 1-2 2H7" /> < path d = "M3 12h.01" /> < path d = "M12 3h.01" /> < path d = "M12 16v.01" /> < path d = "M16 12h1" /> < path d = "M21 12v.01" /> < path d = "M12 21v-1" /> </ svg > }
        },
    };
    const LucideQuote: Self = Self {
        name: "LucideQuote",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z" /> < path d = "M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z" /> </ svg > }
        },
    };
    const LucideRadioReceiver: Self = Self {
        name: "LucideRadioReceiver",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 16v2" /> < path d = "M19 16v2" /> < rect x = "2" y = "8" width = "20" height = "8" rx = "2" /> < path d = "M18 12h0" /> </ svg > }
        },
    };
    const LucideRadio: Self = Self {
        name: "LucideRadio",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "2" /> < path d = "M4.93 19.07a10 10 0 0 1 0-14.14" /> < path d = "M7.76 16.24a6 6 0 0 1-1.3-1.95 6 6 0 0 1 0-4.59 6 6 0 0 1 1.3-1.95" /> < path d = "M16.24 7.76a6 6 0 0 1 1.3 2 6 6 0 0 1 0 4.59 6 6 0 0 1-1.3 1.95" /> < path d = "M19.07 4.93a10 10 0 0 1 0 14.14" /> </ svg > }
        },
    };
    const LucideRectangleHorizontal: Self = Self {
        name: "LucideRectangleHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "6" width = "20" height = "12" rx = "2" /> </ svg > }
        },
    };
    const LucideRectangleVertical: Self = Self {
        name: "LucideRectangleVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "6" y = "2" width = "12" height = "20" rx = "2" /> </ svg > }
        },
    };
    const LucideRecycle: Self = Self {
        name: "LucideRecycle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5" /> < path d = "M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12" /> < path d = "m14 16-3 3 3 3" /> < path d = "M8.293 13.596 7.196 9.5 3.1 10.598" /> < path d = "m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843" /> < path d = "m13.378 9.633 4.096 1.098 1.097-4.096" /> </ svg > }
        },
    };
    const LucideRedo2: Self = Self {
        name: "LucideRedo2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m15 14 5-5-5-5" /> < path d = "M20 9H9.5A5.5 5.5 0 0 0 4 14.5v0A5.5 5.5 0 0 0 9.5 20H13" /> </ svg > }
        },
    };
    const LucideRedo: Self = Self {
        name: "LucideRedo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 7v6h-6" /> < path d = "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7" /> </ svg > }
        },
    };
    const LucideRefreshCcw: Self = Self {
        name: "LucideRefreshCcw",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 2v6h6" /> < path d = "M21 12A9 9 0 0 0 6 5.3L3 8" /> < path d = "M21 22v-6h-6" /> < path d = "M3 12a9 9 0 0 0 15 6.7l3-2.7" /> </ svg > }
        },
    };
    const LucideRefreshCw: Self = Self {
        name: "LucideRefreshCw",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 2v6h-6" /> < path d = "M3 12a9 9 0 0 1 15-6.7L21 8" /> < path d = "M3 22v-6h6" /> < path d = "M21 12a9 9 0 0 1-15 6.7L3 16" /> </ svg > }
        },
    };
    const LucideRefrigerator: Self = Self {
        name: "LucideRefrigerator",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z" /> < path d = "M5 10h14" /> < path d = "M15 7v6" /> </ svg > }
        },
    };
    const LucideRegex: Self = Self {
        name: "LucideRegex",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 3v10" /> < path d = "m12.67 5.5 8.66 5" /> < path d = "m12.67 10.5 8.66-5" /> < path d = "M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z" /> </ svg > }
        },
    };
    const LucideRepeat1: Self = Self {
        name: "LucideRepeat1",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m17 2 4 4-4 4" /> < path d = "M3 11v-1a4 4 0 0 1 4-4h14" /> < path d = "m7 22-4-4 4-4" /> < path d = "M21 13v1a4 4 0 0 1-4 4H3" /> < path d = "M11 10h1v4" /> </ svg > }
        },
    };
    const LucideRepeat: Self = Self {
        name: "LucideRepeat",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m17 2 4 4-4 4" /> < path d = "M3 11v-1a4 4 0 0 1 4-4h14" /> < path d = "m7 22-4-4 4-4" /> < path d = "M21 13v1a4 4 0 0 1-4 4H3" /> </ svg > }
        },
    };
    const LucideReplyAll: Self = Self {
        name: "LucideReplyAll",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "7 17 2 12 7 7" /> < polyline points = "12 17 7 12 12 7" /> < path d = "M22 18v-2a4 4 0 0 0-4-4H7" /> </ svg > }
        },
    };
    const LucideReply: Self = Self {
        name: "LucideReply",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "9 17 4 12 9 7" /> < path d = "M20 18v-2a4 4 0 0 0-4-4H4" /> </ svg > }
        },
    };
    const LucideRewind: Self = Self {
        name: "LucideRewind",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "11 19 2 12 11 5 11 19" /> < polygon points = "22 19 13 12 22 5 22 19" /> </ svg > }
        },
    };
    const LucideRocket: Self = Self {
        name: "LucideRocket",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z" /> < path d = "m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z" /> < path d = "M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0" /> < path d = "M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5" /> </ svg > }
        },
    };
    const LucideRockingChair: Self = Self {
        name: "LucideRockingChair",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "3.5 2 6.5 12.5 18 12.5" /> < line x1 = "9.5" y1 = "12.5" x2 = "5.5" y2 = "20" /> < line x1 = "15" y1 = "12.5" x2 = "18.5" y2 = "20" /> < path d = "M2.75 18a13 13 0 0 0 18.5 0" /> </ svg > }
        },
    };
    const LucideRotate3D: Self = Self {
        name: "LucideRotate3D",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2" /> < path d = "m15.194 13.707 3.814 1.86-1.86 3.814" /> < path d = "M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4" /> </ svg > }
        },
    };
    const LucideRotateCcw: Self = Self {
        name: "LucideRotateCcw",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 2v6h6" /> < path d = "M3 13a9 9 0 1 0 3-7.7L3 8" /> </ svg > }
        },
    };
    const LucideRotateCw: Self = Self {
        name: "LucideRotateCw",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 2v6h-6" /> < path d = "M21 13a9 9 0 1 1-3-7.7L21 8" /> </ svg > }
        },
    };
    const LucideRss: Self = Self {
        name: "LucideRss",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 11a9 9 0 0 1 9 9" /> < path d = "M4 4a16 16 0 0 1 16 16" /> < circle cx = "5" cy = "19" r = "1" /> </ svg > }
        },
    };
    const LucideRuler: Self = Self {
        name: "LucideRuler",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21.3 8.7 8.7 21.3c-1 1-2.5 1-3.4 0l-2.6-2.6c-1-1-1-2.5 0-3.4L15.3 2.7c1-1 2.5-1 3.4 0l2.6 2.6c1 1 1 2.5 0 3.4Z" /> < path d = "m7.5 10.5 2 2" /> < path d = "m10.5 7.5 2 2" /> < path d = "m13.5 4.5 2 2" /> < path d = "m4.5 13.5 2 2" /> </ svg > }
        },
    };
    const LucideRussianRuble: Self = Self {
        name: "LucideRussianRuble",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14 11c5.333 0 5.333-8 0-8" /> < path d = "M6 11h8" /> < path d = "M6 15h8" /> < path d = "M9 21V3" /> < path d = "M9 3h5" /> </ svg > }
        },
    };
    const LucideSailboat: Self = Self {
        name: "LucideSailboat",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z" /> < path d = "M21 14 10 2 3 14h18Z" /> < path d = "M10 2v16" /> </ svg > }
        },
    };
    const LucideSave: Self = Self {
        name: "LucideSave",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z" /> < polyline points = "17 21 17 13 7 13 7 21" /> < polyline points = "7 3 7 8 15 8" /> </ svg > }
        },
    };
    const LucideScale3D: Self = Self {
        name: "LucideScale3D",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 7v12h12" /> < path d = "m5 19 6-6" /> < rect x = "3" y = "3" width = "4" height = "4" rx = "1" /> < rect x = "17" y = "17" width = "4" height = "4" rx = "1" /> </ svg > }
        },
    };
    const LucideScale: Self = Self {
        name: "LucideScale",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z" /> < path d = "m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z" /> < path d = "M7 21h10" /> < path d = "M12 3v18" /> < path d = "M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2" /> </ svg > }
        },
    };
    const LucideScaling: Self = Self {
        name: "LucideScaling",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 3 9 15" /> < path d = "M12 3H3v18h18v-9" /> < path d = "M16 3h5v5" /> < path d = "M14 15H9v-5" /> </ svg > }
        },
    };
    const LucideScanFace: Self = Self {
        name: "LucideScanFace",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 7V5a2 2 0 0 1 2-2h2" /> < path d = "M17 3h2a2 2 0 0 1 2 2v2" /> < path d = "M21 17v2a2 2 0 0 1-2 2h-2" /> < path d = "M7 21H5a2 2 0 0 1-2-2v-2" /> < path d = "M8 14s1.5 2 4 2 4-2 4-2" /> < path d = "M9 9h.01" /> < path d = "M15 9h.01" /> </ svg > }
        },
    };
    const LucideScanLine: Self = Self {
        name: "LucideScanLine",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 7V5a2 2 0 0 1 2-2h2" /> < path d = "M17 3h2a2 2 0 0 1 2 2v2" /> < path d = "M21 17v2a2 2 0 0 1-2 2h-2" /> < path d = "M7 21H5a2 2 0 0 1-2-2v-2" /> < line x1 = "7" y1 = "12" x2 = "17" y2 = "12" /> </ svg > }
        },
    };
    const LucideScan: Self = Self {
        name: "LucideScan",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 7V5a2 2 0 0 1 2-2h2" /> < path d = "M17 3h2a2 2 0 0 1 2 2v2" /> < path d = "M21 17v2a2 2 0 0 1-2 2h-2" /> < path d = "M7 21H5a2 2 0 0 1-2-2v-2" /> </ svg > }
        },
    };
    const LucideScissors: Self = Self {
        name: "LucideScissors",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "6" cy = "6" r = "3" /> < circle cx = "6" cy = "18" r = "3" /> < line x1 = "20" y1 = "4" x2 = "8.12" y2 = "15.88" /> < line x1 = "14.47" y1 = "14.48" x2 = "20" y2 = "20" /> < line x1 = "8.12" y1 = "8.12" x2 = "12" y2 = "12" /> </ svg > }
        },
    };
    const LucideScreenShareOff: Self = Self {
        name: "LucideScreenShareOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3" /> < path d = "M8 21h8" /> < path d = "M12 17v4" /> < path d = "m22 3-5 5" /> < path d = "m17 3 5 5" /> </ svg > }
        },
    };
    const LucideScreenShare: Self = Self {
        name: "LucideScreenShare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3" /> < path d = "M8 21h8" /> < path d = "M12 17v4" /> < path d = "m17 8 5-5" /> < path d = "M17 3h5v5" /> </ svg > }
        },
    };
    const LucideScroll: Self = Self {
        name: "LucideScroll",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 17v2a2 2 0 0 1-2 2v0a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v3h3" /> < path d = "M22 17v2a2 2 0 0 1-2 2H8" /> < path d = "M19 17V5a2 2 0 0 0-2-2H4" /> < path d = "M22 17H10" /> </ svg > }
        },
    };
    const LucideSearch: Self = Self {
        name: "LucideSearch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "11" cy = "11" r = "8" /> < line x1 = "21" y1 = "21" x2 = "16.65" y2 = "16.65" /> </ svg > }
        },
    };
    const LucideSend: Self = Self {
        name: "LucideSend",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "22" y1 = "2" x2 = "11" y2 = "13" /> < polygon points = "22 2 15 22 11 13 2 9 22 2" /> </ svg > }
        },
    };
    const LucideSeparatorHorizontal: Self = Self {
        name: "LucideSeparatorHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "3" y1 = "12" x2 = "21" y2 = "12" /> < polyline points = "8 8 12 4 16 8" /> < polyline points = "16 16 12 20 8 16" /> </ svg > }
        },
    };
    const LucideSeparatorVertical: Self = Self {
        name: "LucideSeparatorVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "12" y1 = "3" x2 = "12" y2 = "21" /> < polyline points = "8 8 4 12 8 16" /> < polyline points = "16 16 20 12 16 8" /> </ svg > }
        },
    };
    const LucideServerCog: Self = Self {
        name: "LucideServerCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-1" /> < path d = "M5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-1" /> < path d = "M6 6h.01" /> < path d = "M6 18h.01" /> < circle cx = "12" cy = "12" r = "3" /> < path d = "M12 8v1" /> < path d = "M12 15v1" /> < path d = "M16 12h-1" /> < path d = "M9 12H8" /> < path d = "m15 9-.88.88" /> < path d = "M9.88 14.12 9 15" /> < path d = "m15 15-.88-.88" /> < path d = "M9.88 9.88 9 9" /> </ svg > }
        },
    };
    const LucideServerCrash: Self = Self {
        name: "LucideServerCrash",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2" /> < path d = "M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2" /> < path d = "M6 6h.01" /> < path d = "M6 18h.01" /> < path d = "m13 6-4 6h6l-4 6" /> </ svg > }
        },
    };
    const LucideServerOff: Self = Self {
        name: "LucideServerOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5" /> < path d = "M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z" /> < path d = "M22 17v-1a2 2 0 0 0-2-2h-1" /> < path d = "M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z" /> < path d = "M6 18h.01" /> < path d = "m2 2 20 20" /> </ svg > }
        },
    };
    const LucideServer: Self = Self {
        name: "LucideServer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "2" width = "20" height = "8" rx = "2" ry = "2" /> < rect x = "2" y = "14" width = "20" height = "8" rx = "2" ry = "2" /> < line x1 = "6" y1 = "6" x2 = "6.01" y2 = "6" /> < line x1 = "6" y1 = "18" x2 = "6.01" y2 = "18" /> </ svg > }
        },
    };
    const LucideSettings2: Self = Self {
        name: "LucideSettings2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 7h-9" /> < path d = "M14 17H5" /> < circle cx = "17" cy = "17" r = "3" /> < circle cx = "7" cy = "7" r = "3" /> </ svg > }
        },
    };
    const LucideSettings: Self = Self {
        name: "LucideSettings",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" /> < circle cx = "12" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideShare2: Self = Self {
        name: "LucideShare2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "18" cy = "5" r = "3" /> < circle cx = "6" cy = "12" r = "3" /> < circle cx = "18" cy = "19" r = "3" /> < line x1 = "8.59" y1 = "13.51" x2 = "15.42" y2 = "17.49" /> < line x1 = "15.41" y1 = "6.51" x2 = "8.59" y2 = "10.49" /> </ svg > }
        },
    };
    const LucideShare: Self = Self {
        name: "LucideShare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8" /> < polyline points = "16 6 12 2 8 6" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "15" /> </ svg > }
        },
    };
    const LucideSheet: Self = Self {
        name: "LucideSheet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "3" y1 = "9" x2 = "21" y2 = "9" /> < line x1 = "3" y1 = "15" x2 = "21" y2 = "15" /> < line x1 = "9" y1 = "9" x2 = "9" y2 = "21" /> < line x1 = "15" y1 = "9" x2 = "15" y2 = "21" /> </ svg > }
        },
    };
    const LucideShieldAlert: Self = Self {
        name: "LucideShieldAlert",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z" /> < path d = "M12 8v4" /> < path d = "M12 16h.01" /> </ svg > }
        },
    };
    const LucideShieldCheck: Self = Self {
        name: "LucideShieldCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z" /> < path d = "m9 12 2 2 4-4" /> </ svg > }
        },
    };
    const LucideShieldClose: Self = Self {
        name: "LucideShieldClose",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z" /> < line x1 = "9.5" y1 = "9" x2 = "14.5" y2 = "14" /> < line x1 = "14.5" y1 = "9" x2 = "9.5" y2 = "14" /> </ svg > }
        },
    };
    const LucideShieldOff: Self = Self {
        name: "LucideShieldOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18" /> < path d = "M4.73 4.73 4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideShield: Self = Self {
        name: "LucideShield",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z" /> </ svg > }
        },
    };
    const LucideShirt: Self = Self {
        name: "LucideShirt",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z" /> </ svg > }
        },
    };
    const LucideShoppingBag: Self = Self {
        name: "LucideShoppingBag",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z" /> < line x1 = "3" y1 = "6" x2 = "21" y2 = "6" /> < path d = "M16 10a4 4 0 0 1-8 0" /> </ svg > }
        },
    };
    const LucideShoppingCart: Self = Self {
        name: "LucideShoppingCart",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "8" cy = "21" r = "1" /> < circle cx = "19" cy = "21" r = "1" /> < path d = "M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" /> </ svg > }
        },
    };
    const LucideShovel: Self = Self {
        name: "LucideShovel",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 22v-5l5-5 5 5-5 5z" /> < path d = "M9.5 14.5 16 8" /> < path d = "m17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2" /> </ svg > }
        },
    };
    const LucideShowerHead: Self = Self {
        name: "LucideShowerHead",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m4 4 2.5 2.5" /> < path d = "M13.5 6.5a4.95 4.95 0 0 0-7 7" /> < path d = "M15 5 5 15" /> < path d = "M14 17v.01" /> < path d = "M10 16v.01" /> < path d = "M13 13v.01" /> < path d = "M16 10v.01" /> < path d = "M11 20v.01" /> < path d = "M17 14v.01" /> < path d = "M20 11v.01" /> </ svg > }
        },
    };
    const LucideShrink: Self = Self {
        name: "LucideShrink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m15 15 6 6m-6-6v4.8m0-4.8h4.8" /> < path d = "M9 19.8V15m0 0H4.2M9 15l-6 6" /> < path d = "M15 4.2V9m0 0h4.8M15 9l6-6" /> < path d = "M9 4.2V9m0 0H4.2M9 9 3 3" /> </ svg > }
        },
    };
    const LucideShrub: Self = Self {
        name: "LucideShrub",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 22v-7l-2-2" /> < path d = "M17 8v.8A6 6 0 0 1 13.8 20v0H10v0A6.5 6.5 0 0 1 7 8h0a5 5 0 0 1 10 0Z" /> < path d = "m14 14-2 2" /> </ svg > }
        },
    };
    const LucideShuffle: Self = Self {
        name: "LucideShuffle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "16 3 21 3 21 8" /> < line x1 = "4" y1 = "20" x2 = "21" y2 = "3" /> < polyline points = "21 16 21 21 16 21" /> < line x1 = "15" y1 = "15" x2 = "21" y2 = "21" /> < line x1 = "4" y1 = "4" x2 = "9" y2 = "9" /> </ svg > }
        },
    };
    const LucideSidebarClose: Self = Self {
        name: "LucideSidebarClose",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M9 3v18" /> < path d = "m16 15-3-3 3-3" /> </ svg > }
        },
    };
    const LucideSidebarOpen: Self = Self {
        name: "LucideSidebarOpen",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < path d = "M9 3v18" /> < path d = "m14 9 3 3-3 3" /> </ svg > }
        },
    };
    const LucideSidebar: Self = Self {
        name: "LucideSidebar",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "9" y1 = "3" x2 = "9" y2 = "21" /> </ svg > }
        },
    };
    const LucideSigma: Self = Self {
        name: "LucideSigma",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 7V4H6l6 8-6 8h12v-3" /> </ svg > }
        },
    };
    const LucideSignalHigh: Self = Self {
        name: "LucideSignalHigh",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20h.01" /> < path d = "M7 20v-4" /> < path d = "M12 20v-8" /> < path d = "M17 20V8" /> </ svg > }
        },
    };
    const LucideSignalLow: Self = Self {
        name: "LucideSignalLow",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20h.01" /> < path d = "M7 20v-4" /> </ svg > }
        },
    };
    const LucideSignalMedium: Self = Self {
        name: "LucideSignalMedium",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20h.01" /> < path d = "M7 20v-4" /> < path d = "M12 20v-8" /> </ svg > }
        },
    };
    const LucideSignalZero: Self = Self {
        name: "LucideSignalZero",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20h.01" /> </ svg > }
        },
    };
    const LucideSignal: Self = Self {
        name: "LucideSignal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 20h.01" /> < path d = "M7 20v-4" /> < path d = "M12 20v-8" /> < path d = "M17 20V8" /> < path d = "M22 4v16" /> </ svg > }
        },
    };
    const LucideSiren: Self = Self {
        name: "LucideSiren",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 12a5 5 0 0 1 5-5v0a5 5 0 0 1 5 5v6H7v-6Z" /> < path d = "M5 20a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2H5v-2Z" /> < path d = "M21 12h1" /> < path d = "M18.5 4.5 18 5" /> < path d = "M2 12h1" /> < path d = "M12 2v1" /> < path d = "m4.929 4.929.707.707" /> < path d = "M12 12v6" /> </ svg > }
        },
    };
    const LucideSkipBack: Self = Self {
        name: "LucideSkipBack",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "19 20 9 12 19 4 19 20" /> < line x1 = "5" y1 = "19" x2 = "5" y2 = "5" /> </ svg > }
        },
    };
    const LucideSkipForward: Self = Self {
        name: "LucideSkipForward",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "5 4 15 12 5 20 5 4" /> < line x1 = "19" y1 = "5" x2 = "19" y2 = "19" /> </ svg > }
        },
    };
    const LucideSkull: Self = Self {
        name: "LucideSkull",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "9" cy = "12" r = "1" /> < circle cx = "15" cy = "12" r = "1" /> < path d = "M8 20v2h8v-2" /> < path d = "m12.5 17-.5-1-.5 1h1z" /> < path d = "M16 20a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20" /> </ svg > }
        },
    };
    const LucideSlack: Self = Self {
        name: "LucideSlack",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "13" y = "2" width = "3" height = "8" rx = "1.5" /> < path d = "M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5" /> < rect x = "8" y = "14" width = "3" height = "8" rx = "1.5" /> < path d = "M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5" /> < rect x = "14" y = "13" width = "8" height = "3" rx = "1.5" /> < path d = "M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5" /> < rect x = "2" y = "8" width = "8" height = "3" rx = "1.5" /> < path d = "M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5" /> </ svg > }
        },
    };
    const LucideSlash: Self = Self {
        name: "LucideSlash",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "4.93" y1 = "4.93" x2 = "19.07" y2 = "19.07" /> </ svg > }
        },
    };
    const LucideSlice: Self = Self {
        name: "LucideSlice",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m8 14-6 6h9v-3" /> < path d = "M18.37 3.63 8 14l3 3L21.37 6.63a2.12 2.12 0 1 0-3-3Z" /> </ svg > }
        },
    };
    const LucideSlidersHorizontal: Self = Self {
        name: "LucideSlidersHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "21" y1 = "4" x2 = "14" y2 = "4" /> < line x1 = "10" y1 = "4" x2 = "3" y2 = "4" /> < line x1 = "21" y1 = "12" x2 = "12" y2 = "12" /> < line x1 = "8" y1 = "12" x2 = "3" y2 = "12" /> < line x1 = "21" y1 = "20" x2 = "16" y2 = "20" /> < line x1 = "12" y1 = "20" x2 = "3" y2 = "20" /> < line x1 = "14" y1 = "2" x2 = "14" y2 = "6" /> < line x1 = "8" y1 = "10" x2 = "8" y2 = "14" /> < line x1 = "16" y1 = "18" x2 = "16" y2 = "22" /> </ svg > }
        },
    };
    const LucideSliders: Self = Self {
        name: "LucideSliders",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "4" y1 = "21" x2 = "4" y2 = "14" /> < line x1 = "4" y1 = "10" x2 = "4" y2 = "3" /> < line x1 = "12" y1 = "21" x2 = "12" y2 = "12" /> < line x1 = "12" y1 = "8" x2 = "12" y2 = "3" /> < line x1 = "20" y1 = "21" x2 = "20" y2 = "16" /> < line x1 = "20" y1 = "12" x2 = "20" y2 = "3" /> < line x1 = "2" y1 = "14" x2 = "6" y2 = "14" /> < line x1 = "10" y1 = "8" x2 = "14" y2 = "8" /> < line x1 = "18" y1 = "16" x2 = "22" y2 = "16" /> </ svg > }
        },
    };
    const LucideSmartphoneCharging: Self = Self {
        name: "LucideSmartphoneCharging",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "2" width = "14" height = "20" rx = "2" ry = "2" /> < path d = "M12.667 8 10 12h4l-2.667 4" /> </ svg > }
        },
    };
    const LucideSmartphone: Self = Self {
        name: "LucideSmartphone",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "5" y = "2" width = "14" height = "20" rx = "2" ry = "2" /> < path d = "M12 18h.01" /> </ svg > }
        },
    };
    const LucideSmilePlus: Self = Self {
        name: "LucideSmilePlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 11v1a10 10 0 1 1-9-10" /> < path d = "M8 14s1.5 2 4 2 4-2 4-2" /> < line x1 = "9" y1 = "9" x2 = "9.01" y2 = "9" /> < line x1 = "15" y1 = "9" x2 = "15.01" y2 = "9" /> < path d = "M16 5h6" /> < path d = "M19 2v6" /> </ svg > }
        },
    };
    const LucideSmile: Self = Self {
        name: "LucideSmile",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < path d = "M8 14s1.5 2 4 2 4-2 4-2" /> < line x1 = "9" y1 = "9" x2 = "9.01" y2 = "9" /> < line x1 = "15" y1 = "9" x2 = "15.01" y2 = "9" /> </ svg > }
        },
    };
    const LucideSnowflake: Self = Self {
        name: "LucideSnowflake",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "12" x2 = "22" y2 = "12" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "22" /> < path d = "m20 16-4-4 4-4" /> < path d = "m4 8 4 4-4 4" /> < path d = "m16 4-4 4-4-4" /> < path d = "m8 20 4-4 4 4" /> </ svg > }
        },
    };
    const LucideSofa: Self = Self {
        name: "LucideSofa",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3" /> < path d = "M2 11v5a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H6v-2a2 2 0 0 0-4 0Z" /> < path d = "M4 18v2" /> < path d = "M20 18v2" /> < path d = "M12 4v9" /> </ svg > }
        },
    };
    const LucideSortAsc: Self = Self {
        name: "LucideSortAsc",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 5h4" /> < path d = "M11 9h7" /> < path d = "M11 13h10" /> < path d = "m3 17 3 3 3-3" /> < path d = "M6 18V4" /> </ svg > }
        },
    };
    const LucideSortDesc: Self = Self {
        name: "LucideSortDesc",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 5h10" /> < path d = "M11 9h7" /> < path d = "M11 13h4" /> < path d = "m3 17 3 3 3-3" /> < path d = "M6 18V4" /> </ svg > }
        },
    };
    const LucideSpeaker: Self = Self {
        name: "LucideSpeaker",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "16" height = "20" rx = "2" ry = "2" /> < circle cx = "12" cy = "14" r = "4" /> < line x1 = "12" y1 = "6" x2 = "12.01" y2 = "6" /> </ svg > }
        },
    };
    const LucideSprout: Self = Self {
        name: "LucideSprout",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 20h10" /> < path d = "M10 20c5.5-2.5.8-6.4 3-10" /> < path d = "M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z" /> < path d = "M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z" /> </ svg > }
        },
    };
    const LucideSquare: Self = Self {
        name: "LucideSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> </ svg > }
        },
    };
    const LucideStarHalf: Self = Self {
        name: "LucideStarHalf",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 17.8 5.8 21 7 14.1 2 9.3l7-1L12 2" /> </ svg > }
        },
    };
    const LucideStarOff: Self = Self {
        name: "LucideStarOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43" /> < path d = "M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideStar: Self = Self {
        name: "LucideStar",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" /> </ svg > }
        },
    };
    const LucideStethoscope: Self = Self {
        name: "LucideStethoscope",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4.8 2.3A.3.3 0 1 0 5 2H4a2 2 0 0 0-2 2v5a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6V4a2 2 0 0 0-2-2h-1a.2.2 0 1 0 .3.3" /> < path d = "M8 15v1a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6v-4" /> < circle cx = "20" cy = "10" r = "2" /> </ svg > }
        },
    };
    const LucideSticker: Self = Self {
        name: "LucideSticker",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z" /> < path d = "M15 3v6h6" /> < path d = "M10 16s.8 1 2 1c1.3 0 2-1 2-1" /> < path d = "M8 13h0" /> < path d = "M16 13h0" /> </ svg > }
        },
    };
    const LucideStickyNote: Self = Self {
        name: "LucideStickyNote",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z" /> < path d = "M15 3v6h6" /> </ svg > }
        },
    };
    const LucideStopCircle: Self = Self {
        name: "LucideStopCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < rect x = "9" y = "9" width = "6" height = "6" /> </ svg > }
        },
    };
    const LucideStretchHorizontal: Self = Self {
        name: "LucideStretchHorizontal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "4" width = "20" height = "6" rx = "2" /> < rect x = "2" y = "14" width = "20" height = "6" rx = "2" /> </ svg > }
        },
    };
    const LucideStretchVertical: Self = Self {
        name: "LucideStretchVertical",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "6" height = "20" rx = "2" /> < rect x = "14" y = "2" width = "6" height = "20" rx = "2" /> </ svg > }
        },
    };
    const LucideStrikethrough: Self = Self {
        name: "LucideStrikethrough",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 4H9a3 3 0 0 0-2.83 4" /> < path d = "M14 12a4 4 0 0 1 0 8H6" /> < line x1 = "4" y1 = "12" x2 = "20" y2 = "12" /> </ svg > }
        },
    };
    const LucideSubscript: Self = Self {
        name: "LucideSubscript",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m4 5 8 8" /> < path d = "m12 5-8 8" /> < path d = "M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07" /> </ svg > }
        },
    };
    const LucideSunDim: Self = Self {
        name: "LucideSunDim",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z" /> < path d = "M12 4h.01" /> < path d = "M20 12h.01" /> < path d = "M12 20h.01" /> < path d = "M4 12h.01" /> < path d = "M17.657 6.343h.01" /> < path d = "M17.657 17.657h.01" /> < path d = "M6.343 17.657h.01" /> < path d = "M6.343 6.343h.01" /> </ svg > }
        },
    };
    const LucideSunMedium: Self = Self {
        name: "LucideSunMedium",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z" /> < path d = "M12 3v1" /> < path d = "M12 20v1" /> < path d = "M3 12h1" /> < path d = "M20 12h1" /> < path d = "m18.364 5.636-.707.707" /> < path d = "m6.343 17.657-.707.707" /> < path d = "m5.636 5.636.707.707" /> < path d = "m17.657 17.657.707.707" /> </ svg > }
        },
    };
    const LucideSunMoon: Self = Self {
        name: "LucideSunMoon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8z" /> < path d = "M12 8a2.828 2.828 0 1 0 4 4" /> < path d = "M12 2v2" /> < path d = "M12 20v2" /> < path d = "m4.93 4.93 1.41 1.41" /> < path d = "m17.66 17.66 1.41 1.41" /> < path d = "M2 12h2" /> < path d = "M20 12h2" /> < path d = "m6.34 17.66-1.41 1.41" /> < path d = "m19.07 4.93-1.41 1.41" /> </ svg > }
        },
    };
    const LucideSunSnow: Self = Self {
        name: "LucideSunSnow",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 9a3 3 0 1 0 0 6" /> < path d = "M2 12h1" /> < path d = "M14 21V3" /> < path d = "M10 4V3" /> < path d = "M10 21v-1" /> < path d = "m3.64 18.36.7-.7" /> < path d = "m4.34 6.34-.7-.7" /> < path d = "M14 12h8" /> < path d = "m17 4-3 3" /> < path d = "m14 17 3 3" /> < path d = "m21 15-3-3 3-3" /> </ svg > }
        },
    };
    const LucideSun: Self = Self {
        name: "LucideSun",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "4" /> < path d = "M12 2v2" /> < path d = "M12 20v2" /> < path d = "m4.93 4.93 1.41 1.41" /> < path d = "m17.66 17.66 1.41 1.41" /> < path d = "M2 12h2" /> < path d = "M20 12h2" /> < path d = "m6.34 17.66-1.41 1.41" /> < path d = "m19.07 4.93-1.41 1.41" /> </ svg > }
        },
    };
    const LucideSunrise: Self = Self {
        name: "LucideSunrise",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2v8" /> < path d = "m4.93 10.93 1.41 1.41" /> < path d = "M2 18h2" /> < path d = "M20 18h2" /> < path d = "m19.07 10.93-1.41 1.41" /> < path d = "M22 22H2" /> < path d = "m8 6 4-4 4 4" /> < path d = "M16 18a4 4 0 0 0-8 0" /> </ svg > }
        },
    };
    const LucideSunset: Self = Self {
        name: "LucideSunset",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 10V2" /> < path d = "m4.93 10.93 1.41 1.41" /> < path d = "M2 18h2" /> < path d = "M20 18h2" /> < path d = "m19.07 10.93-1.41 1.41" /> < path d = "M22 22H2" /> < path d = "m16 6-4 4-4-4" /> < path d = "M16 18a4 4 0 0 0-8 0" /> </ svg > }
        },
    };
    const LucideSuperscript: Self = Self {
        name: "LucideSuperscript",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m4 19 8-8" /> < path d = "m12 19-8-8" /> < path d = "M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06" /> </ svg > }
        },
    };
    const LucideSwissFranc: Self = Self {
        name: "LucideSwissFranc",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 21V3h8" /> < path d = "M6 16h9" /> < path d = "M10 9.5h7" /> </ svg > }
        },
    };
    const LucideSwitchCamera: Self = Self {
        name: "LucideSwitchCamera",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5" /> < path d = "M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5" /> < circle cx = "12" cy = "12" r = "3" /> < path d = "m18 22-3-3 3-3" /> < path d = "m6 2 3 3-3 3" /> </ svg > }
        },
    };
    const LucideSword: Self = Self {
        name: "LucideSword",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "14.5 17.5 3 6 3 3 6 3 17.5 14.5" /> < line x1 = "13" y1 = "19" x2 = "19" y2 = "13" /> < line x1 = "16" y1 = "16" x2 = "20" y2 = "20" /> < line x1 = "19" y1 = "21" x2 = "21" y2 = "19" /> </ svg > }
        },
    };
    const LucideSwords: Self = Self {
        name: "LucideSwords",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "14.5 17.5 3 6 3 3 6 3 17.5 14.5" /> < line x1 = "13" y1 = "19" x2 = "19" y2 = "13" /> < line x1 = "16" y1 = "16" x2 = "20" y2 = "20" /> < line x1 = "19" y1 = "21" x2 = "21" y2 = "19" /> < polyline points = "14.5 6.5 18 3 21 3 21 6 17.5 9.5" /> < line x1 = "5" y1 = "14" x2 = "9" y2 = "18" /> < line x1 = "7" y1 = "17" x2 = "4" y2 = "20" /> < line x1 = "3" y1 = "19" x2 = "5" y2 = "21" /> </ svg > }
        },
    };
    const LucideSyringe: Self = Self {
        name: "LucideSyringe",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m18 2 4 4" /> < path d = "m17 7 3-3" /> < path d = "M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5" /> < path d = "m9 11 4 4" /> < path d = "m5 19-3 3" /> < path d = "m14 4 6 6" /> </ svg > }
        },
    };
    const LucideTable2: Self = Self {
        name: "LucideTable2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18" /> </ svg > }
        },
    };
    const LucideTable: Self = Self {
        name: "LucideTable",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "3" y1 = "9" x2 = "21" y2 = "9" /> < line x1 = "3" y1 = "15" x2 = "21" y2 = "15" /> < line x1 = "12" y1 = "3" x2 = "12" y2 = "21" /> </ svg > }
        },
    };
    const LucideTablet: Self = Self {
        name: "LucideTablet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "2" width = "16" height = "20" rx = "2" ry = "2" /> < line x1 = "12" y1 = "18" x2 = "12.01" y2 = "18" /> </ svg > }
        },
    };
    const LucideTag: Self = Self {
        name: "LucideTag",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z" /> < path d = "M7 7h.01" /> </ svg > }
        },
    };
    const LucideTags: Self = Self {
        name: "LucideTags",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 5H2v7l6.29 6.29c.94.94 2.48.94 3.42 0l3.58-3.58c.94-.94.94-2.48 0-3.42L9 5Z" /> < path d = "M6 9.01V9" /> < path d = "m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19" /> </ svg > }
        },
    };
    const LucideTarget: Self = Self {
        name: "LucideTarget",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < circle cx = "12" cy = "12" r = "6" /> < circle cx = "12" cy = "12" r = "2" /> </ svg > }
        },
    };
    const LucideTent: Self = Self {
        name: "LucideTent",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 20 10 4" /> < path d = "m5 20 9-16" /> < path d = "M3 20h18" /> < path d = "m12 15-3 5" /> < path d = "m12 15 3 5" /> </ svg > }
        },
    };
    const LucideTerminalSquare: Self = Self {
        name: "LucideTerminalSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m7 11 2-2-2-2" /> < path d = "M11 13h4" /> < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> </ svg > }
        },
    };
    const LucideTerminal: Self = Self {
        name: "LucideTerminal",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "4 17 10 11 4 5" /> < line x1 = "12" y1 = "19" x2 = "20" y2 = "19" /> </ svg > }
        },
    };
    const LucideTextCursorInput: Self = Self {
        name: "LucideTextCursorInput",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M13 20h-1a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h1" /> < path d = "M5 4h1a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H5" /> < path d = "M13.1 7.9h6.8A2.18 2.18 0 0 1 22 10v4a2.11 2.11 0 0 1-2.1 2.1h-6.8" /> < path d = "M4.8 16.1h-.7A2.18 2.18 0 0 1 2 14v-4a2.18 2.18 0 0 1 2.1-2.1h.7" /> </ svg > }
        },
    };
    const LucideTextCursor: Self = Self {
        name: "LucideTextCursor",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1" /> < path d = "M7 22h1a4 4 0 0 0 4-4v-1" /> < path d = "M7 2h1a4 4 0 0 1 4 4v1" /> </ svg > }
        },
    };
    const LucideThermometerSnowflake: Self = Self {
        name: "LucideThermometerSnowflake",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 12h10" /> < path d = "M9 4v16" /> < path d = "m3 9 3 3-3 3" /> < path d = "M12 6 9 9 6 6" /> < path d = "m6 18 3-3 1.5 1.5" /> < path d = "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z" /> </ svg > }
        },
    };
    const LucideThermometerSun: Self = Self {
        name: "LucideThermometerSun",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 9a4 4 0 0 0-2 7.5" /> < path d = "M12 3v2" /> < path d = "m6.6 18.4-1.4 1.4" /> < path d = "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z" /> < path d = "M4 13H2" /> < path d = "M6.34 7.34 4.93 5.93" /> </ svg > }
        },
    };
    const LucideThermometer: Self = Self {
        name: "LucideThermometer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z" /> </ svg > }
        },
    };
    const LucideThumbsDown: Self = Self {
        name: "LucideThumbsDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17 14V2" /> < path d = "M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22h0a3.13 3.13 0 0 1-3-3.88Z" /> </ svg > }
        },
    };
    const LucideThumbsUp: Self = Self {
        name: "LucideThumbsUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 10v12" /> < path d = "M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z" /> </ svg > }
        },
    };
    const LucideTicket: Self = Self {
        name: "LucideTicket",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 7v2a3 3 0 1 1 0 6v2c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2Z" /> < path d = "M13 5v2" /> < path d = "M13 17v2" /> < path d = "M13 11v2" /> </ svg > }
        },
    };
    const LucideTimerOff: Self = Self {
        name: "LucideTimerOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 2h4" /> < path d = "M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7" /> < path d = "M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2" /> < path d = "m2 2 20 20" /> < path d = "M12 12v-2" /> </ svg > }
        },
    };
    const LucideTimerReset: Self = Self {
        name: "LucideTimerReset",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 2h4" /> < path d = "M12 14v-4" /> < path d = "M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6" /> < path d = "M9 17H4v5" /> </ svg > }
        },
    };
    const LucideTimer: Self = Self {
        name: "LucideTimer",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "10" x2 = "14" y1 = "2" y2 = "2" /> < line x1 = "12" x2 = "15" y1 = "14" y2 = "11" /> < circle cx = "12" cy = "14" r = "8" /> </ svg > }
        },
    };
    const LucideToggleLeft: Self = Self {
        name: "LucideToggleLeft",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "1" y = "5" width = "22" height = "14" rx = "7" ry = "7" /> < circle cx = "8" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideToggleRight: Self = Self {
        name: "LucideToggleRight",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "1" y = "5" width = "22" height = "14" rx = "7" ry = "7" /> < circle cx = "16" cy = "12" r = "3" /> </ svg > }
        },
    };
    const LucideTornado: Self = Self {
        name: "LucideTornado",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 4H3" /> < path d = "M18 8H6" /> < path d = "M19 12H9" /> < path d = "M16 16h-6" /> < path d = "M11 20H9" /> </ svg > }
        },
    };
    const LucideToyBrick: Self = Self {
        name: "LucideToyBrick",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "8" width = "18" height = "12" rx = "1" /> < path d = "M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3" /> < path d = "M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3" /> </ svg > }
        },
    };
    const LucideTrain: Self = Self {
        name: "LucideTrain",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "4" y = "3" width = "16" height = "16" rx = "2" /> < path d = "M4 11h16" /> < path d = "M12 3v8" /> < path d = "m8 19-2 3" /> < path d = "m18 22-2-3" /> < path d = "M8 15h0" /> < path d = "M16 15h0" /> </ svg > }
        },
    };
    const LucideTrash2: Self = Self {
        name: "LucideTrash2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 6h18" /> < path d = "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" /> < path d = "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" /> < line x1 = "10" y1 = "11" x2 = "10" y2 = "17" /> < line x1 = "14" y1 = "11" x2 = "14" y2 = "17" /> </ svg > }
        },
    };
    const LucideTrash: Self = Self {
        name: "LucideTrash",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 6h18" /> < path d = "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" /> < path d = "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" /> </ svg > }
        },
    };
    const LucideTreeDeciduous: Self = Self {
        name: "LucideTreeDeciduous",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 19h8a4 4 0 0 0 3.8-2.8 4 4 0 0 0-1.6-4.5c1-1.1 1-2.7.4-4-.7-1.2-2.2-2-3.6-1.7a3 3 0 0 0-3-3 3 3 0 0 0-3 3c-1.4-.2-2.9.5-3.6 1.7-.7 1.3-.5 2.9.4 4a4 4 0 0 0-1.6 4.5A4 4 0 0 0 8 19Z" /> < path d = "M12 19v3" /> </ svg > }
        },
    };
    const LucideTreePine: Self = Self {
        name: "LucideTreePine",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z" /> < path d = "M12 22v-3" /> </ svg > }
        },
    };
    const LucideTrees: Self = Self {
        name: "LucideTrees",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 10v.2A3 3 0 0 1 8.9 16v0H5v0h0a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z" /> < path d = "M7 16v6" /> < path d = "M13 19v3" /> < path d = "M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5" /> </ svg > }
        },
    };
    const LucideTrello: Self = Self {
        name: "LucideTrello",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < rect x = "7" y = "7" width = "3" height = "9" /> < rect x = "14" y = "7" width = "3" height = "5" /> </ svg > }
        },
    };
    const LucideTrendingDown: Self = Self {
        name: "LucideTrendingDown",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "22 17 13.5 8.5 8.5 13.5 2 7" /> < polyline points = "16 17 22 17 22 11" /> </ svg > }
        },
    };
    const LucideTrendingUp: Self = Self {
        name: "LucideTrendingUp",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "22 7 13.5 15.5 8.5 10.5 2 17" /> < polyline points = "16 7 22 7 22 13" /> </ svg > }
        },
    };
    const LucideTriangle: Self = Self {
        name: "LucideTriangle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z" /> </ svg > }
        },
    };
    const LucideTrophy: Self = Self {
        name: "LucideTrophy",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 9H4.5a2.5 2.5 0 0 1 0-5H6" /> < path d = "M18 9h1.5a2.5 2.5 0 0 0 0-5H18" /> < path d = "M4 22h16" /> < path d = "M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22" /> < path d = "M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22" /> < path d = "M18 2H6v7a6 6 0 0 0 12 0V2Z" /> </ svg > }
        },
    };
    const LucideTruck: Self = Self {
        name: "LucideTruck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10 17h4V5H2v12h3" /> < path d = "M20 17h2v-3.34a4 4 0 0 0-1.17-2.83L19 9h-5" /> < path d = "M14 17h1" /> < circle cx = "7.5" cy = "17.5" r = "2.5" /> < circle cx = "17.5" cy = "17.5" r = "2.5" /> </ svg > }
        },
    };
    const LucideTv2: Self = Self {
        name: "LucideTv2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M7 21h10" /> < rect x = "2" y = "3" width = "20" height = "14" rx = "2" /> </ svg > }
        },
    };
    const LucideTv: Self = Self {
        name: "LucideTv",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "2" y = "7" width = "20" height = "15" rx = "2" ry = "2" /> < polyline points = "17 2 12 7 7 2" /> </ svg > }
        },
    };
    const LucideTwitch: Self = Self {
        name: "LucideTwitch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7" /> </ svg > }
        },
    };
    const LucideTwitter: Self = Self {
        name: "LucideTwitter",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z" /> </ svg > }
        },
    };
    const LucideType: Self = Self {
        name: "LucideType",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "4 7 4 4 20 4 20 7" /> < line x1 = "9" y1 = "20" x2 = "15" y2 = "20" /> < line x1 = "12" y1 = "4" x2 = "12" y2 = "20" /> </ svg > }
        },
    };
    const LucideUmbrella: Self = Self {
        name: "LucideUmbrella",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M22 12a9.92 9.92 0 0 0-3.24-6.41 10.12 10.12 0 0 0-13.52 0A9.92 9.92 0 0 0 2 12Z" /> < path d = "M12 12v8a2 2 0 0 0 4 0" /> < line x1 = "12" y1 = "2" x2 = "12" y2 = "3" /> </ svg > }
        },
    };
    const LucideUnderline: Self = Self {
        name: "LucideUnderline",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M6 4v6a6 6 0 0 0 12 0V4" /> < line x1 = "4" y1 = "20" x2 = "20" y2 = "20" /> </ svg > }
        },
    };
    const LucideUndo2: Self = Self {
        name: "LucideUndo2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M9 14 4 9l5-5" /> < path d = "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5v0a5.5 5.5 0 0 1-5.5 5.5H11" /> </ svg > }
        },
    };
    const LucideUndo: Self = Self {
        name: "LucideUndo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 7v6h6" /> < path d = "M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13" /> </ svg > }
        },
    };
    const LucideUnlink2: Self = Self {
        name: "LucideUnlink2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2" /> </ svg > }
        },
    };
    const LucideUnlink: Self = Self {
        name: "LucideUnlink",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71" /> < path d = "m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71" /> < line x1 = "8" y1 = "2" x2 = "8" y2 = "5" /> < line x1 = "2" y1 = "8" x2 = "5" y2 = "8" /> < line x1 = "16" y1 = "19" x2 = "16" y2 = "22" /> < line x1 = "19" y1 = "16" x2 = "22" y2 = "16" /> </ svg > }
        },
    };
    const LucideUnlock: Self = Self {
        name: "LucideUnlock",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "11" width = "18" height = "11" rx = "2" ry = "2" /> < path d = "M7 11V7a5 5 0 0 1 9.9-1" /> </ svg > }
        },
    };
    const LucideUploadCloud: Self = Self {
        name: "LucideUploadCloud",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" /> < path d = "M12 12v9" /> < path d = "m16 16-4-4-4 4" /> </ svg > }
        },
    };
    const LucideUpload: Self = Self {
        name: "LucideUpload",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" /> < polyline points = "17 8 12 3 7 8" /> < line x1 = "12" y1 = "3" x2 = "12" y2 = "15" /> </ svg > }
        },
    };
    const LucideUsb: Self = Self {
        name: "LucideUsb",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "4" cy = "20" r = "1" /> < circle cx = "10" cy = "7" r = "1" /> < path d = "M4 20 19 5" /> < path d = "m21 3-3 1 2 2 1-3Z" /> < path d = "m10 7-5 5 2 5" /> < path d = "m10 14 5 2 4-4" /> < path d = "m18 12 1-1 1 1-1 1-1-1Z" /> </ svg > }
        },
    };
    const LucideUserCheck: Self = Self {
        name: "LucideUserCheck",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < polyline points = "16 11 18 13 22 9" /> </ svg > }
        },
    };
    const LucideUserCog: Self = Self {
        name: "LucideUserCog",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < circle cx = "19" cy = "11" r = "2" /> < path d = "M19 8v1" /> < path d = "M19 13v1" /> < path d = "m21.6 9.5-.87.5" /> < path d = "m17.27 12-.87.5" /> < path d = "m21.6 12.5-.87-.5" /> < path d = "m17.27 10-.87-.5" /> </ svg > }
        },
    };
    const LucideUserMinus: Self = Self {
        name: "LucideUserMinus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < line x1 = "22" y1 = "11" x2 = "16" y2 = "11" /> </ svg > }
        },
    };
    const LucideUserPlus: Self = Self {
        name: "LucideUserPlus",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < line x1 = "19" y1 = "8" x2 = "19" y2 = "14" /> < line x1 = "22" y1 = "11" x2 = "16" y2 = "11" /> </ svg > }
        },
    };
    const LucideUserX: Self = Self {
        name: "LucideUserX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < line x1 = "17" y1 = "8" x2 = "22" y2 = "13" /> < line x1 = "22" y1 = "8" x2 = "17" y2 = "13" /> </ svg > }
        },
    };
    const LucideUser: Self = Self {
        name: "LucideUser",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" /> < circle cx = "12" cy = "7" r = "4" /> </ svg > }
        },
    };
    const LucideUsers: Self = Self {
        name: "LucideUsers",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" /> < circle cx = "9" cy = "7" r = "4" /> < path d = "M22 21v-2a4 4 0 0 0-3-3.87" /> < path d = "M16 3.13a4 4 0 0 1 0 7.75" /> </ svg > }
        },
    };
    const LucideUtensilsCrossed: Self = Self {
        name: "LucideUtensilsCrossed",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8" /> < path d = "M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7" /> < path d = "m2.1 21.8 6.4-6.3" /> < path d = "m19 5-7 7" /> </ svg > }
        },
    };
    const LucideUtensils: Self = Self {
        name: "LucideUtensils",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2" /> < path d = "M7 2v20" /> < path d = "M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7" /> </ svg > }
        },
    };
    const LucideVenetianMask: Self = Self {
        name: "LucideVenetianMask",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z" /> < path d = "M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z" /> < path d = "M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z" /> </ svg > }
        },
    };
    const LucideVerified: Self = Self {
        name: "LucideVerified",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 3c-1.2 0-2.4.6-3 1.7A3.6 3.6 0 0 0 4.6 9c-1 .6-1.7 1.8-1.7 3s.7 2.4 1.7 3c-.3 1.2 0 2.5 1 3.4.8.8 2.1 1.2 3.3 1 .6 1 1.8 1.6 3 1.6s2.4-.6 3-1.7c1.2.3 2.5 0 3.4-1 .8-.8 1.2-2 1-3.3 1-.6 1.6-1.8 1.6-3s-.6-2.4-1.7-3c.3-1.2 0-2.5-1-3.4a3.7 3.7 0 0 0-3.3-1c-.6-1-1.8-1.6-3-1.6Z" /> < path d = "m9 12 2 2 4-4" /> </ svg > }
        },
    };
    const LucideVibrateOff: Self = Self {
        name: "LucideVibrateOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m2 8 2 2-2 2 2 2-2 2" /> < path d = "m22 8-2 2 2 2-2 2 2 2" /> < path d = "M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2" /> < path d = "M16 10.34V6c0-.55-.45-1-1-1h-4.34" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideVibrate: Self = Self {
        name: "LucideVibrate",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m2 8 2 2-2 2 2 2-2 2" /> < path d = "m22 8-2 2 2 2-2 2 2 2" /> < rect x = "8" y = "5" width = "8" height = "14" rx = "1" /> </ svg > }
        },
    };
    const LucideVideoOff: Self = Self {
        name: "LucideVideoOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M10.66 6H14a2 2 0 0 1 2 2v2.34l1 1L22 8v8" /> < path d = "M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2l10 10Z" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideVideo: Self = Self {
        name: "LucideVideo",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m22 8-6 4 6 4V8Z" /> < rect x = "2" y = "6" width = "14" height = "12" rx = "2" ry = "2" /> </ svg > }
        },
    };
    const LucideView: Self = Self {
        name: "LucideView",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 12s2.545-5 7-5c4.454 0 7 5 7 5s-2.546 5-7 5c-4.455 0-7-5-7-5z" /> < path d = "M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" /> < path d = "M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2" /> < path d = "M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2" /> </ svg > }
        },
    };
    const LucideVoicemail: Self = Self {
        name: "LucideVoicemail",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "6" cy = "12" r = "4" /> < circle cx = "18" cy = "12" r = "4" /> < line x1 = "6" y1 = "16" x2 = "18" y2 = "16" /> </ svg > }
        },
    };
    const LucideVolume1: Self = Self {
        name: "LucideVolume1",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "11 5 6 9 2 9 2 15 6 15 11 19 11 5" /> < path d = "M15.54 8.46a5 5 0 0 1 0 7.07" /> </ svg > }
        },
    };
    const LucideVolume2: Self = Self {
        name: "LucideVolume2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "11 5 6 9 2 9 2 15 6 15 11 19 11 5" /> < path d = "M15.54 8.46a5 5 0 0 1 0 7.07" /> < path d = "M19.07 4.93a10 10 0 0 1 0 14.14" /> </ svg > }
        },
    };
    const LucideVolumeX: Self = Self {
        name: "LucideVolumeX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "11 5 6 9 2 9 2 15 6 15 11 19 11 5" /> < line x1 = "22" y1 = "9" x2 = "16" y2 = "15" /> < line x1 = "16" y1 = "9" x2 = "22" y2 = "15" /> </ svg > }
        },
    };
    const LucideVolume: Self = Self {
        name: "LucideVolume",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "11 5 6 9 2 9 2 15 6 15 11 19 11 5" /> </ svg > }
        },
    };
    const LucideWallet: Self = Self {
        name: "LucideWallet",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M20 12V8H6a2 2 0 0 1-2-2c0-1.1.9-2 2-2h12v4" /> < path d = "M4 6v12c0 1.1.9 2 2 2h14v-4" /> < path d = "M18 12a2 2 0 0 0-2 2c0 1.1.9 2 2 2h4v-4h-4z" /> </ svg > }
        },
    };
    const LucideWand2: Self = Self {
        name: "LucideWand2",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72Z" /> < path d = "m14 7 3 3" /> < path d = "M5 6v4" /> < path d = "M19 14v4" /> < path d = "M10 2v2" /> < path d = "M7 8H3" /> < path d = "M21 16h-4" /> < path d = "M11 3H9" /> </ svg > }
        },
    };
    const LucideWand: Self = Self {
        name: "LucideWand",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M15 4V2" /> < path d = "M15 16v-2" /> < path d = "M8 9h2" /> < path d = "M20 9h2" /> < path d = "M17.8 11.8 19 13" /> < path d = "M15 9h0" /> < path d = "M17.8 6.2 19 5" /> < path d = "m3 21 9-9" /> < path d = "M12.2 6.2 11 5" /> </ svg > }
        },
    };
    const LucideWatch: Self = Self {
        name: "LucideWatch",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "6" /> < polyline points = "12 10 12 12 13 13" /> < path d = "m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05" /> < path d = "m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05" /> </ svg > }
        },
    };
    const LucideWaves: Self = Self {
        name: "LucideWaves",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1" /> < path d = "M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1" /> < path d = "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1" /> </ svg > }
        },
    };
    const LucideWebcam: Self = Self {
        name: "LucideWebcam",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "10" r = "8" /> < circle cx = "12" cy = "10" r = "3" /> < path d = "M7 22h10" /> < path d = "M12 22v-4" /> </ svg > }
        },
    };
    const LucideWebhook: Self = Self {
        name: "LucideWebhook",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2" /> < path d = "m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06" /> < path d = "m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8" /> </ svg > }
        },
    };
    const LucideWifiOff: Self = Self {
        name: "LucideWifiOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> < path d = "M8.5 16.5a5 5 0 0 1 7 0" /> < path d = "M2 8.82a15 15 0 0 1 4.17-2.65" /> < path d = "M10.66 5c4.01-.36 8.14.9 11.34 3.76" /> < path d = "M16.85 11.25a10 10 0 0 1 2.22 1.68" /> < path d = "M5 13a10 10 0 0 1 5.24-2.76" /> < line x1 = "12" y1 = "20" x2 = "12.01" y2 = "20" /> </ svg > }
        },
    };
    const LucideWifi: Self = Self {
        name: "LucideWifi",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M5 13a10 10 0 0 1 14 0" /> < path d = "M8.5 16.5a5 5 0 0 1 7 0" /> < path d = "M2 8.82a15 15 0 0 1 20 0" /> < line x1 = "12" y1 = "20" x2 = "12.01" y2 = "20" /> </ svg > }
        },
    };
    const LucideWind: Self = Self {
        name: "LucideWind",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M17.7 7.7a2.5 2.5 0 1 1 1.8 4.3H2" /> < path d = "M9.6 4.6A2 2 0 1 1 11 8H2" /> < path d = "M12.6 19.4A2 2 0 1 0 14 16H2" /> </ svg > }
        },
    };
    const LucideWine: Self = Self {
        name: "LucideWine",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M8 22h8" /> < path d = "M7 10h10" /> < path d = "M12 15v7" /> < path d = "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z" /> </ svg > }
        },
    };
    const LucideWrapText: Self = Self {
        name: "LucideWrapText",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "3" y1 = "6" x2 = "21" y2 = "6" /> < path d = "M3 12h15a3 3 0 1 1 0 6h-4" /> < polyline points = "16 16 14 18 16 20" /> < line x1 = "3" y1 = "18" x2 = "10" y2 = "18" /> </ svg > }
        },
    };
    const LucideWrench: Self = Self {
        name: "LucideWrench",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z" /> </ svg > }
        },
    };
    const LucideXCircle: Self = Self {
        name: "LucideXCircle",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "12" cy = "12" r = "10" /> < line x1 = "15" y1 = "9" x2 = "9" y2 = "15" /> < line x1 = "9" y1 = "9" x2 = "15" y2 = "15" /> </ svg > }
        },
    };
    const LucideXOctagon: Self = Self {
        name: "LucideXOctagon",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2" /> < line x1 = "15" y1 = "9" x2 = "9" y2 = "15" /> < line x1 = "9" y1 = "9" x2 = "15" y2 = "15" /> </ svg > }
        },
    };
    const LucideXSquare: Self = Self {
        name: "LucideXSquare",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < rect x = "3" y = "3" width = "18" height = "18" rx = "2" ry = "2" /> < line x1 = "9" y1 = "9" x2 = "15" y2 = "15" /> < line x1 = "15" y1 = "9" x2 = "9" y2 = "15" /> </ svg > }
        },
    };
    const LucideX: Self = Self {
        name: "LucideX",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < line x1 = "18" y1 = "6" x2 = "6" y2 = "18" /> < line x1 = "6" y1 = "6" x2 = "18" y2 = "18" /> </ svg > }
        },
    };
    const LucideYoutube: Self = Self {
        name: "LucideYoutube",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < path d = "M12 19c-2.3 0-6.4-.2-8.1-.6-.7-.2-1.2-.7-1.4-1.4-.3-1.1-.5-3.4-.5-5s.2-3.9.5-5c.2-.7.7-1.2 1.4-1.4C5.6 5.2 9.7 5 12 5s6.4.2 8.1.6c.7.2 1.2.7 1.4 1.4.3 1.1.5 3.4.5 5s-.2 3.9-.5 5c-.2.7-.7 1.2-1.4 1.4-1.7.4-5.8.6-8.1.6 0 0 0 0 0 0z" /> < polygon points = "10 15 15 12 10 9" /> </ svg > }
        },
    };
    const LucideZapOff: Self = Self {
        name: "LucideZapOff",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polyline points = "12.41 6.75 13 2 10.57 4.92" /> < polyline points = "18.57 12.91 21 10 15.66 10" /> < polyline points = "8 8 3 14 12 14 11 22 16 16" /> < line x1 = "2" y1 = "2" x2 = "22" y2 = "22" /> </ svg > }
        },
    };
    const LucideZap: Self = Self {
        name: "LucideZap",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < polygon points = "13 2 3 14 12 14 11 22 21 10 12 10 13 2" /> </ svg > }
        },
    };
    const LucideZoomIn: Self = Self {
        name: "LucideZoomIn",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "11" cy = "11" r = "8" /> < line x1 = "21" y1 = "21" x2 = "16.65" y2 = "16.65" /> < line x1 = "11" y1 = "8" x2 = "11" y2 = "14" /> < line x1 = "8" y1 = "11" x2 = "14" y2 = "11" /> </ svg > }
        },
    };
    const LucideZoomOut: Self = Self {
        name: "LucideZoomOut",
        html: #[inline(never)]
        |crate::IconProps {
                   icon_id: _,
                   title,
                   width,
                   height,
                   onclick,
                   oncontextmenu,
                   class,
                   style,
                   role,
               }: &crate::IconProps|
         -> yew::Html {
            yew::html! { < svg xmlns = "http://www.w3.org/2000/svg" data - license = "From https://github.com/lucide-icons/lucide - Licensed under ISC" width = { width . clone () } height = { height . clone () } onclick = { onclick . clone () } oncontextmenu = { oncontextmenu . clone () } class = { class . clone () } style = { style . clone () } role = { role . clone () } viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke - width = "2" stroke - linecap = "round" stroke - linejoin = "round" > if let Some (title) = title . clone () { < title > { title } </ title > } < circle cx = "11" cy = "11" r = "8" /> < line x1 = "21" y1 = "21" x2 = "16.65" y2 = "16.65" /> < line x1 = "8" y1 = "11" x2 = "14" y2 = "11" /> </ svg > }
        },
    };
}
